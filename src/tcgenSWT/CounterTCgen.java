package tcgenSWT;

import java.util.ArrayList;
import java.util.List;
import java.io.*;
import java.nio.*;
import java.lang.String;

import javax.xml.parsers.*;
import javax.xml.transform.TransformerException;

import org.w3c.dom.*;
import org.xml.sax.*;

import ccu.pllab.tcgen.pathCLPFinder.CLPSolver;
import ccu.pllab.tcgen.AbstractCLG.*;
import ccu.pllab.tcgen.AbstractConstraint.*;
import ccu.pllab.tcgen.AbstractType.*;
import ccu.pllab.tcgen.DataWriter.DataWriter;
import ccu.pllab.tcgen.AbstractSyntaxTree.*;
import ccu.pllab.tcgen.TestCase.TestData;
import ccu.pllab.tcgen.clg2path.CriterionFactory.Criterion;
import ccu.pllab.tcgen.clgGraph2Path.*;
import ccu.pllab.tcgen.exe.main.Main;
import ccu.pllab.tcgen.pathCLP2data.CLP2Data;
import ccu.pllab.tcgen.transform.CLG2Path;
import tcgenplugin_2.handlers.BlackBoxHandler;
import tudresden.ocl20.pivot.model.ModelAccessException;
import tudresden.ocl20.pivot.parser.ParseException;
import tudresden.ocl20.pivot.tools.template.exception.TemplateException;
import com.parctechnologies.eclipse.*;

public class CounterTCgen {
	
	public static void main(String[] args) throws EclipseException, IOException {
		
		long startTime = System.currentTimeMillis();
		
		try {
			DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder domBuilder = domFactory.newDocumentBuilder();
			InputStream input = null;
			input = new FileInputStream("C://Users//Benson//Downloads//SWT//範例Counter//CounterGUISpec.xml");
			Document doc = domBuilder.parse(input);
			Element root = doc.getDocumentElement();	
			NodeList nList = root.getChildNodes();	
			Node Label = nList.item(1);
			Node Text = nList.item(3);
			Node Button = nList.item(5);
			String Shell_text = root.getAttribute("text");
			String Shell_bounds = root.getAttribute("bounds");			
			String Shell_layout = root.getAttribute("layout");
			String Shell_enabled = root.getAttribute("enabled");
			String Shell_minimumsize = root.getAttribute("minimumsize");
			String Shell_modified = root.getAttribute("modified");
			String Shell_textdirection = root.getAttribute("textDirection");
			String Shell_touchenabled = root.getAttribute("touchenabled");
			String Label_text = ((Element) Label).getAttribute("text");
			String Label_bounds = ((Element) Label).getAttribute("bounds");
			String Label_alignment = ((Element) Label).getAttribute("alignment");
			String Label_enabled = ((Element) Label).getAttribute("enabled");
			String Label_textdirection = ((Element) Label).getAttribute("textDirection");
			String Label_touchenabled = ((Element) Label).getAttribute("touchenabled");			
			String Text_bounds = ((Element) Text).getAttribute("bounds");
			String Text_editable = ((Element) Text).getAttribute("editable");
			String Text_enabled = ((Element) Text).getAttribute("enabled");
			String Text_textdirection = ((Element) Text).getAttribute("textDirection");
			String Text_touchenabled = ((Element) Text).getAttribute("touchenabled");	
			String Button_text = ((Element) Button).getAttribute("text");	
			String Button_bounds = ((Element) Button).getAttribute("bounds");
			String Button_alignment = ((Element) Button).getAttribute("alignment");
			String Button_enabled = ((Element) Button).getAttribute("enabled");
			String Button_grayed = ((Element) Button).getAttribute("grayed");
			String Button_textdirection = ((Element) Button).getAttribute("textDirection");
			String Button_touchenabled = ((Element) Button).getAttribute("touchenabled");
			String Button_selection = ((Element) Button).getAttribute("selection");	
			String Button_selectionlistener = ((Element) Button).getAttribute("selectionlistener");
		} catch (ParserConfigurationException e) {
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (SAXException e) {
			e.printStackTrace();
		}
		
		//設置CLG限制式的文字節點內容
		CLGLiteralNode Result = new CLGLiteralNode("Result", "int");
		CLGLiteralNode Nu = new CLGLiteralNode("null", "string");
		CLGLiteralNode Suc = new CLGLiteralNode("success", "string");
		CLGLiteralNode Fa = new CLGLiteralNode("fail", "string");
		CLGLiteralNode Exception = new CLGLiteralNode("Exception", "int");
		CLGLiteralNode Ex = new CLGLiteralNode("exception", "string");		
		CLGLiteralNode Shell = new CLGLiteralNode("Counter_Shell", "int");
		CLGLiteralNode Shell_Layout = new CLGLiteralNode("Counter_Shell_layout", "int");
		CLGLiteralNode Shell_absoluteLayout = new CLGLiteralNode("absoluteLayout", "string");
		CLGLiteralNode Shell_GridLayout = new CLGLiteralNode("GridLayout", "string");
		CLGLiteralNode Shell_FillLayout = new CLGLiteralNode("FillLayout", "string");
		CLGLiteralNode Shell_RowLayout = new CLGLiteralNode("RowLayout", "string");
		CLGLiteralNode Shell_FormLayout = new CLGLiteralNode("FormLayout", "string");
		CLGLiteralNode Shell_StackLayout = new CLGLiteralNode("StackLayout", "string");
		CLGLiteralNode Shell_Bounds = new CLGLiteralNode("Counter_Shell_bounds", "int");
		CLGLiteralNode Shell_X = new CLGLiteralNode("Counter_Shell_bounds_x", "int");
		CLGLiteralNode Shell_X_value = new CLGLiteralNode("0", "int");
		CLGLiteralNode Shell_Y = new CLGLiteralNode("Counter_Shell_bounds_y", "int");
		CLGLiteralNode Shell_Y_value = new CLGLiteralNode("0", "int");
		CLGLiteralNode Shell_Width = new CLGLiteralNode("Counter_Shell_bounds_width", "int");
		CLGLiteralNode Shell_Width_value = new CLGLiteralNode("250", "int");
		CLGLiteralNode Shell_Height = new CLGLiteralNode("Counter_Shell_bounds_height", "int");
		CLGLiteralNode Shell_Height_value = new CLGLiteralNode("100", "int");
		CLGLiteralNode Shell_Text = new CLGLiteralNode("Counter_Shell_text", "int");
		CLGLiteralNode Shell_Application = new CLGLiteralNode("Application", "string");
		CLGLiteralNode Shell_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Shell_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Shell_Enabled = new CLGLiteralNode("Counter_Shell_enabled", "int");
		CLGLiteralNode Shell_Minimumsize = new CLGLiteralNode("Counter_Shell_minimumsize", "int");
		CLGLiteralNode Shell_Minimumsize_X = new CLGLiteralNode("Counter_Shell_minimumsize_X", "int");
		CLGLiteralNode Shell_Minimumsize_Y = new CLGLiteralNode("Counter_Shell_minimumsize_Y", "int");
		CLGLiteralNode Shell_MinimumsizeX= new CLGLiteralNode("136", "int");
		CLGLiteralNode Shell_MinimumsizeY = new CLGLiteralNode("39", "int");
		CLGLiteralNode Shell_Modified = new CLGLiteralNode("Counter_Shell_modified", "int");
		CLGLiteralNode Shell_Touchenabled = new CLGLiteralNode("Counter_Shell_touchenabled", "int");
		CLGLiteralNode Shell_Textdirection = new CLGLiteralNode("Counter_Shell_textdirection", "int");
		CLGLiteralNode Shell_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Shell_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Shell_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Label = new CLGLiteralNode("Counter_Label", "int");
		CLGLiteralNode Label_Text = new CLGLiteralNode("Counter_Label_text", "int");
		CLGLiteralNode Label_counter = new CLGLiteralNode("counter", "string");
		CLGLiteralNode Label_Bounds = new CLGLiteralNode("Counter_Label_bounds", "int");
		CLGLiteralNode Label_X = new CLGLiteralNode("Counter_Label_bounds_x", "int");
		CLGLiteralNode Label_X_value = new CLGLiteralNode("10", "int");
		CLGLiteralNode Label_Y = new CLGLiteralNode("Counter_Label_bounds_y", "int");
		CLGLiteralNode Label_Y_value = new CLGLiteralNode("10", "int");
		CLGLiteralNode Label_Width = new CLGLiteralNode("Counter_Label_bounds_width", "int");
		CLGLiteralNode Label_Width_value = new CLGLiteralNode("60", "int");
		CLGLiteralNode Label_Height = new CLGLiteralNode("Counter_Label_bounds_height", "int");
		CLGLiteralNode Label_Height_value = new CLGLiteralNode("15", "int");
		CLGLiteralNode Label_Alignment = new CLGLiteralNode("Counter_Label_alignment", "int");
		CLGLiteralNode Label_Enabled = new CLGLiteralNode("Counter_Label_enabled", "int");
		CLGLiteralNode Label_Alignment_left = new CLGLiteralNode("16384", "int");
		CLGLiteralNode Label_Alignment_center = new CLGLiteralNode("16777216", "int");
		CLGLiteralNode Label_Alignment_right = new CLGLiteralNode("131072", "int");
		CLGLiteralNode Label_Textdirection = new CLGLiteralNode("Counter_Label_textdirection", "int");
		CLGLiteralNode Label_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Label_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Label_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Label_Touchenabled = new CLGLiteralNode("Counter_Label_touchenabled", "int");
		CLGLiteralNode Label_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Label_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Text = new CLGLiteralNode("Counter_Text", "int");
		CLGLiteralNode Text_Text = new CLGLiteralNode("Counter_Text_text", "int");
		CLGLiteralNode Text_empty = new CLGLiteralNode("''''", "string");
		CLGLiteralNode Text_Bounds = new CLGLiteralNode("Counter_Text_bounds", "int");
		CLGLiteralNode Text_X = new CLGLiteralNode("Counter_Text_bounds_x", "int");
		CLGLiteralNode Text_X_value = new CLGLiteralNode("70", "int");
		CLGLiteralNode Text_Y = new CLGLiteralNode("Counter_Text_bounds_y", "int");
		CLGLiteralNode Text_Y_value = new CLGLiteralNode("10", "int");
		CLGLiteralNode Text_Width = new CLGLiteralNode("Counter_Text_bounds_width", "int");
		CLGLiteralNode Text_Width_value = new CLGLiteralNode("70", "int");
		CLGLiteralNode Text_Height = new CLGLiteralNode("Counter_Text_bounds_height", "int");
		CLGLiteralNode Text_Height_value = new CLGLiteralNode("20", "int");
		CLGLiteralNode Text_Editable = new CLGLiteralNode("Counter_Text_editable", "int");
		CLGLiteralNode Text_Enabled = new CLGLiteralNode("Counter_Text_enabled", "int");
		CLGLiteralNode Text_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Text_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Text_Textdirection = new CLGLiteralNode("Counter_Text_textdirection", "int");
		CLGLiteralNode Text_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Text_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Text_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Text_Touchenabled = new CLGLiteralNode("Counter_Text_touchenabled", "int");
		CLGLiteralNode Button = new CLGLiteralNode("Counter_Button", "int");
		CLGLiteralNode Button_Text = new CLGLiteralNode("Counter_Button_text", "int");
		CLGLiteralNode Button_count = new CLGLiteralNode("count", "string");
		CLGLiteralNode Button_Bounds = new CLGLiteralNode("Counter_Button_bounds", "int");
		CLGLiteralNode Button_X = new CLGLiteralNode("Counter_Button_bounds_x", "int");
		CLGLiteralNode Button_X_value = new CLGLiteralNode("150", "int");
		CLGLiteralNode Button_Y = new CLGLiteralNode("Counter_Button_bounds_y", "int");
		CLGLiteralNode Button_Y_value = new CLGLiteralNode("10", "int");
		CLGLiteralNode Button_Width = new CLGLiteralNode("Counter_Button_bounds_width", "int");
		CLGLiteralNode Button_Width_value = new CLGLiteralNode("75", "int");
		CLGLiteralNode Button_Height = new CLGLiteralNode("Counter_Button_bounds_height", "int");
		CLGLiteralNode Button_Height_value = new CLGLiteralNode("25", "int");
		CLGLiteralNode Button_Alignment = new CLGLiteralNode("Counter_Button_alignment", "int");
		CLGLiteralNode Button_Alignment_left = new CLGLiteralNode("16384", "int");
		CLGLiteralNode Button_Alignment_center = new CLGLiteralNode("16777216", "int");
		CLGLiteralNode Button_Alignment_right = new CLGLiteralNode("131072", "int");
		CLGLiteralNode Button_Enabled = new CLGLiteralNode("Counter_Button_enabled", "int");
		CLGLiteralNode Button_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Button_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Button_Grayed = new CLGLiteralNode("Counter_Button_grayed", "int");
		CLGLiteralNode Button_Textdirection = new CLGLiteralNode("Counter_Button_textdirection", "int");
		CLGLiteralNode Button_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Button_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Button_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Button_Touchenabled = new CLGLiteralNode("Counter_Button_touchenabled", "int");
		CLGLiteralNode Button_Selection = new CLGLiteralNode("Counter_Button_selection", "int");
		CLGLiteralNode Button_SelectionListener = new CLGLiteralNode("Counter_Button_selectionlistener", "int");
		CLGLiteralNode Button_Increment = new CLGLiteralNode("increment", "int");
		CLGLiteralNode Mabel_X = new CLGLiteralNode("Counter_Label_bounds_x", "int");
		CLGLiteralNode Mabel_X_value = new CLGLiteralNode("10", "int");
		CLGLiteralNode Mabel_Y = new CLGLiteralNode("Counter_Label_bounds_y", "int");
		CLGLiteralNode Mabel_Y_value = new CLGLiteralNode("10", "int");
		CLGLiteralNode Mabel_Width = new CLGLiteralNode("Counter_Label_bounds_width", "int");
		CLGLiteralNode Mabel_Width_value = new CLGLiteralNode("60", "int");
		CLGLiteralNode Mabel_Height = new CLGLiteralNode("Counter_Label_bounds_height", "int");
		CLGLiteralNode Mabel_Height_value = new CLGLiteralNode("15", "int");
		
		//設置CLG限制式的運算節點內容並放入限制式
		CLGOperatorNode S_TE = new CLGOperatorNode("=");
		S_TE.setLeftOperand(Shell_Text);
		S_TE.setRightOperand(Shell_Application);
		CLGOperatorNode S_TNE = new CLGOperatorNode("<>");
		S_TNE.setLeftOperand(Shell_Text);
		S_TNE.setRightOperand(Shell_Application);
		CLGOperatorNode S_BHE = new CLGOperatorNode("=");
		S_BHE.setLeftOperand(Shell_Height);
		S_BHE.setRightOperand(Shell_Height_value);
		CLGOperatorNode S_BHNE = new CLGOperatorNode("<>");
		S_BHNE.setLeftOperand(Shell_Height);
		S_BHNE.setRightOperand(Shell_Height_value);
		CLGOperatorNode S_BWE = new CLGOperatorNode("=");
		S_BWE.setLeftOperand(Shell_Width);
		S_BWE.setRightOperand(Shell_Width_value);
		CLGOperatorNode S_BWNE = new CLGOperatorNode("<>");
		S_BWNE.setLeftOperand(Shell_Width);
		S_BWNE.setRightOperand(Shell_Width_value);
		CLGOperatorNode S_BYE = new CLGOperatorNode("=");
		S_BYE.setLeftOperand(Shell_Y);
		S_BYE.setRightOperand(Shell_Y_value);
		CLGOperatorNode S_BYNE = new CLGOperatorNode("<>");
		S_BYNE.setLeftOperand(Shell_Y);
		S_BYNE.setRightOperand(Shell_Y_value);
		CLGOperatorNode S_BXE = new CLGOperatorNode("=");
		S_BXE.setLeftOperand(Shell_X);
		S_BXE.setRightOperand(Shell_X_value);
		CLGOperatorNode S_BXNE = new CLGOperatorNode("<>");
		S_BXNE.setLeftOperand(Shell_X);
		S_BXNE.setRightOperand(Shell_X_value);
		CLGOperatorNode S_ET = new CLGOperatorNode("=");
		S_ET.setLeftOperand(Shell_Enabled);
		S_ET.setRightOperand(Shell_True);
		CLGOperatorNode S_EF = new CLGOperatorNode("=");
		S_EF.setLeftOperand(Shell_Enabled);
		S_EF.setRightOperand(Shell_False);
		CLGOperatorNode S_MXE = new CLGOperatorNode("=");
		S_MXE.setLeftOperand(Shell_Minimumsize_X);
		S_MXE.setRightOperand(Shell_MinimumsizeX);
		CLGOperatorNode S_MXNE = new CLGOperatorNode("<>");
		S_MXNE.setLeftOperand(Shell_Minimumsize_X);
		S_MXNE.setRightOperand(Shell_MinimumsizeX);
		CLGOperatorNode S_MYE = new CLGOperatorNode("=");
		S_MYE.setLeftOperand(Shell_Minimumsize_Y);
		S_MYE.setRightOperand(Shell_MinimumsizeY);
		CLGOperatorNode S_MYNE = new CLGOperatorNode("<>");
		S_MYNE.setLeftOperand(Shell_Minimumsize_Y);
		S_MYNE.setRightOperand(Shell_MinimumsizeY);
		CLGOperatorNode S_MT = new CLGOperatorNode("=");
		S_MT.setLeftOperand(Shell_Modified);
		S_MT.setRightOperand(Shell_True);
		CLGOperatorNode S_MF = new CLGOperatorNode("=");
		S_MF.setLeftOperand(Shell_Modified);
		S_MF.setRightOperand(Shell_False);
		CLGOperatorNode S_TT = new CLGOperatorNode("=");
		S_TT.setLeftOperand(Shell_Touchenabled);
		S_TT.setRightOperand(Shell_True);
		CLGOperatorNode S_TF = new CLGOperatorNode("=");
		S_TF.setLeftOperand(Shell_Touchenabled);
		S_TF.setRightOperand(Shell_False);
		CLGOperatorNode S_TDLR = new CLGOperatorNode("=");
		S_TDLR.setLeftOperand(Shell_Textdirection);
		S_TDLR.setRightOperand(Shell_TextdirectionL2R);
		CLGOperatorNode S_TDNLR = new CLGOperatorNode("<>");
		S_TDNLR.setLeftOperand(Shell_Textdirection);
		S_TDNLR.setRightOperand(Shell_TextdirectionL2R);
		CLGOperatorNode S_TDRL = new CLGOperatorNode("=");
		S_TDRL.setLeftOperand(Shell_Textdirection);
		S_TDRL.setRightOperand(Shell_TextdirectionR2L);
		CLGOperatorNode S_TDNRL = new CLGOperatorNode("<>");
		S_TDNRL.setLeftOperand(Shell_Textdirection);
		S_TDNRL.setRightOperand(Shell_TextdirectionR2L);
		CLGOperatorNode S_TDA = new CLGOperatorNode("=");
		S_TDA.setLeftOperand(Shell_Textdirection);
		S_TDA.setRightOperand(Shell_TextdirectionAuto);
		CLGOperatorNode S_TDNA = new CLGOperatorNode("<>");
		S_TDNA.setLeftOperand(Shell_Textdirection);
		S_TDNA.setRightOperand(Shell_TextdirectionAuto);
		CLGOperatorNode S_LAE = new CLGOperatorNode("=");
		S_LAE.setLeftOperand(Shell_Layout);
		S_LAE.setRightOperand(Shell_absoluteLayout);
		CLGOperatorNode S_LANE = new CLGOperatorNode("<>");
		S_LANE.setLeftOperand(Shell_Layout);
		S_LANE.setRightOperand(Shell_absoluteLayout);
		CLGOperatorNode S_LGE = new CLGOperatorNode("=");
		S_LGE.setLeftOperand(Shell_Layout);
		S_LGE.setRightOperand(Shell_GridLayout);
		CLGOperatorNode S_LGNE = new CLGOperatorNode("<>");
		S_LGNE.setLeftOperand(Shell_Layout);
		S_LGNE.setRightOperand(Shell_GridLayout);
		CLGOperatorNode S_LFE = new CLGOperatorNode("=");
		S_LFE.setLeftOperand(Shell_Layout);
		S_LFE.setRightOperand(Shell_FillLayout);
		CLGOperatorNode S_LFNE = new CLGOperatorNode("<>");
		S_LFNE.setLeftOperand(Shell_Layout);
		S_LFNE.setRightOperand(Shell_FillLayout);
		CLGOperatorNode S_LRE = new CLGOperatorNode("=");
		S_LRE.setLeftOperand(Shell_Layout);
		S_LRE.setRightOperand(Shell_RowLayout);
		CLGOperatorNode S_LRNE = new CLGOperatorNode("<>");
		S_LRNE.setLeftOperand(Shell_Layout);
		S_LRNE.setRightOperand(Shell_RowLayout);
		CLGOperatorNode S_LFOE = new CLGOperatorNode("=");
		S_LFOE.setLeftOperand(Shell_Layout);
		S_LFOE.setRightOperand(Shell_FormLayout);
		CLGOperatorNode S_LFONE = new CLGOperatorNode("<>");
		S_LFONE.setLeftOperand(Shell_Layout);
		S_LFONE.setRightOperand(Shell_FormLayout);
		CLGOperatorNode S_LSE = new CLGOperatorNode("=");
		S_LSE.setLeftOperand(Shell_Layout);
		S_LSE.setRightOperand(Shell_StackLayout);
		CLGOperatorNode S_LSNE = new CLGOperatorNode("<>");
		S_LSNE.setLeftOperand(Shell_Layout);
		S_LSNE.setRightOperand(Shell_StackLayout);
		CLGOperatorNode L_TE = new CLGOperatorNode("=");
		L_TE.setLeftOperand(Label_Text);
		L_TE.setRightOperand(Label_counter);
		CLGOperatorNode L_TNE = new CLGOperatorNode("<>");
		L_TNE.setLeftOperand(Label_Text);
		L_TNE.setRightOperand(Label_counter);
		CLGOperatorNode L_BHE = new CLGOperatorNode("=");
		L_BHE.setLeftOperand(Label_Height);
		L_BHE.setRightOperand(Label_Height_value);
		CLGOperatorNode L_BHNE = new CLGOperatorNode("<>");
		L_BHNE.setLeftOperand(Label_Height);
		L_BHNE.setRightOperand(Label_Height_value);
		CLGOperatorNode L_BWE = new CLGOperatorNode("=");
		L_BWE.setLeftOperand(Label_Width);
		L_BWE.setRightOperand(Label_Width_value);
		CLGOperatorNode L_BWNE = new CLGOperatorNode("<>");
		L_BWNE.setLeftOperand(Label_Width);
		L_BWNE.setRightOperand(Label_Width_value);
		CLGOperatorNode L_BYE = new CLGOperatorNode("=");
		L_BYE.setLeftOperand(Label_Y);
		L_BYE.setRightOperand(Label_Y_value);
		CLGOperatorNode L_BYNE = new CLGOperatorNode("<>");
		L_BYNE.setLeftOperand(Label_Y);
		L_BYNE.setRightOperand(Label_Y_value);
		CLGOperatorNode L_BXE = new CLGOperatorNode("=");
		L_BXE.setLeftOperand(Label_X);
		L_BXE.setRightOperand(Label_X_value);
		CLGOperatorNode L_BXNE = new CLGOperatorNode("<>");
		L_BXNE.setLeftOperand(Label_X);
		L_BXNE.setRightOperand(Label_X_value);
		CLGOperatorNode L_ET = new CLGOperatorNode("=");
		L_ET.setLeftOperand(Label_Enabled);
		L_ET.setRightOperand(Label_True);
		CLGOperatorNode L_EF = new CLGOperatorNode("=");
		L_EF.setLeftOperand(Label_Enabled);
		L_EF.setRightOperand(Label_False);
		CLGOperatorNode L_TDLR = new CLGOperatorNode("=");
		L_TDLR.setLeftOperand(Label_Textdirection);
		L_TDLR.setRightOperand(Label_TextdirectionL2R);
		CLGOperatorNode L_TDNLR = new CLGOperatorNode("<>");
		L_TDNLR.setLeftOperand(Label_Textdirection);
		L_TDNLR.setRightOperand(Label_TextdirectionL2R);
		CLGOperatorNode L_TDRL = new CLGOperatorNode("=");
		L_TDRL.setLeftOperand(Label_Textdirection);
		L_TDRL.setRightOperand(Label_TextdirectionR2L);
		CLGOperatorNode L_TDNRL = new CLGOperatorNode("<>");
		L_TDNRL.setLeftOperand(Label_Textdirection);
		L_TDNRL.setRightOperand(Label_TextdirectionR2L);
		CLGOperatorNode L_TDA = new CLGOperatorNode("=");
		L_TDA.setLeftOperand(Label_Textdirection);
		L_TDA.setRightOperand(Label_TextdirectionAuto);
		CLGOperatorNode L_TDNA = new CLGOperatorNode("<>");
		L_TDNA.setLeftOperand(Label_Textdirection);
		L_TDNA.setRightOperand(Label_TextdirectionAuto);
		CLGOperatorNode L_AR = new CLGOperatorNode("=");
		L_AR.setLeftOperand(Label_Alignment);
		L_AR.setRightOperand(Label_Alignment_right);
		CLGOperatorNode L_ANR = new CLGOperatorNode("<>");
		L_ANR.setLeftOperand(Label_Alignment);
		L_ANR.setRightOperand(Label_Alignment_right);
		CLGOperatorNode L_AL = new CLGOperatorNode("=");
		L_AL.setLeftOperand(Label_Alignment);
		L_AL.setRightOperand(Label_Alignment_left);
		CLGOperatorNode L_ANL = new CLGOperatorNode("<>");
		L_ANL.setLeftOperand(Label_Alignment);
		L_ANL.setRightOperand(Label_Alignment_left);
		CLGOperatorNode L_AC = new CLGOperatorNode("=");
		L_AC.setLeftOperand(Label_Alignment);
		L_AC.setRightOperand(Label_Alignment_center);
		CLGOperatorNode L_ANC = new CLGOperatorNode("<>");
		L_ANC.setLeftOperand(Label_Alignment);
		L_ANC.setRightOperand(Label_Alignment_center);
		CLGOperatorNode L_TT = new CLGOperatorNode("=");
		L_TT.setLeftOperand(Label_Touchenabled);
		L_TT.setRightOperand(Label_True);
		CLGOperatorNode L_TF = new CLGOperatorNode("=");
		L_TF.setLeftOperand(Label_Touchenabled);
		L_TF.setRightOperand(Label_False);	
		CLGOperatorNode T_BHE = new CLGOperatorNode("=");
		T_BHE.setLeftOperand(Text_Height);
		T_BHE.setRightOperand(Text_Height_value);
		CLGOperatorNode T_BHNE = new CLGOperatorNode("<>");
		T_BHNE.setLeftOperand(Text_Height);
		T_BHNE.setRightOperand(Text_Height_value);
		CLGOperatorNode T_BWE = new CLGOperatorNode("=");
		T_BWE.setLeftOperand(Text_Width);
		T_BWE.setRightOperand(Text_Width_value);
		CLGOperatorNode T_BWNE = new CLGOperatorNode("<>");
		T_BWNE.setLeftOperand(Text_Width);
		T_BWNE.setRightOperand(Text_Width_value);
		CLGOperatorNode T_BYE = new CLGOperatorNode("=");
		T_BYE.setLeftOperand(Text_Y);
		T_BYE.setRightOperand(Text_Y_value);
		CLGOperatorNode T_BYNE = new CLGOperatorNode("<>");
		T_BYNE.setLeftOperand(Text_Y);
		T_BYNE.setRightOperand(Text_Y_value);
		CLGOperatorNode T_BXE = new CLGOperatorNode("=");
		T_BXE.setLeftOperand(Text_X);
		T_BXE.setRightOperand(Text_X_value);
		CLGOperatorNode T_BXNE = new CLGOperatorNode("<>");
		T_BXNE.setLeftOperand(Text_X);
		T_BXNE.setRightOperand(Text_X_value);
		CLGOperatorNode T_ET = new CLGOperatorNode("=");
		T_ET.setLeftOperand(Text_Enabled);
		T_ET.setRightOperand(Text_True);
		CLGOperatorNode T_EF = new CLGOperatorNode("=");
		T_EF.setLeftOperand(Text_Enabled);
		T_EF.setRightOperand(Text_False);
		CLGOperatorNode T_EDT = new CLGOperatorNode("=");
		T_EDT.setLeftOperand(Text_Editable);
		T_EDT.setRightOperand(Text_True);
		CLGOperatorNode T_EDF = new CLGOperatorNode("=");
		T_EDF.setLeftOperand(Text_Editable);
		T_EDF.setRightOperand(Text_False);
		CLGOperatorNode T_TT = new CLGOperatorNode("=");
		T_TT.setLeftOperand(Text_Touchenabled);
		T_TT.setRightOperand(Text_True);
		CLGOperatorNode T_TF = new CLGOperatorNode("=");
		T_TF.setLeftOperand(Text_Touchenabled);
		T_TF.setRightOperand(Text_False);
		CLGOperatorNode T_TDLR = new CLGOperatorNode("=");
		T_TDLR.setLeftOperand(Text_Textdirection);
		T_TDLR.setRightOperand(Text_TextdirectionL2R);
		CLGOperatorNode T_TDNLR = new CLGOperatorNode("<>");
		T_TDNLR.setLeftOperand(Text_Textdirection);
		T_TDNLR.setRightOperand(Text_TextdirectionL2R);
		CLGOperatorNode T_TDRL = new CLGOperatorNode("=");
		T_TDRL.setLeftOperand(Text_Textdirection);
		T_TDRL.setRightOperand(Text_TextdirectionR2L);
		CLGOperatorNode T_TDNRL = new CLGOperatorNode("<>");
		T_TDNRL.setLeftOperand(Text_Textdirection);
		T_TDNRL.setRightOperand(Text_TextdirectionR2L);
		CLGOperatorNode T_TDA = new CLGOperatorNode("=");
		T_TDA.setLeftOperand(Text_Textdirection);
		T_TDA.setRightOperand(Text_TextdirectionAuto);
		CLGOperatorNode T_TDNA = new CLGOperatorNode("<>");
		T_TDNA.setLeftOperand(Text_Textdirection);
		T_TDNA.setRightOperand(Text_TextdirectionAuto);
		CLGOperatorNode T_T = new CLGOperatorNode("=");
		T_T.setLeftOperand(Text_Text);
		T_T.setRightOperand(Text_empty);
		CLGOperatorNode T_NT = new CLGOperatorNode("<>");
		T_NT.setLeftOperand(Text_Text);
		T_NT.setRightOperand(Text_empty);
		CLGOperatorNode B_TE = new CLGOperatorNode("=");
		B_TE.setLeftOperand(Button_Text);
		B_TE.setRightOperand(Button_count);
		CLGOperatorNode B_TNE = new CLGOperatorNode("<>");
		B_TNE.setLeftOperand(Button_Text);
		B_TNE.setRightOperand(Button_count);
		CLGOperatorNode B_BHE = new CLGOperatorNode("=");
		B_BHE.setLeftOperand(Button_Height);
		B_BHE.setRightOperand(Button_Height_value);
		CLGOperatorNode B_BHNE = new CLGOperatorNode("<>");
		B_BHNE.setLeftOperand(Button_Height);
		B_BHNE.setRightOperand(Button_Height_value);
		CLGOperatorNode B_BWE = new CLGOperatorNode("=");
		B_BWE.setLeftOperand(Button_Width);
		B_BWE.setRightOperand(Button_Width_value);
		CLGOperatorNode B_BWNE = new CLGOperatorNode("<>");
		B_BWNE.setLeftOperand(Button_Width);
		B_BWNE.setRightOperand(Button_Width_value);
		CLGOperatorNode B_BYE = new CLGOperatorNode("=");
		B_BYE.setLeftOperand(Button_Y);
		B_BYE.setRightOperand(Button_Y_value);
		CLGOperatorNode B_BYNE = new CLGOperatorNode("<>");
		B_BYNE.setLeftOperand(Button_Y);
		B_BYNE.setRightOperand(Button_Y_value);
		CLGOperatorNode B_BXE = new CLGOperatorNode("=");
		B_BXE.setLeftOperand(Button_X);
		B_BXE.setRightOperand(Button_X_value);
		CLGOperatorNode B_BXNE = new CLGOperatorNode("<>");
		B_BXNE.setLeftOperand(Button_X);
		B_BXNE.setRightOperand(Button_X_value);
		CLGOperatorNode B_ET = new CLGOperatorNode("=");
		B_ET.setLeftOperand(Button_Enabled);
		B_ET.setRightOperand(Button_True);
		CLGOperatorNode B_EF = new CLGOperatorNode("=");
		B_EF.setLeftOperand(Button_Enabled);
		B_EF.setRightOperand(Button_False);
		CLGOperatorNode B_TDLR = new CLGOperatorNode("=");
		B_TDLR.setLeftOperand(Button_Textdirection);
		B_TDLR.setRightOperand(Button_TextdirectionL2R);
		CLGOperatorNode B_TDNLR = new CLGOperatorNode("<>");
		B_TDNLR.setLeftOperand(Button_Textdirection);
		B_TDNLR.setRightOperand(Button_TextdirectionL2R);
		CLGOperatorNode B_TDRL = new CLGOperatorNode("=");
		B_TDRL.setLeftOperand(Button_Textdirection);
		B_TDRL.setRightOperand(Button_TextdirectionR2L);
		CLGOperatorNode B_TDNRL = new CLGOperatorNode("<>");
		B_TDNRL.setLeftOperand(Button_Textdirection);
		B_TDNRL.setRightOperand(Button_TextdirectionR2L);
		CLGOperatorNode B_TDA = new CLGOperatorNode("=");
		B_TDA.setLeftOperand(Button_Textdirection);
		B_TDA.setRightOperand(Button_TextdirectionAuto);
		CLGOperatorNode B_TDNA = new CLGOperatorNode("<>");
		B_TDNA.setLeftOperand(Button_Textdirection);
		B_TDNA.setRightOperand(Button_TextdirectionAuto);
		CLGOperatorNode B_AR = new CLGOperatorNode("=");
		B_AR.setLeftOperand(Button_Alignment);
		B_AR.setRightOperand(Button_Alignment_right);
		CLGOperatorNode B_ANR = new CLGOperatorNode("<>");
		B_ANR.setLeftOperand(Button_Alignment);
		B_ANR.setRightOperand(Button_Alignment_right);
		CLGOperatorNode B_AL = new CLGOperatorNode("=");
		B_AL.setLeftOperand(Button_Alignment);
		B_AL.setRightOperand(Button_Alignment_left);
		CLGOperatorNode B_ANL = new CLGOperatorNode("<>");
		B_ANL.setLeftOperand(Button_Alignment);
		B_ANL.setRightOperand(Button_Alignment_left);
		CLGOperatorNode B_AC = new CLGOperatorNode("=");
		B_AC.setLeftOperand(Button_Alignment);
		B_AC.setRightOperand(Button_Alignment_center);
		CLGOperatorNode B_ANC = new CLGOperatorNode("<>");
		B_ANC.setLeftOperand(Button_Alignment);
		B_ANC.setRightOperand(Button_Alignment_center);
		CLGOperatorNode B_TT = new CLGOperatorNode("=");
		B_TT.setLeftOperand(Button_Touchenabled);
		B_TT.setRightOperand(Button_True);
		CLGOperatorNode B_TF = new CLGOperatorNode("=");
		B_TF.setLeftOperand(Button_Touchenabled);
		B_TF.setRightOperand(Button_False);
		CLGOperatorNode B_ST = new CLGOperatorNode("=");
		B_ST.setLeftOperand(Button_Selection);
		B_ST.setRightOperand(Button_True);
		CLGOperatorNode B_SF = new CLGOperatorNode("=");
		B_SF.setLeftOperand(Button_Selection);
		B_SF.setRightOperand(Button_False);
		CLGOperatorNode B_GT = new CLGOperatorNode("=");
		B_GT.setLeftOperand(Button_Grayed);
		B_GT.setRightOperand(Button_True);
		CLGOperatorNode B_GF = new CLGOperatorNode("=");
		B_GF.setLeftOperand(Button_Grayed);
		B_GF.setRightOperand(Button_False);
		CLGOperatorNode B_SLE = new CLGOperatorNode("=");
		B_SLE.setLeftOperand(Button_SelectionListener);
		B_SLE.setRightOperand(Button_Increment);
		CLGOperatorNode B_SLNE = new CLGOperatorNode("<>");
		B_SLNE.setLeftOperand(Button_SelectionListener);
		B_SLNE.setRightOperand(Button_Increment);
		CLGOperatorNode M_BHE = new CLGOperatorNode("=");
		M_BHE.setLeftOperand(Mabel_Height);
		M_BHE.setRightOperand(Mabel_Height_value);
		CLGOperatorNode M_BHNE = new CLGOperatorNode("<>");
		M_BHNE.setLeftOperand(Mabel_Height);
		M_BHNE.setRightOperand(Mabel_Height_value);
		CLGOperatorNode M_BWE = new CLGOperatorNode("=");
		M_BWE.setLeftOperand(Mabel_Width);
		M_BWE.setRightOperand(Mabel_Width_value);
		CLGOperatorNode M_BWNE = new CLGOperatorNode("<>");
		M_BWNE.setLeftOperand(Mabel_Width);
		M_BWNE.setRightOperand(Mabel_Width_value);
		CLGOperatorNode M_BYE = new CLGOperatorNode("=");
		M_BYE.setLeftOperand(Mabel_Y);
		M_BYE.setRightOperand(Mabel_Y_value);
		CLGOperatorNode M_BYNE = new CLGOperatorNode("<>");
		M_BYNE.setLeftOperand(Mabel_Y);
		M_BYNE.setRightOperand(Mabel_Y_value);
		CLGOperatorNode M_BXE = new CLGOperatorNode("=");
		M_BXE.setLeftOperand(Mabel_X);
		M_BXE.setRightOperand(Mabel_X_value);
		CLGOperatorNode M_BXNE = new CLGOperatorNode("<>");
		M_BXNE.setLeftOperand(Mabel_X);
		M_BXNE.setRightOperand(Mabel_X_value);

		CLGOperatorNode SN = new CLGOperatorNode("=");
		SN.setLeftOperand(Shell);
		SN.setRightOperand(Nu);
		CLGOperatorNode SNN = new CLGOperatorNode("<>");
		SNN.setLeftOperand(Shell);
		SNN.setRightOperand(Nu);
		CLGOperatorNode SE = new CLGOperatorNode("=");
		SE.setLeftOperand(Result);
		SE.setRightOperand(Ex);
		CLGOperatorNode STN = new CLGOperatorNode("=");
		STN.setLeftOperand(Shell_Text);
		STN.setRightOperand(Nu);
		CLGOperatorNode STNN = new CLGOperatorNode("<>");
		STNN.setLeftOperand(Shell_Text);
		STNN.setRightOperand(Nu);	
		CLGOperatorNode STS = new CLGOperatorNode("=");
		STS.setLeftOperand(Result);
		STS.setRightOperand(Suc);
		CLGOperatorNode STF = new CLGOperatorNode("=");
		STF.setLeftOperand(Result);
		STF.setRightOperand(Fa);
		CLGOperatorNode STE = new CLGOperatorNode("=");
		STE.setLeftOperand(Result);
		STE.setRightOperand(Ex);
		CLGOperatorNode SBN = new CLGOperatorNode("=");
		SBN.setLeftOperand(Shell_Bounds);
		SBN.setRightOperand(Nu);
		CLGOperatorNode SBNN = new CLGOperatorNode("<>");
		SBNN.setLeftOperand(Shell_Bounds);
		SBNN.setRightOperand(Nu);	
		CLGOperatorNode SBS = new CLGOperatorNode("=");
		SBS.setLeftOperand(Result);
		SBS.setRightOperand(Suc);
		CLGOperatorNode SBF = new CLGOperatorNode("=");
		SBF.setLeftOperand(Result);
		SBF.setRightOperand(Fa);
		CLGOperatorNode SBHF = new CLGOperatorNode("=");
		SBHF.setLeftOperand(Result);
		SBHF.setRightOperand(Fa);
		CLGOperatorNode SBWF = new CLGOperatorNode("=");
		SBWF.setLeftOperand(Result);
		SBWF.setRightOperand(Fa);
		CLGOperatorNode SBYF = new CLGOperatorNode("=");
		SBYF.setLeftOperand(Result);
		SBYF.setRightOperand(Fa);
		CLGOperatorNode SBXF = new CLGOperatorNode("=");
		SBXF.setLeftOperand(Result);
		SBXF.setRightOperand(Fa);
		CLGOperatorNode SBE = new CLGOperatorNode("=");
		SBE.setLeftOperand(Result);
		SBE.setRightOperand(Ex);
		CLGOperatorNode SEN = new CLGOperatorNode("=");
		SEN.setLeftOperand(Shell_Enabled);
		SEN.setRightOperand(Nu);
		CLGOperatorNode SENN = new CLGOperatorNode("<>");
		SENN.setLeftOperand(Shell_Enabled);
		SENN.setRightOperand(Nu);
		CLGOperatorNode SES = new CLGOperatorNode("=");
		SES.setLeftOperand(Result);
		SES.setRightOperand(Suc);
		CLGOperatorNode SEF = new CLGOperatorNode("=");
		SEF.setLeftOperand(Result);
		SEF.setRightOperand(Fa);
		CLGOperatorNode SEE = new CLGOperatorNode("=");
		SEE.setLeftOperand(Result);
		SEE.setRightOperand(Ex);
		CLGOperatorNode SMSN = new CLGOperatorNode("=");
		SMSN.setLeftOperand(Shell_Minimumsize);
		SMSN.setRightOperand(Nu);
		CLGOperatorNode SMSNN = new CLGOperatorNode("<>");
		SMSNN.setLeftOperand(Shell_Minimumsize);
		SMSNN.setRightOperand(Nu);
		CLGOperatorNode SMSS = new CLGOperatorNode("=");
		SMSS.setLeftOperand(Result);
		SMSS.setRightOperand(Suc);
		CLGOperatorNode SMSF = new CLGOperatorNode("=");
		SMSF.setLeftOperand(Result);
		SMSF.setRightOperand(Fa);
		CLGOperatorNode SMSXF = new CLGOperatorNode("=");
		SMSXF.setLeftOperand(Result);
		SMSXF.setRightOperand(Fa);
		CLGOperatorNode SMSYF = new CLGOperatorNode("=");
		SMSYF.setLeftOperand(Result);
		SMSYF.setRightOperand(Fa);
		CLGOperatorNode SMSE = new CLGOperatorNode("=");
		SMSE.setLeftOperand(Result);
		SMSE.setRightOperand(Ex);
		CLGOperatorNode SMN = new CLGOperatorNode("=");
		SMN.setLeftOperand(Shell_Modified);
		SMN.setRightOperand(Nu);
		CLGOperatorNode SMNN = new CLGOperatorNode("<>");
		SMNN.setLeftOperand(Shell_Modified);
		SMNN.setRightOperand(Nu);
		CLGOperatorNode SMS = new CLGOperatorNode("=");
		SMS.setLeftOperand(Result);
		SMS.setRightOperand(Suc);
		CLGOperatorNode SMF = new CLGOperatorNode("=");
		SMF.setLeftOperand(Result);
		SMF.setRightOperand(Fa);
		CLGOperatorNode SME = new CLGOperatorNode("=");
		SME.setLeftOperand(Result);
		SME.setRightOperand(Ex);
		CLGOperatorNode STEN = new CLGOperatorNode("=");
		STEN.setLeftOperand(Shell_Touchenabled);
		STEN.setRightOperand(Nu);
		CLGOperatorNode STENN = new CLGOperatorNode("<>");
		STENN.setLeftOperand(Shell_Touchenabled);
		STENN.setRightOperand(Nu);
		CLGOperatorNode STES = new CLGOperatorNode("=");
		STES.setLeftOperand(Result);
		STES.setRightOperand(Suc);
		CLGOperatorNode STEF = new CLGOperatorNode("=");
		STEF.setLeftOperand(Result);
		STEF.setRightOperand(Fa);
		CLGOperatorNode STEE = new CLGOperatorNode("=");
		STEE.setLeftOperand(Result);
		STEE.setRightOperand(Ex);
		CLGOperatorNode STDN = new CLGOperatorNode("=");
		STDN.setLeftOperand(Shell_Textdirection);
		STDN.setRightOperand(Nu);
		CLGOperatorNode STDNN = new CLGOperatorNode("<>");
		STDNN.setLeftOperand(Shell_Textdirection);
		STDNN.setRightOperand(Nu);
		CLGOperatorNode STDS = new CLGOperatorNode("=");
		STDS.setLeftOperand(Result);
		STDS.setRightOperand(Suc);
		CLGOperatorNode STDF = new CLGOperatorNode("=");
		STDF.setLeftOperand(Result);
		STDF.setRightOperand(Fa);
		CLGOperatorNode STDRLF = new CLGOperatorNode("=");
		STDRLF.setLeftOperand(Result);
		STDRLF.setRightOperand(Fa);
		CLGOperatorNode STDLRF = new CLGOperatorNode("=");
		STDLRF.setLeftOperand(Result);
		STDLRF.setRightOperand(Fa);
		CLGOperatorNode STDAF = new CLGOperatorNode("=");
		STDAF.setLeftOperand(Result);
		STDAF.setRightOperand(Fa);
		CLGOperatorNode STDE = new CLGOperatorNode("=");
		STDE.setLeftOperand(Result);
		STDE.setRightOperand(Ex);
		CLGOperatorNode SLN = new CLGOperatorNode("=");
		SLN.setLeftOperand(Shell_Layout);
		SLN.setRightOperand(Nu);
		CLGOperatorNode SLNN = new CLGOperatorNode("<>");
		SLNN.setLeftOperand(Shell_Layout);
		SLNN.setRightOperand(Nu);
		CLGOperatorNode SLAS = new CLGOperatorNode("=");
		SLAS.setLeftOperand(Result);
		SLAS.setRightOperand(Suc);
		CLGOperatorNode SLAF = new CLGOperatorNode("=");
		SLAF.setLeftOperand(Result);
		SLAF.setRightOperand(Fa);
		CLGOperatorNode SLGS = new CLGOperatorNode("=");
		SLGS.setLeftOperand(Result);
		SLGS.setRightOperand(Suc);
		CLGOperatorNode SLGF = new CLGOperatorNode("=");
		SLGF.setLeftOperand(Result);
		SLGF.setRightOperand(Fa);
		CLGOperatorNode SLFS = new CLGOperatorNode("=");
		SLFS.setLeftOperand(Result);
		SLFS.setRightOperand(Suc);
		CLGOperatorNode SLFF = new CLGOperatorNode("=");
		SLFF.setLeftOperand(Result);
		SLFF.setRightOperand(Fa);
		CLGOperatorNode SLRS = new CLGOperatorNode("=");
		SLRS.setLeftOperand(Result);
		SLRS.setRightOperand(Suc);
		CLGOperatorNode SLRF = new CLGOperatorNode("=");
		SLRF.setLeftOperand(Result);
		SLRF.setRightOperand(Fa);
		CLGOperatorNode SLFOS = new CLGOperatorNode("=");
		SLFOS.setLeftOperand(Result);
		SLFOS.setRightOperand(Suc);
		CLGOperatorNode SLFOF = new CLGOperatorNode("=");
		SLFOF.setLeftOperand(Result);
		SLFOF.setRightOperand(Fa);
		CLGOperatorNode SLSS = new CLGOperatorNode("=");
		SLSS.setLeftOperand(Result);
		SLSS.setRightOperand(Suc);
		CLGOperatorNode SLSF = new CLGOperatorNode("=");
		SLSF.setLeftOperand(Result);
		SLSF.setRightOperand(Fa);
		CLGOperatorNode SLS = new CLGOperatorNode("<>");
		SLS.setLeftOperand(Result);
		SLS.setRightOperand(Suc);
		CLGOperatorNode SLF = new CLGOperatorNode("=");
		SLF.setLeftOperand(Result);
		SLF.setRightOperand(Fa);
		
		CLGOperatorNode LN = new CLGOperatorNode("=");
		LN.setLeftOperand(Label);
		LN.setRightOperand(Nu);
		CLGOperatorNode LNN = new CLGOperatorNode("<>");
		LNN.setLeftOperand(Label);
		LNN.setRightOperand(Nu);
		CLGOperatorNode LE = new CLGOperatorNode("=");
		LE.setLeftOperand(Result);
		LE.setRightOperand(Ex);
		CLGOperatorNode LTN = new CLGOperatorNode("=");
		LTN.setLeftOperand(Label_Text);
		LTN.setRightOperand(Nu);
		CLGOperatorNode LTNN = new CLGOperatorNode("<>");
		LTNN.setLeftOperand(Label_Text);
		LTNN.setRightOperand(Nu);
		CLGOperatorNode LTS = new CLGOperatorNode("=");
		LTS.setLeftOperand(Result);
		LTS.setRightOperand(Suc);
		CLGOperatorNode LTF = new CLGOperatorNode("=");
		LTF.setLeftOperand(Result);
		LTF.setRightOperand(Fa);
		CLGOperatorNode LTE = new CLGOperatorNode("=");
		LTE.setLeftOperand(Exception);
		LTE.setRightOperand(Ex);
		CLGOperatorNode LBN = new CLGOperatorNode("=");
		LBN.setLeftOperand(Label_Bounds);
		LBN.setRightOperand(Nu);
		CLGOperatorNode LBNN = new CLGOperatorNode("<>");
		LBNN.setLeftOperand(Label_Bounds);
		LBNN.setRightOperand(Nu);	
		CLGOperatorNode LBS = new CLGOperatorNode("=");
		LBS.setLeftOperand(Result);
		LBS.setRightOperand(Suc);
		CLGOperatorNode LBF = new CLGOperatorNode("=");
		LBF.setLeftOperand(Result);
		LBF.setRightOperand(Fa);
		CLGOperatorNode LBHF = new CLGOperatorNode("=");
		LBHF.setLeftOperand(Result);
		LBHF.setRightOperand(Fa);
		CLGOperatorNode LBWF = new CLGOperatorNode("=");
		LBWF.setLeftOperand(Result);
		LBWF.setRightOperand(Fa);
		CLGOperatorNode LBYF = new CLGOperatorNode("=");
		LBYF.setLeftOperand(Result);
		LBYF.setRightOperand(Fa);
		CLGOperatorNode LBXF = new CLGOperatorNode("=");
		LBXF.setLeftOperand(Result);
		LBXF.setRightOperand(Fa);
		CLGOperatorNode MBS = new CLGOperatorNode("=");
		MBS.setLeftOperand(Result);
		MBS.setRightOperand(Suc);
		CLGOperatorNode MBF = new CLGOperatorNode("=");
		MBF.setLeftOperand(Result);
		MBF.setRightOperand(Fa);
		CLGOperatorNode MBHF = new CLGOperatorNode("=");
		MBHF.setLeftOperand(Result);
		MBHF.setRightOperand(Fa);
		CLGOperatorNode MBWF = new CLGOperatorNode("=");
		MBWF.setLeftOperand(Result);
		MBWF.setRightOperand(Fa);
		CLGOperatorNode MBYF = new CLGOperatorNode("=");
		MBYF.setLeftOperand(Result);
		MBYF.setRightOperand(Fa);
		CLGOperatorNode MBXF = new CLGOperatorNode("=");
		MBXF.setLeftOperand(Result);
		MBXF.setRightOperand(Fa);
		CLGOperatorNode LBE = new CLGOperatorNode("=");
		LBE.setLeftOperand(Exception);
		LBE.setRightOperand(Ex);
		CLGOperatorNode LEN = new CLGOperatorNode("=");
		LEN.setLeftOperand(Label_Enabled);
		LEN.setRightOperand(Nu);
		CLGOperatorNode LENN = new CLGOperatorNode("<>");
		LENN.setLeftOperand(Label_Enabled);
		LENN.setRightOperand(Nu);
		CLGOperatorNode LES = new CLGOperatorNode("=");
		LES.setLeftOperand(Result);
		LES.setRightOperand(Suc);
		CLGOperatorNode LEF = new CLGOperatorNode("=");
		LEF.setLeftOperand(Result);
		LEF.setRightOperand(Fa);
		CLGOperatorNode LEE = new CLGOperatorNode("=");
		LEE.setLeftOperand(Exception);
		LEE.setRightOperand(Ex);
		CLGOperatorNode LTDN = new CLGOperatorNode("=");
		LTDN.setLeftOperand(Label_Textdirection);
		LTDN.setRightOperand(Nu);
		CLGOperatorNode LTDNN = new CLGOperatorNode("<>");
		LTDNN.setLeftOperand(Label_Textdirection);
		LTDNN.setRightOperand(Nu);
		CLGOperatorNode LTDS = new CLGOperatorNode("=");
		LTDS.setLeftOperand(Result);
		LTDS.setRightOperand(Suc);
		CLGOperatorNode LTDF = new CLGOperatorNode("=");
		LTDF.setLeftOperand(Result);
		LTDF.setRightOperand(Fa);
		CLGOperatorNode LTDRLF = new CLGOperatorNode("=");
		LTDRLF.setLeftOperand(Result);
		LTDRLF.setRightOperand(Fa);
		CLGOperatorNode LTDLRF = new CLGOperatorNode("=");
		LTDLRF.setLeftOperand(Result);
		LTDLRF.setRightOperand(Fa);
		CLGOperatorNode LTDAF = new CLGOperatorNode("=");
		LTDAF.setLeftOperand(Result);
		LTDAF.setRightOperand(Fa);
		CLGOperatorNode LTDE = new CLGOperatorNode("=");
		LTDE.setLeftOperand(Result);
		LTDE.setRightOperand(Ex);
		CLGOperatorNode LAN = new CLGOperatorNode("=");
		LAN.setLeftOperand(Label_Alignment);
		LAN.setRightOperand(Nu);
		CLGOperatorNode LANN = new CLGOperatorNode("<>");
		LANN.setLeftOperand(Label_Alignment);
		LANN.setRightOperand(Nu);
		CLGOperatorNode LAS = new CLGOperatorNode("=");
		LAS.setLeftOperand(Result);
		LAS.setRightOperand(Suc);
		CLGOperatorNode LAF = new CLGOperatorNode("=");
		LAF.setLeftOperand(Result);
		LAF.setRightOperand(Fa);
		CLGOperatorNode LALF = new CLGOperatorNode("=");
		LALF.setLeftOperand(Result);
		LALF.setRightOperand(Fa);
		CLGOperatorNode LARF = new CLGOperatorNode("=");
		LARF.setLeftOperand(Result);
		LARF.setRightOperand(Fa);
		CLGOperatorNode LACF = new CLGOperatorNode("=");
		LACF.setLeftOperand(Result);
		LACF.setRightOperand(Fa);
		CLGOperatorNode LAE = new CLGOperatorNode("=");
		LAE.setLeftOperand(Exception);
		LAE.setRightOperand(Ex);
		CLGOperatorNode LTEN = new CLGOperatorNode("=");
		LTEN.setLeftOperand(Label_Touchenabled);
		LTEN.setRightOperand(Nu);
		CLGOperatorNode LTENN = new CLGOperatorNode("<>");
		LTENN.setLeftOperand(Label_Touchenabled);
		LTENN.setRightOperand(Nu);
		CLGOperatorNode LTES = new CLGOperatorNode("=");
		LTES.setLeftOperand(Result);
		LTES.setRightOperand(Suc);
		CLGOperatorNode LTEF = new CLGOperatorNode("=");
		LTEF.setLeftOperand(Result);
		LTEF.setRightOperand(Fa);
		CLGOperatorNode LTEE = new CLGOperatorNode("=");
		LTEE.setLeftOperand(Result);
		LTEE.setRightOperand(Ex);
		
		CLGOperatorNode TN = new CLGOperatorNode("=");
		TN.setLeftOperand(Text);
		TN.setRightOperand(Nu);
		CLGOperatorNode TNN = new CLGOperatorNode("<>");
		TNN.setLeftOperand(Text);
		TNN.setRightOperand(Nu);
		CLGOperatorNode TE = new CLGOperatorNode("=");
		TE.setLeftOperand(Result);
		TE.setRightOperand(Ex);
		CLGOperatorNode TF = new CLGOperatorNode("=");
		TF.setLeftOperand(Result);
		TF.setRightOperand(Fa);
		CLGOperatorNode TBN = new CLGOperatorNode("=");
		TBN.setLeftOperand(Text_Bounds);
		TBN.setRightOperand(Nu);
		CLGOperatorNode TBNN = new CLGOperatorNode("<>");
		TBNN.setLeftOperand(Text_Bounds);
		TBNN.setRightOperand(Nu);	
		CLGOperatorNode TBS = new CLGOperatorNode("=");
		TBS.setLeftOperand(Result);
		TBS.setRightOperand(Suc);
		CLGOperatorNode TBF = new CLGOperatorNode("=");
		TBF.setLeftOperand(Result);
		TBF.setRightOperand(Fa);
		CLGOperatorNode TBHF = new CLGOperatorNode("=");
		TBHF.setLeftOperand(Result);
		TBHF.setRightOperand(Fa);
		CLGOperatorNode TBWF = new CLGOperatorNode("=");
		TBWF.setLeftOperand(Result);
		TBWF.setRightOperand(Fa);
		CLGOperatorNode TBYF = new CLGOperatorNode("=");
		TBYF.setLeftOperand(Result);
		TBYF.setRightOperand(Fa);
		CLGOperatorNode TBXF = new CLGOperatorNode("=");
		TBXF.setLeftOperand(Result);
		TBXF.setRightOperand(Fa);
		CLGOperatorNode TEN = new CLGOperatorNode("=");
		TEN.setLeftOperand(Text_Enabled);
		TEN.setRightOperand(Nu);
		CLGOperatorNode TENN = new CLGOperatorNode("<>");
		TENN.setLeftOperand(Text_Enabled);
		TENN.setRightOperand(Nu);
		CLGOperatorNode TES = new CLGOperatorNode("=");
		TES.setLeftOperand(Result);
		TES.setRightOperand(Suc);
		CLGOperatorNode TEF = new CLGOperatorNode("=");
		TEF.setLeftOperand(Result);
		TEF.setRightOperand(Fa);
		CLGOperatorNode TTDN = new CLGOperatorNode("=");
		TTDN.setLeftOperand(Text_Textdirection);
		TTDN.setRightOperand(Nu);
		CLGOperatorNode TTDNN = new CLGOperatorNode("<>");
		TTDNN.setLeftOperand(Text_Textdirection);
		TTDNN.setRightOperand(Nu);
		CLGOperatorNode TTDS = new CLGOperatorNode("=");
		TTDS.setLeftOperand(Result);
		TTDS.setRightOperand(Suc);
		CLGOperatorNode TTDRLF = new CLGOperatorNode("=");
		TTDRLF.setLeftOperand(Result);
		TTDRLF.setRightOperand(Fa);
		CLGOperatorNode TTDLRF = new CLGOperatorNode("=");
		TTDLRF.setLeftOperand(Result);
		TTDLRF.setRightOperand(Fa);
		CLGOperatorNode TTDAF = new CLGOperatorNode("=");
		TTDAF.setLeftOperand(Result);
		TTDAF.setRightOperand(Fa);
		CLGOperatorNode TEDN = new CLGOperatorNode("=");
		TEDN.setLeftOperand(Text_Editable);
		TEDN.setRightOperand(Nu);
		CLGOperatorNode TEDNN = new CLGOperatorNode("<>");
		TEDNN.setLeftOperand(Text_Editable);
		TEDNN.setRightOperand(Nu);
		CLGOperatorNode TEDS = new CLGOperatorNode("=");
		TEDS.setLeftOperand(Result);
		TEDS.setRightOperand(Suc);
		CLGOperatorNode TEDF = new CLGOperatorNode("=");
		TEDF.setLeftOperand(Result);
		TEDF.setRightOperand(Fa);
		CLGOperatorNode TTEN = new CLGOperatorNode("=");
		TTEN.setLeftOperand(Text_Touchenabled);
		TTEN.setRightOperand(Nu);
		CLGOperatorNode TTENN = new CLGOperatorNode("<>");
		TTENN.setLeftOperand(Text_Touchenabled);
		TTENN.setRightOperand(Nu);
		CLGOperatorNode TTES = new CLGOperatorNode("=");
		TTES.setLeftOperand(Result);
		TTES.setRightOperand(Suc);
		CLGOperatorNode TTEF = new CLGOperatorNode("=");
		TTEF.setLeftOperand(Result);
		TTEF.setRightOperand(Fa);
		CLGOperatorNode TTN = new CLGOperatorNode("=");
		TTN.setLeftOperand(Text_Text);
		TTN.setRightOperand(Nu);
		CLGOperatorNode TTNN = new CLGOperatorNode("<>");
		TTNN.setLeftOperand(Text_Text);
		TTNN.setRightOperand(Nu);
		CLGOperatorNode TTS = new CLGOperatorNode("=");
		TTS.setLeftOperand(Result);
		TTS.setRightOperand(Suc);
		CLGOperatorNode TTF = new CLGOperatorNode("=");
		TTF.setLeftOperand(Result);
		TTF.setRightOperand(Fa);
	
		CLGOperatorNode BN = new CLGOperatorNode("=");
		BN.setLeftOperand(Button);
		BN.setRightOperand(Nu);
		CLGOperatorNode BNN = new CLGOperatorNode("<>");
		BNN.setLeftOperand(Button);
		BNN.setRightOperand(Nu);
		CLGOperatorNode BE = new CLGOperatorNode("=");
		BE.setLeftOperand(Result);
		BE.setRightOperand(Ex);
		CLGOperatorNode BF = new CLGOperatorNode("=");
		BF.setLeftOperand(Result);
		BF.setRightOperand(Fa);
		CLGOperatorNode BTN = new CLGOperatorNode("=");
		BTN.setLeftOperand(Button_Text);
		BTN.setRightOperand(Nu);
		CLGOperatorNode BTNN = new CLGOperatorNode("<>");
		BTNN.setLeftOperand(Button_Text);
		BTNN.setRightOperand(Nu);
		CLGOperatorNode BTS = new CLGOperatorNode("=");
		BTS.setLeftOperand(Result);
		BTS.setRightOperand(Suc);
		CLGOperatorNode BTF = new CLGOperatorNode("=");
		BTF.setLeftOperand(Result);
		BTF.setRightOperand(Fa);
		CLGOperatorNode BBN = new CLGOperatorNode("=");
		BBN.setLeftOperand(Button_Bounds);
		BBN.setRightOperand(Nu);
		CLGOperatorNode BBNN = new CLGOperatorNode("<>");
		BBNN.setLeftOperand(Button_Bounds);
		BBNN.setRightOperand(Nu);	
		CLGOperatorNode BBS = new CLGOperatorNode("=");
		BBS.setLeftOperand(Result);
		BBS.setRightOperand(Suc);
		CLGOperatorNode BBF = new CLGOperatorNode("=");
		BBF.setLeftOperand(Result);
		BBF.setRightOperand(Fa);
		CLGOperatorNode BBHF = new CLGOperatorNode("=");
		BBHF.setLeftOperand(Result);
		BBHF.setRightOperand(Fa);
		CLGOperatorNode BBWF = new CLGOperatorNode("=");
		BBWF.setLeftOperand(Result);
		BBWF.setRightOperand(Fa);
		CLGOperatorNode BBYF = new CLGOperatorNode("=");
		BBYF.setLeftOperand(Result);
		BBYF.setRightOperand(Fa);
		CLGOperatorNode BBXF = new CLGOperatorNode("=");
		BBXF.setLeftOperand(Result);
		BBXF.setRightOperand(Fa);
		CLGOperatorNode BAN = new CLGOperatorNode("=");
		BAN.setLeftOperand(Button_Alignment);
		BAN.setRightOperand(Nu);
		CLGOperatorNode BANN = new CLGOperatorNode("<>");
		BANN.setLeftOperand(Button_Alignment);
		BANN.setRightOperand(Nu);
		CLGOperatorNode BAS = new CLGOperatorNode("=");
		BAS.setLeftOperand(Result);
		BAS.setRightOperand(Suc);
		CLGOperatorNode BALF = new CLGOperatorNode("=");
		BALF.setLeftOperand(Result);
		BALF.setRightOperand(Fa);
		CLGOperatorNode BARF = new CLGOperatorNode("=");
		BARF.setLeftOperand(Result);
		BARF.setRightOperand(Fa);
		CLGOperatorNode BACF = new CLGOperatorNode("=");
		BACF.setLeftOperand(Result);
		BACF.setRightOperand(Fa);
		CLGOperatorNode BEN = new CLGOperatorNode("=");
		BEN.setLeftOperand(Button_Enabled);
		BEN.setRightOperand(Nu);
		CLGOperatorNode BENN = new CLGOperatorNode("<>");
		BENN.setLeftOperand(Button_Enabled);
		BENN.setRightOperand(Nu);
		CLGOperatorNode BES = new CLGOperatorNode("=");
		BES.setLeftOperand(Result);
		BES.setRightOperand(Suc);
		CLGOperatorNode BEF = new CLGOperatorNode("=");
		BEF.setLeftOperand(Result);
		BEF.setRightOperand(Fa);
		CLGOperatorNode BGN = new CLGOperatorNode("=");
		BGN.setLeftOperand(Button_Grayed);
		BGN.setRightOperand(Nu);
		CLGOperatorNode BGNN = new CLGOperatorNode("<>");
		BGNN.setLeftOperand(Button_Grayed);
		BGNN.setRightOperand(Nu);
		CLGOperatorNode BGS = new CLGOperatorNode("=");
		BGS.setLeftOperand(Result);
		BGS.setRightOperand(Suc);
		CLGOperatorNode BGF = new CLGOperatorNode("=");
		BGF.setLeftOperand(Result);
		BGF.setRightOperand(Fa);
		CLGOperatorNode BTEN = new CLGOperatorNode("=");
		BTEN.setLeftOperand(Button_Touchenabled);
		BTEN.setRightOperand(Nu);
		CLGOperatorNode BTENN = new CLGOperatorNode("<>");
		BTENN.setLeftOperand(Button_Touchenabled);
		BTENN.setRightOperand(Nu);
		CLGOperatorNode BTES = new CLGOperatorNode("=");
		BTES.setLeftOperand(Result);
		BTES.setRightOperand(Suc);
		CLGOperatorNode BTEF = new CLGOperatorNode("=");
		BTEF.setLeftOperand(Result);
		BTEF.setRightOperand(Fa);
		CLGOperatorNode BTDN = new CLGOperatorNode("=");
		BTDN.setLeftOperand(Button_Textdirection);
		BTDN.setRightOperand(Nu);
		CLGOperatorNode BTDNN = new CLGOperatorNode("<>");
		BTDNN.setLeftOperand(Button_Textdirection);
		BTDNN.setRightOperand(Nu);
		CLGOperatorNode BTDS = new CLGOperatorNode("=");
		BTDS.setLeftOperand(Result);
		BTDS.setRightOperand(Suc);
		CLGOperatorNode BTDRLF = new CLGOperatorNode("=");
		BTDRLF.setLeftOperand(Result);
		BTDRLF.setRightOperand(Fa);
		CLGOperatorNode BTDLRF = new CLGOperatorNode("=");
		BTDLRF.setLeftOperand(Result);
		BTDLRF.setRightOperand(Fa);
		CLGOperatorNode BTDAF = new CLGOperatorNode("=");
		BTDAF.setLeftOperand(Result);
		BTDAF.setRightOperand(Fa);
		CLGOperatorNode BSLN = new CLGOperatorNode("=");
		BSLN.setLeftOperand(Button_SelectionListener);
		BSLN.setRightOperand(Nu);
		CLGOperatorNode BSLNN = new CLGOperatorNode("<>");
		BSLNN.setLeftOperand(Button_SelectionListener);
		BSLNN.setRightOperand(Nu);
		CLGOperatorNode BSLS = new CLGOperatorNode("<>");
		BSLS.setLeftOperand(Result);
		BSLS.setRightOperand(Suc);
		CLGOperatorNode BSLF = new CLGOperatorNode("=");
		BSLF.setLeftOperand(Result);
		BSLF.setRightOperand(Fa);
		CLGOperatorNode BSN = new CLGOperatorNode("=");
		BSN.setLeftOperand(Button_Selection);
		BSN.setRightOperand(Nu);
		CLGOperatorNode BSNN = new CLGOperatorNode("<>");
		BSNN.setLeftOperand(Button_Selection);
		BSNN.setRightOperand(Nu);
		CLGOperatorNode BSS = new CLGOperatorNode("=");
		BSS.setLeftOperand(Result);
		BSS.setRightOperand(Suc);
		CLGOperatorNode BSF = new CLGOperatorNode("=");
		BSF.setLeftOperand(Result);
		BSF.setRightOperand(Fa);
		
		//將CLG限制式放入到CLG圖當中
		CLGGraph clg1 = new CLGGraph(SN);
		CLGGraph clg2 = new CLGGraph(SNN);
		CLGGraph clg3= new CLGGraph(SN);
		CLGGraph clg4 = new CLGGraph(SNN);
		CLGGraph clg5 = new CLGGraph(SN);
		CLGGraph clg6 = new CLGGraph(SNN);
		CLGGraph clg7 = new CLGGraph(SN);
		CLGGraph clg8 = new CLGGraph(SNN);
		CLGGraph clg9 = new CLGGraph(SN);
		CLGGraph clg10 = new CLGGraph(SNN);
		CLGGraph clg11 = new CLGGraph(SN);
		CLGGraph clg12 = new CLGGraph(SNN);
		CLGGraph clg13= new CLGGraph(SN);
		CLGGraph clg14 = new CLGGraph(SNN);
		CLGGraph clg15 = new CLGGraph(SN);
		CLGGraph clg16 = new CLGGraph(SNN);
		CLGGraph clg17 = new CLGGraph(SLN);
		CLGGraph clg18 = new CLGGraph(SLNN);
		CLGGraph clg19 = new CLGGraph(SE);
		CLGGraph clg20 = new CLGGraph(TBF);
		CLGGraph clg22 = new CLGGraph(S_LAE);
		CLGGraph clg23 = new CLGGraph(S_LANE);
		CLGGraph clg24 = new CLGGraph(S_LGE);
		CLGGraph clg25 = new CLGGraph(S_LGNE);
		CLGGraph clg26 = new CLGGraph(S_LFE);
		CLGGraph clg27 = new CLGGraph(S_LFNE);
		CLGGraph clg28 = new CLGGraph(S_LRE);
		CLGGraph clg29 = new CLGGraph(S_LRNE);
		CLGGraph clg30 = new CLGGraph(S_LFOE);
		CLGGraph clg31 = new CLGGraph(S_LFONE);
		CLGGraph clg32 = new CLGGraph(S_LSE);
		CLGGraph clg33 = new CLGGraph(S_LSNE);
		CLGGraph clg34 = new CLGGraph(SLAS);
		CLGGraph clg35 = new CLGGraph(SLAF);
		CLGGraph clg36 = new CLGGraph(LTF);
		CLGGraph clg37 = new CLGGraph(SLGF);
		CLGGraph clg38 = new CLGGraph(LBS);
		CLGGraph clg39 = new CLGGraph(SLFF);
		CLGGraph clg40 = new CLGGraph(LBF);
		CLGGraph clg41 = new CLGGraph(SLRF);
		CLGGraph clg42 = new CLGGraph(LBE);
		CLGGraph clg43 = new CLGGraph(SLFOF);
		CLGGraph clg44 = new CLGGraph(LEF);
		CLGGraph clg45 = new CLGGraph(SLSF);
		CLGGraph clg46 = new CLGGraph(LEE);
		CLGGraph clg47 = new CLGGraph(SLF);
		CLGGraph clg48 = new CLGGraph(LN);
		CLGGraph clg49 = new CLGGraph(LNN);
		CLGGraph clg50 = new CLGGraph(LN);
		CLGGraph clg51 = new CLGGraph(LNN);
		CLGGraph clg52 = new CLGGraph(LN);
		CLGGraph clg53 = new CLGGraph(LNN);
		CLGGraph clg54 = new CLGGraph(LN);
		CLGGraph clg55 = new CLGGraph(LNN);
		CLGGraph clg56 = new CLGGraph(LN);
		CLGGraph clg57 = new CLGGraph(LNN);
		CLGGraph clg58 = new CLGGraph(LAF);
		CLGGraph clg59 = new CLGGraph(S_TDNLR);
		CLGGraph clg60 = new CLGGraph(S_TDNRL);
		CLGGraph clg61 = new CLGGraph(S_TDNA);
		CLGGraph clg62 = new CLGGraph(S_TE);
		CLGGraph clg63 = new CLGGraph(S_TNE);
		CLGGraph clg64 = new CLGGraph(S_BHE);
		CLGGraph clg65 = new CLGGraph(S_BHNE);
		CLGGraph clg66 = new CLGGraph(S_BWE);
		CLGGraph clg67 = new CLGGraph(S_BWNE);
		CLGGraph clg68 = new CLGGraph(S_BYE);
		CLGGraph clg69 = new CLGGraph(S_BYNE);
		CLGGraph clg70 = new CLGGraph(S_BXE);
		CLGGraph clg71 = new CLGGraph(S_BXNE);
		CLGGraph clg72 = new CLGGraph(S_ET);
		CLGGraph clg73 = new CLGGraph(S_EF);
		CLGGraph clg74 = new CLGGraph(S_MXE);
		CLGGraph clg75 = new CLGGraph(S_MXNE);
		CLGGraph clg76 = new CLGGraph(S_MYE);
		CLGGraph clg77 = new CLGGraph(S_MYNE);
		CLGGraph clg78 = new CLGGraph(S_MT);
		CLGGraph clg79 = new CLGGraph(S_MF);
		CLGGraph clg80 = new CLGGraph(S_TT);
		CLGGraph clg81 = new CLGGraph(S_TF);
		CLGGraph clg82 = new CLGGraph(S_TDLR);
		CLGGraph clg83 = new CLGGraph(S_TDRL);
		CLGGraph clg84 = new CLGGraph(S_TDA);
		CLGGraph clg85 = new CLGGraph(STS);
		CLGGraph clg86 = new CLGGraph(STF);
		CLGGraph clg87 = new CLGGraph(SBS);
		CLGGraph clg88 = new CLGGraph(SBHF);
		CLGGraph clg89 = new CLGGraph(SBWF);
		CLGGraph clg90 = new CLGGraph(SBYF);
		CLGGraph clg91 = new CLGGraph(SBXF);
		CLGGraph clg92 = new CLGGraph(SES);
		CLGGraph clg93 = new CLGGraph(SEF);
		CLGGraph clg94 = new CLGGraph(SMSS);
		CLGGraph clg95 = new CLGGraph(SMSXF);
		CLGGraph clg96 = new CLGGraph(SMSXF);
		CLGGraph clg97 = new CLGGraph(SMS);
		CLGGraph clg98 = new CLGGraph(SMF);
		CLGGraph clg99 = new CLGGraph(STES);
		CLGGraph clg100 = new CLGGraph(STEF);
		CLGGraph clg101 = new CLGGraph(STDS);
		CLGGraph clg102 = new CLGGraph(STDRLF);
		CLGGraph clg103 = new CLGGraph(STDLRF);
		CLGGraph clg104 = new CLGGraph(STDAF);
		CLGGraph clg105 = new CLGGraph(SEN);
		CLGGraph clg106 = new CLGGraph(SENN);
		CLGGraph clg107 = new CLGGraph(SEF);
		CLGGraph clg108= new CLGGraph(SEE);
		CLGGraph clg109 = new CLGGraph(SBF);
		CLGGraph clg110 = new CLGGraph(STF);
		CLGGraph clg111 = new CLGGraph(STN);
		CLGGraph clg112 = new CLGGraph(STNN);
		CLGGraph clg113 = new CLGGraph(STE);
		CLGGraph clg114 = new CLGGraph(SBN);
		CLGGraph clg115 = new CLGGraph(SBNN);
		CLGGraph clg116 = new CLGGraph(SBE);
		CLGGraph clg117 = new CLGGraph(SMSN);
		CLGGraph clg118 = new CLGGraph(SMSNN);
		CLGGraph clg119 = new CLGGraph(SMSF);
		CLGGraph clg120 = new CLGGraph(SMSE);
		CLGGraph clg121 = new CLGGraph(SMN);
		CLGGraph clg122 = new CLGGraph(SMNN);
		CLGGraph clg123 = new CLGGraph(SMF);
		CLGGraph clg124 = new CLGGraph(SME);
		CLGGraph clg125 = new CLGGraph(STEN);
		CLGGraph clg126 = new CLGGraph(STENN);
		CLGGraph clg127 = new CLGGraph(STEF);
		CLGGraph clg128 = new CLGGraph(STEE);
		CLGGraph clg129 = new CLGGraph(STDN);
		CLGGraph clg130 = new CLGGraph(STDNN);
		CLGGraph clg131 = new CLGGraph(STDF);
		CLGGraph clg132 = new CLGGraph(STDE);
		CLGGraph clg133 = new CLGGraph(LN);
		CLGGraph clg134 = new CLGGraph(LNN);
		CLGGraph clg135 = new CLGGraph(TE);
		CLGGraph clg136 = new CLGGraph(LTN);
		CLGGraph clg137 = new CLGGraph(LTNN);
		CLGGraph clg138 = new CLGGraph(LTE);	
		CLGGraph clg139 = new CLGGraph(LTS);
		CLGGraph clg140 = new CLGGraph(LTF);
		CLGGraph clg141 = new CLGGraph(LBN);	
		CLGGraph clg142 = new CLGGraph(LBNN);
		CLGGraph clg143 = new CLGGraph(LBHF);
		CLGGraph clg144 = new CLGGraph(LBWF);
		CLGGraph clg145 = new CLGGraph(LBYF);
		CLGGraph clg146 = new CLGGraph(LBXF);
		CLGGraph clg147 = new CLGGraph(LEN);
		CLGGraph clg148 = new CLGGraph(LENN);
		CLGGraph clg149 = new CLGGraph(LES);
		CLGGraph clg150 = new CLGGraph(LEF);
		CLGGraph clg151 = new CLGGraph(LTDN);
		CLGGraph clg152 = new CLGGraph(LTDNN);
		CLGGraph clg153 = new CLGGraph(LTDS);
		CLGGraph clg154 = new CLGGraph(LTDF);
		CLGGraph clg155 = new CLGGraph(LTDRLF);
		CLGGraph clg156 = new CLGGraph(LTDLRF);
		CLGGraph clg157 = new CLGGraph(LTDAF);
		CLGGraph clg158 = new CLGGraph(LTDE);
		CLGGraph clg159 = new CLGGraph(LAN);
		CLGGraph clg160 = new CLGGraph(LANN);
		CLGGraph clg161 = new CLGGraph(LAS);
		CLGGraph clg162 = new CLGGraph(LALF);
		CLGGraph clg163 = new CLGGraph(LARF);
		CLGGraph clg164 = new CLGGraph(LACF);
		CLGGraph clg165 = new CLGGraph(LTEN);
		CLGGraph clg166 = new CLGGraph(LTENN);
		CLGGraph clg167 = new CLGGraph(LTES);
		CLGGraph clg168 = new CLGGraph(LTEF);
		CLGGraph clg169 = new CLGGraph(LTEE);
		CLGGraph clg170 = new CLGGraph(L_TE);
		CLGGraph clg171 = new CLGGraph(L_TNE);
		CLGGraph clg172 = new CLGGraph(L_BHE);
		CLGGraph clg173 = new CLGGraph(L_BHNE);
		CLGGraph clg174 = new CLGGraph(L_BWE);
		CLGGraph clg175 = new CLGGraph(L_BWNE);
		CLGGraph clg176 = new CLGGraph(L_BYE);
		CLGGraph clg177 = new CLGGraph(L_BYNE);
		CLGGraph clg178 = new CLGGraph(L_BXE);
		CLGGraph clg179 = new CLGGraph(L_BXNE);
		CLGGraph clg180 = new CLGGraph(L_ET);
		CLGGraph clg181 = new CLGGraph(L_EF);
		CLGGraph clg182 = new CLGGraph(L_TDLR);
		CLGGraph clg183 = new CLGGraph(L_TDNLR);
		CLGGraph clg184 = new CLGGraph(L_TDRL);
		CLGGraph clg185 = new CLGGraph(L_TDNRL);
		CLGGraph clg186 = new CLGGraph(L_TDA);
		CLGGraph clg187 = new CLGGraph(L_TDNA);
		CLGGraph clg188 = new CLGGraph(L_AR);
		CLGGraph clg189 = new CLGGraph(L_ANR);
		CLGGraph clg190 = new CLGGraph(L_AL);
		CLGGraph clg191 = new CLGGraph(L_ANL);
		CLGGraph clg192 = new CLGGraph(L_AC);
		CLGGraph clg193 = new CLGGraph(L_ANC);
		CLGGraph clg194 = new CLGGraph(L_TT);
		CLGGraph clg195 = new CLGGraph(L_TF);
		CLGGraph clg196 = new CLGGraph(LAE);
		CLGGraph clg197 = new CLGGraph(LTEF);
		CLGGraph clg198 = new CLGGraph(T_BHE);
		CLGGraph clg199 = new CLGGraph(T_BHNE);
		CLGGraph clg201 = new CLGGraph(T_BWE);
		CLGGraph clg202 = new CLGGraph(T_BWNE);
		CLGGraph clg203 = new CLGGraph(T_BYE);
		CLGGraph clg204 = new CLGGraph(T_BYNE);
		CLGGraph clg205 = new CLGGraph(T_BXE);
		CLGGraph clg206 = new CLGGraph(T_BXNE);
		CLGGraph clg207 = new CLGGraph(T_ET);
		CLGGraph clg208 = new CLGGraph(T_EF);
		CLGGraph clg209 = new CLGGraph(T_EDT);
		CLGGraph clg210 = new CLGGraph(T_EDF);
		CLGGraph clg211 = new CLGGraph(T_TT);
		CLGGraph clg212 = new CLGGraph(T_TF);
		CLGGraph clg213 = new CLGGraph(T_TDLR);
		CLGGraph clg214 = new CLGGraph(T_TDNLR);
		CLGGraph clg215 = new CLGGraph(T_TDRL);
		CLGGraph clg216 = new CLGGraph(T_TDNRL);
		CLGGraph clg217 = new CLGGraph(T_TDA);
		CLGGraph clg218 = new CLGGraph(T_TDNA);
		CLGGraph clg219 = new CLGGraph(T_T);
		CLGGraph clg220 = new CLGGraph(T_NT);
		CLGGraph clg221 = new CLGGraph(TN);
		CLGGraph clg222 = new CLGGraph(TNN);
		CLGGraph clg223 = new CLGGraph(TE);
		CLGGraph clg224 = new CLGGraph(TBN);
		CLGGraph clg225 = new CLGGraph(TBNN);
		CLGGraph clg226 = new CLGGraph(TBS);
		CLGGraph clg227 = new CLGGraph(TBHF);
		CLGGraph clg228 = new CLGGraph(TBWF);
		CLGGraph clg229 = new CLGGraph(TBYF);
		CLGGraph clg230 = new CLGGraph(TBXF);
		CLGGraph clg231 = new CLGGraph(TEN);
		CLGGraph clg232 = new CLGGraph(TENN);
		CLGGraph clg233 = new CLGGraph(TES);
		CLGGraph clg234 = new CLGGraph(TEF);
		CLGGraph clg235 = new CLGGraph(TTDN);
		CLGGraph clg236 = new CLGGraph(TTDNN);
		CLGGraph clg238 = new CLGGraph(TTDS);
		CLGGraph clg239 = new CLGGraph(TTDRLF);
		CLGGraph clg240 = new CLGGraph(TTDLRF);
		CLGGraph clg241 = new CLGGraph(TTDAF);
		CLGGraph clg242 = new CLGGraph(TEDN);
		CLGGraph clg243 = new CLGGraph(TEDNN);
		CLGGraph clg244 = new CLGGraph(TEDS);
		CLGGraph clg245 = new CLGGraph(TEDF);
		CLGGraph clg246 = new CLGGraph(TTEN);
		CLGGraph clg247 = new CLGGraph(TTENN);
		CLGGraph clg248 = new CLGGraph(TTES);
		CLGGraph clg249 = new CLGGraph(TTEF);
		CLGGraph clg250 = new CLGGraph(TN);
		CLGGraph clg251 = new CLGGraph(TNN);
		CLGGraph clg252 = new CLGGraph(TE);
		CLGGraph clg253 = new CLGGraph(TF);
		CLGGraph clg254 = new CLGGraph(TN);
		CLGGraph clg255 = new CLGGraph(TNN);
		CLGGraph clg256 = new CLGGraph(TE);
		CLGGraph clg257 = new CLGGraph(TF);
		CLGGraph clg258 = new CLGGraph(TF);
		CLGGraph clg259 = new CLGGraph(TN);
		CLGGraph clg260 = new CLGGraph(TNN);
		CLGGraph clg261 = new CLGGraph(TE);
		CLGGraph clg262 = new CLGGraph(TN);
		CLGGraph clg263 = new CLGGraph(TNN);
		CLGGraph clg264 = new CLGGraph(TF);
		CLGGraph clg265 = new CLGGraph(TE);
		CLGGraph clg266 = new CLGGraph(TTN);
		CLGGraph clg267 = new CLGGraph(TTNN);
		CLGGraph clg268 = new CLGGraph(TTS);
		CLGGraph clg269 = new CLGGraph(TTF);
		CLGGraph clg270 = new CLGGraph(TN);
		CLGGraph clg271 = new CLGGraph(TNN);
		CLGGraph clg272 = new CLGGraph(TTF);
		CLGGraph clg273 = new CLGGraph(TE);
		CLGGraph clg274 = new CLGGraph(BN);
		CLGGraph clg275 = new CLGGraph(BNN);
		CLGGraph clg276 = new CLGGraph(BE);
		CLGGraph clg277 = new CLGGraph(BTN);
		CLGGraph clg278 = new CLGGraph(BTNN);
		CLGGraph clg279 = new CLGGraph(BTS);
		CLGGraph clg280 = new CLGGraph(BTF);
		CLGGraph clg281 = new CLGGraph(BBN);
		CLGGraph clg282 = new CLGGraph(BBNN);
		CLGGraph clg283 = new CLGGraph(BBHF);
		CLGGraph clg284 = new CLGGraph(BBWF);
		CLGGraph clg285 = new CLGGraph(BBYF);
		CLGGraph clg286 = new CLGGraph(BBXF);
		CLGGraph clg287 = new CLGGraph(BAN);
		CLGGraph clg288 = new CLGGraph(BANN);
		CLGGraph clg289 = new CLGGraph(BAS);
		CLGGraph clg290 = new CLGGraph(BALF);
		CLGGraph clg291 = new CLGGraph(BARF);
		CLGGraph clg292 = new CLGGraph(BACF);
		CLGGraph clg293 = new CLGGraph(BEN);
		CLGGraph clg294 = new CLGGraph(BENN);
		CLGGraph clg295 = new CLGGraph(BES);
		CLGGraph clg296 = new CLGGraph(BEF);
		CLGGraph clg297 = new CLGGraph(BGN);
		CLGGraph clg298 = new CLGGraph(BGNN);
		CLGGraph clg299 = new CLGGraph(BGS);
		CLGGraph clg300 = new CLGGraph(BGF);
		CLGGraph clg301 = new CLGGraph(BTEN);
		CLGGraph clg302 = new CLGGraph(BTENN);
		CLGGraph clg303 = new CLGGraph(BTES);
		CLGGraph clg304 = new CLGGraph(BTEF);
		CLGGraph clg305 = new CLGGraph(BTDN);
		CLGGraph clg306 = new CLGGraph(BTDNN);
		CLGGraph clg307 = new CLGGraph(BTDS);
		CLGGraph clg308 = new CLGGraph(BTDRLF);
		CLGGraph clg309 = new CLGGraph(BTDLRF);
		CLGGraph clg310 = new CLGGraph(BTDAF);
		CLGGraph clg311 = new CLGGraph(BSLN);
		CLGGraph clg312 = new CLGGraph(BSLNN);
		CLGGraph clg313 = new CLGGraph(BSLS);
		CLGGraph clg314 = new CLGGraph(BSLF);
		CLGGraph clg315 = new CLGGraph(BSN);
		CLGGraph clg316 = new CLGGraph(BSNN);
		CLGGraph clg317 = new CLGGraph(BSS);
		CLGGraph clg318 = new CLGGraph(BSF);
		CLGGraph clg319 = new CLGGraph(B_TE);
		CLGGraph clg320 = new CLGGraph(B_TNE);
		CLGGraph clg321 = new CLGGraph(B_BHE);
		CLGGraph clg322 = new CLGGraph(B_BHNE);
		CLGGraph clg323 = new CLGGraph(B_BWE);
		CLGGraph clg324 = new CLGGraph(B_BWNE);
		CLGGraph clg325 = new CLGGraph(B_BYE);
		CLGGraph clg326 = new CLGGraph(B_BYNE);
		CLGGraph clg327 = new CLGGraph(B_BXE);
		CLGGraph clg328 = new CLGGraph(B_BXNE);
		CLGGraph clg329 = new CLGGraph(B_ET);
		CLGGraph clg330 = new CLGGraph(B_EF);
		CLGGraph clg331 = new CLGGraph(B_TDLR);
		CLGGraph clg332 = new CLGGraph(B_TDNLR);
		CLGGraph clg333 = new CLGGraph(B_TDRL);
		CLGGraph clg334 = new CLGGraph(B_TDNRL);
		CLGGraph clg335 = new CLGGraph(B_TDA);
		CLGGraph clg336 = new CLGGraph(B_TDNA);
		CLGGraph clg337 = new CLGGraph(B_AR);
		CLGGraph clg338 = new CLGGraph(B_ANR);
		CLGGraph clg339 = new CLGGraph(B_AL);
		CLGGraph clg340 = new CLGGraph(B_ANL);
		CLGGraph clg341 = new CLGGraph(B_AC);
		CLGGraph clg342 = new CLGGraph(B_ANC);
		CLGGraph clg343 = new CLGGraph(B_TT);
		CLGGraph clg344 = new CLGGraph(B_TF);
		CLGGraph clg345 = new CLGGraph(B_ST);
		CLGGraph clg346 = new CLGGraph(B_SF);
		CLGGraph clg347 = new CLGGraph(B_GT);
		CLGGraph clg348 = new CLGGraph(B_GF);
		CLGGraph clg349 = new CLGGraph(B_SLE);
		CLGGraph clg350 = new CLGGraph(B_SLNE);
		CLGGraph clg351 = new CLGGraph(BF);
		CLGGraph clg352 = new CLGGraph(BN);
		CLGGraph clg353 = new CLGGraph(BNN);
		CLGGraph clg354 = new CLGGraph(BBS);
		CLGGraph clg355 = new CLGGraph(BBF);
		CLGGraph clg356 = new CLGGraph(BE);
		CLGGraph clg357 = new CLGGraph(BN);
		CLGGraph clg358 = new CLGGraph(BNN);
		CLGGraph clg359 = new CLGGraph(BEF);
		CLGGraph clg360 = new CLGGraph(BE);
		CLGGraph clg361 = new CLGGraph(BN);
		CLGGraph clg362 = new CLGGraph(BNN);
		CLGGraph clg363 = new CLGGraph(BF);
		CLGGraph clg364 = new CLGGraph(BE);
		CLGGraph clg365 = new CLGGraph(BN);
		CLGGraph clg366 = new CLGGraph(BNN);
		CLGGraph clg367 = new CLGGraph(BF);
		CLGGraph clg368 = new CLGGraph(BE);
		CLGGraph clg369 = new CLGGraph(BN);
		CLGGraph clg370 = new CLGGraph(BNN);
		CLGGraph clg371 = new CLGGraph(BF);
		CLGGraph clg372 = new CLGGraph(BE);
		CLGGraph clg373 = new CLGGraph(BN);
		CLGGraph clg374 = new CLGGraph(BNN);
		CLGGraph clg375 = new CLGGraph(BF);
		CLGGraph clg376 = new CLGGraph(BE);
		CLGGraph clg377 = new CLGGraph(BN);
		CLGGraph clg378 = new CLGGraph(BNN);
		CLGGraph clg379 = new CLGGraph(BF);
		CLGGraph clg380 = new CLGGraph(BF);
		CLGGraph clg381 = new CLGGraph(BE);
		
		CLGGraph clg472 = new CLGGraph(M_BHE);
		CLGGraph clg473 = new CLGGraph(M_BHNE);
		CLGGraph clg474 = new CLGGraph(M_BWE);
		CLGGraph clg475 = new CLGGraph(M_BWNE);
		CLGGraph clg476 = new CLGGraph(M_BYE);
		CLGGraph clg477 = new CLGGraph(M_BYNE);
		CLGGraph clg478 = new CLGGraph(M_BXE);
		CLGGraph clg479 = new CLGGraph(M_BXNE);
		CLGGraph clg442 = new CLGGraph(MBS);
		CLGGraph clg443 = new CLGGraph(MBHF);
		CLGGraph clg444 = new CLGGraph(MBWF);
		CLGGraph clg445 = new CLGGraph(MBYF);
		CLGGraph clg446 = new CLGGraph(MBXF);
		//Shell_layout
		clg22.graphAnd(clg34);
		clg23.graphAnd(clg35);
		clg22.graphOr(clg23);
		clg25.graphAnd(clg22);
		clg24.graphAnd(clg37);
		clg25.graphOr(clg24);
		clg27.graphAnd(clg25);
		clg26.graphAnd(clg39);
		clg27.graphOr(clg26);
		clg29.graphAnd(clg27);
		clg28.graphAnd(clg41);
		clg29.graphOr(clg28);
		clg31.graphAnd(clg29);
		clg30.graphAnd(clg43);
		clg31.graphOr(clg30);
		clg33.graphAnd(clg31);
		clg32.graphAnd(clg45);
		clg33.graphOr(clg32);
		clg18.graphAnd(clg33);
		clg17.graphAnd(clg47);
		clg18.graphOr(clg17);
		clg2.graphAnd(clg18);
		clg1.graphAnd(clg19);
		clg2.graphOr(clg1);
		//Shell_text
		clg62.graphAnd(clg85);
		clg63.graphAnd(clg86);
		clg62.graphOr(clg63);
		clg112.graphAnd(clg62);
		clg111.graphAnd(clg110);
		clg112.graphOr(clg111);
		clg4.graphAnd(clg112);
		clg3.graphAnd(clg113);
		clg4.graphOr(clg3);
		//Shell_bounds
		clg64.graphAnd(clg87);
		clg65.graphAnd(clg88);
		clg64.graphOr(clg65);
		clg66.graphAnd(clg64);
		clg67.graphAnd(clg89);
		clg66.graphOr(clg67);
		clg68.graphAnd(clg66);
		clg69.graphAnd(clg90);
		clg68.graphOr(clg69);
		clg70.graphAnd(clg68);
		clg71.graphAnd(clg91);
		clg70.graphOr(clg71);
		clg115.graphAnd(clg70);
		clg114.graphAnd(clg109);
		clg115.graphOr(clg114);
		clg6.graphAnd(clg115);
		clg5.graphAnd(clg116);
		clg6.graphOr(clg5);
		//Shell_enabled
		clg72.graphAnd(clg92);
		clg73.graphAnd(clg93);
		clg72.graphOr(clg73);
		clg106.graphAnd(clg72);
		clg105.graphAnd(clg107);
		clg106.graphOr(clg105);
		clg8.graphAnd(clg106);
		clg7.graphAnd(clg108);
		clg8.graphOr(clg7);
		//Shell_minimumsize
		clg76.graphAnd(clg94);
		clg77.graphAnd(clg95);
		clg76.graphOr(clg77);
		clg74.graphAnd(clg76);
		clg75.graphAnd(clg96);
		clg74.graphOr(clg75);
		clg118.graphAnd(clg74);
		clg117.graphAnd(clg119);
		clg118.graphOr(clg117);
		clg10.graphAnd(clg118);
		clg9.graphAnd(clg120);
		clg10.graphOr(clg9);
		//Shell_modified
		clg78.graphAnd(clg98);
		clg79.graphAnd(clg97);
		clg78.graphOr(clg79);
		clg122.graphAnd(clg78);
		clg121.graphAnd(clg123);
		clg122.graphOr(clg121);
		clg12.graphAnd(clg122);
		clg11.graphAnd(clg124);
		clg12.graphOr(clg11);
		//Shell_touchenabled
		clg80.graphAnd(clg99);
		clg81.graphAnd(clg100);
		clg80.graphOr(clg81);
		clg126.graphAnd(clg80);
		clg125.graphAnd(clg127);
		clg126.graphOr(clg125);
		clg14.graphAnd(clg126);
		clg13.graphAnd(clg128);
		clg14.graphOr(clg13);
		//Shell_textdirection
		clg82.graphAnd(clg101);
		clg59.graphAnd(clg103);
		clg82.graphOr(clg59);
		clg60.graphAnd(clg82);
		clg83.graphAnd(clg102);
		clg60.graphOr(clg83);
		clg61.graphAnd(clg60);
		clg84.graphAnd(clg104);
		clg61.graphOr(clg84);
		clg130.graphAnd(clg61);
		clg129.graphAnd(clg131);
		clg130.graphOr(clg129);
		clg16.graphAnd(clg130);
		clg15.graphAnd(clg132);
		clg16.graphOr(clg15);
		//Label_text
		clg170.graphAnd(clg139);
		clg171.graphAnd(clg140);
		clg170.graphOr(clg171);
		clg137.graphAnd(clg170);
		clg136.graphAnd(clg36);
		clg137.graphOr(clg136);
		clg134.graphAnd(clg137);
		clg133.graphAnd(clg138);
		clg134.graphOr(clg133);
		//Test
		clg472.graphAnd(clg442);
		clg473.graphAnd(clg443);
		clg472.graphOr(clg473);
		clg474.graphAnd(clg472);
		clg475.graphAnd(clg444);
		clg474.graphOr(clg475);
		clg476.graphAnd(clg474);
		clg477.graphAnd(clg445);
		clg476.graphOr(clg477);
		clg478.graphAnd(clg476);
		clg479.graphAnd(clg446);
		clg478.graphOr(clg479);
		//Label_bounds
		clg172.graphAnd(clg38);
		clg173.graphAnd(clg143);
		clg172.graphOr(clg173);
		clg174.graphAnd(clg172);
		clg175.graphAnd(clg144);
		clg174.graphOr(clg175);
		clg176.graphAnd(clg174);
		clg177.graphAnd(clg145);
		clg176.graphOr(clg177);
		clg178.graphAnd(clg176);
		clg179.graphAnd(clg146);
		clg178.graphOr(clg179);
		clg142.graphAnd(clg178);
		clg141.graphAnd(clg40);
		clg142.graphOr(clg141);
		clg49.graphAnd(clg142);
		clg48.graphAnd(clg42);
		clg49.graphOr(clg48);
		//Label_enabled
		clg180.graphAnd(clg149);
		clg181.graphAnd(clg150);
		clg180.graphOr(clg181);
		clg148.graphAnd(clg180);
		clg147.graphAnd(clg44);
		clg148.graphOr(clg147);
		clg51.graphAnd(clg148);
		clg50.graphAnd(clg46);
		clg51.graphOr(clg50);
		//Label_textdirection
		clg182.graphAnd(clg153);
		clg183.graphAnd(clg154);
		clg182.graphOr(clg183);
		clg185.graphAnd(clg182);
		clg184.graphAnd(clg155);
		clg185.graphOr(clg184);
		clg187.graphAnd(clg185);		
		clg186.graphAnd(clg156);
		clg187.graphOr(clg186);
		clg152.graphAnd(clg187);
		clg151.graphAnd(clg157);
		clg152.graphOr(clg151);
		clg53.graphAnd(clg152);
		clg52.graphAnd(clg158);
		clg53.graphOr(clg52);
		//Label_alignment
		clg190.graphAnd(clg161);
		clg191.graphAnd(clg162);
		clg190.graphOr(clg191);
		clg189.graphAnd(clg190);
		clg188.graphAnd(clg163);
		clg189.graphOr(clg188);
		clg193.graphAnd(clg189);
		clg192.graphAnd(clg164);
		clg193.graphOr(clg192);
		clg160.graphAnd(clg193);
		clg159.graphAnd(clg58);
		clg160.graphOr(clg159);
		clg55.graphAnd(clg160);
		clg54.graphAnd(clg196);
		clg55.graphOr(clg54);
		//Label_Touchenabled
		clg194.graphAnd(clg167);
		clg195.graphAnd(clg168);
		clg194.graphOr(clg195);
		clg166.graphAnd(clg194);
		clg165.graphAnd(clg197);
		clg166.graphOr(clg165);
		clg57.graphAnd(clg166);
		clg56.graphAnd(clg169);
		clg57.graphOr(clg56);
		//Text_bounds
		clg198.graphAnd(clg226);
		clg199.graphAnd(clg227);
		clg198.graphOr(clg199);
		clg201.graphAnd(clg198);
		clg202.graphAnd(clg228);
		clg201.graphOr(clg202);
		clg203.graphAnd(clg201);
		clg204.graphAnd(clg229);
		clg203.graphOr(clg204);
		clg205.graphAnd(clg203);
		clg206.graphAnd(clg230);
		clg205.graphOr(clg206);
		clg225.graphAnd(clg205);
		clg224.graphAnd(clg20);
		clg225.graphOr(clg224);
		clg222.graphAnd(clg225);
		clg221.graphAnd(clg135);
		clg222.graphOr(clg221);
		//Text_enabled
		clg207.graphAnd(clg233);
		clg208.graphAnd(clg234);
		clg207.graphOr(clg208);
		clg232.graphAnd(clg207);
		clg231.graphAnd(clg253);
		clg232.graphOr(clg231);
		clg251.graphAnd(clg232);
		clg250.graphAnd(clg252);
		clg251.graphOr(clg250);
		//Text_editabled
		clg209.graphAnd(clg244);
		clg210.graphAnd(clg245);
		clg209.graphOr(clg210);
		clg243.graphAnd(clg209);
		clg242.graphAnd(clg257);
		clg243.graphOr(clg242);
		clg255.graphAnd(clg243);
		clg254.graphAnd(clg256);
		clg255.graphOr(clg254);
		//Text_touchenabled
		clg211.graphAnd(clg248);
		clg212.graphAnd(clg249);
		clg211.graphOr(clg212);
		clg247.graphAnd(clg211);
		clg246.graphAnd(clg258);
		clg247.graphOr(clg246);
		clg260.graphAnd(clg247);
		clg259.graphAnd(clg261);
		clg260.graphOr(clg259);
		//Text_textdirection
		clg213.graphAnd(clg238);
		clg214.graphAnd(clg239);
		clg213.graphOr(clg214);
		clg216.graphAnd(clg213);
		clg215.graphAnd(clg240);
		clg216.graphOr(clg215);
		clg218.graphAnd(clg216);
		clg217.graphAnd(clg241);
		clg218.graphOr(clg217);
		clg236.graphAnd(clg218);
		clg235.graphAnd(clg264);
		clg236.graphOr(clg235);
		clg263.graphAnd(clg236);
		clg262.graphAnd(clg265);
		clg263.graphOr(clg262);
		//Text_text
		clg219.graphAnd(clg268);
		clg220.graphAnd(clg269);
		clg219.graphOr(clg220);
		clg267.graphAnd(clg219);
		clg266.graphAnd(clg272);
		clg267.graphOr(clg266);
		clg271.graphAnd(clg267);
		clg270.graphAnd(clg273);
		clg271.graphOr(clg270);
		//Button_text
		clg319.graphAnd(clg279);
		clg320.graphAnd(clg280);
		clg319.graphOr(clg320);
		clg278.graphAnd(clg319);
		clg277.graphAnd(clg351);
		clg278.graphOr(clg277);
		clg275.graphAnd(clg278);
		clg274.graphAnd(clg276);
		clg275.graphOr(clg274);
		//Button_bounds
		clg321.graphAnd(clg354);
		clg322.graphAnd(clg283);
		clg321.graphOr(clg322);
		clg323.graphAnd(clg321);
		clg324.graphAnd(clg284);
		clg323.graphOr(clg324);
		clg325.graphAnd(clg323);
		clg326.graphAnd(clg285);
		clg325.graphOr(clg326);
		clg327.graphAnd(clg325);
		clg328.graphAnd(clg286);
		clg327.graphOr(clg328);
		clg282.graphAnd(clg327);
		clg281.graphAnd(clg355);
		clg282.graphOr(clg281);
		clg353.graphAnd(clg282);
		clg352.graphAnd(clg356);
		clg353.graphOr(clg352);
		//Button_enabled
		clg329.graphAnd(clg295);
		clg330.graphAnd(clg296);
		clg329.graphOr(clg330);
		clg294.graphAnd(clg329);
		clg293.graphAnd(clg359);
		clg294.graphOr(clg293);
		clg358.graphAnd(clg294);
		clg357.graphAnd(clg360);
		clg358.graphOr(clg357);
		//Button_textdirection
		clg331.graphAnd(clg307);
		clg332.graphAnd(clg308);
		clg331.graphOr(clg332);
		clg334.graphAnd(clg331);
		clg333.graphAnd(clg309);
		clg334.graphOr(clg333);
		clg336.graphAnd(clg334);
		clg335.graphAnd(clg310);
		clg336.graphOr(clg335);
		clg306.graphAnd(clg336);
		clg305.graphAnd(clg363);
		clg306.graphOr(clg305);
		clg362.graphAnd(clg306);
		clg361.graphAnd(clg364);
		clg362.graphOr(clg361);
		//Button_alignment
		clg341.graphAnd(clg289);
		clg342.graphAnd(clg292);
		clg341.graphOr(clg342);
		clg340.graphAnd(clg341);
		clg339.graphAnd(clg290);
		clg340.graphOr(clg339);
		clg338.graphAnd(clg340);
		clg337.graphAnd(clg367);
		clg338.graphOr(clg337);
		clg288.graphAnd(clg338);
		clg287.graphAnd(clg291);
		clg288.graphOr(clg287);
		clg366.graphAnd(clg288);
		clg365.graphAnd(clg368);
		clg366.graphOr(clg365);
		//Button_grayed
		clg347.graphAnd(clg299);
		clg348.graphAnd(clg300);
		clg347.graphOr(clg348);
		clg298.graphAnd(clg347);
		clg297.graphAnd(clg371);
		clg298.graphOr(clg297);
		clg370.graphAnd(clg298);
		clg369.graphAnd(clg372);
		clg370.graphOr(clg369);
		//Button_touchenabled
		clg343.graphAnd(clg303);
		clg344.graphAnd(clg304);
		clg343.graphOr(clg344);
		clg302.graphAnd(clg343);
		clg301.graphAnd(clg375);
		clg302.graphOr(clg301);
		clg374.graphAnd(clg302);
		clg373.graphAnd(clg376);
		clg374.graphOr(clg373);
		//Button_selectionlistener
		clg349.graphAnd(clg313);
		clg350.graphAnd(clg314);
		clg349.graphOr(clg350);
		clg312.graphAnd(clg349);
		clg311.graphAnd(clg379);
		clg312.graphOr(clg311);
		clg345.graphAnd(clg312);
		clg346.graphAnd(clg380);
		clg345.graphOr(clg346);
		clg316.graphAnd(clg345);
		clg315.graphAnd(clg318);
		clg316.graphOr(clg315);
		clg378.graphAnd(clg316);
		clg377.graphAnd(clg381);
		clg378.graphOr(clg377);
		//將CLG圖儲存進ArrayList中
		ArrayList<CLGGraph> Gnodes = new ArrayList<CLGGraph>();
		Gnodes.add(clg2);
		Gnodes.add(clg4);
		Gnodes.add(clg6);
		Gnodes.add(clg8);
		Gnodes.add(clg10);
		Gnodes.add(clg12);
		Gnodes.add(clg14);
		Gnodes.add(clg16);
		Gnodes.add(clg134);
		Gnodes.add(clg49);
		Gnodes.add(clg51);
		Gnodes.add(clg53);
		Gnodes.add(clg55);
		Gnodes.add(clg57);
		Gnodes.add(clg222);
		Gnodes.add(clg251);
		Gnodes.add(clg255);
		Gnodes.add(clg260);
		Gnodes.add(clg263);
		Gnodes.add(clg271);
		Gnodes.add(clg275);
		Gnodes.add(clg353);
		Gnodes.add(clg358);
		Gnodes.add(clg362);
		Gnodes.add(clg366);
		Gnodes.add(clg370);
		Gnodes.add(clg374);
		Gnodes.add(clg378);
		//畫CLG圖並查看
		String clgdraw = clg478.graphDraw();
		//System.out.println(clgdraw);
		
		//設置SymbolTable屬性及名稱資訊
		String Counter = "Counter";
		SymbolTable ST = new SymbolTable(Counter);
		MethodToken MT = new MethodToken(Counter);
		ArrayList<VariableToken> VTAL = new ArrayList<VariableToken>();
		ArrayList<String> MPAL = new ArrayList<String>();	//函數參數的ArrayList
		ArrayList<String> MPTAL = new ArrayList<String>();	//函數參數型態的ArrayList
		String MabelX = "counter_Label_x";
		String MabelY = "counter_Label_y";
		String MabelW = "counter_Label_width";
		String MabelH = "counter_Label_height";
		String ShellB = "counter_Shell_bounds";
		String ShellX = "counter_Shell_x";
		String ShellY = "counter_Shell_y";
		String ShellW = "counter_Shell_width";
		String ShellH = "counter_Shell_height";
		String ShellT = "counter_Shell_text";
		String ShellE = "counter_Shell_enabled";
		String ShellMS = "counter_Shell_minimumsize";
		String ShellM = "counter_Shell_modified";
		String ShellTH = "counter_Shell_touchenabled";
		String ShellTD = "counter_Shell_textdirection";
		String ShellL = "counter_Shell_layout";
		String LabelT = "counter_Label_text";
		String LabelB = "counter_Label_bounds";
		String LabelE = "counter_Label_enabled";
		String LabelTD = "counter_Label_textdirection";
		String LabelA = "counter_Label_alignment";
		String LabelTH = "counter_Label_touchenabled";
		String TextT = "counter_Text_text";
		String TextB = "counter_Text_bounds";
		String TextE = "counter_Text_enabled";
		String TextTD = "counter_Text_textdirection";
		String TextED = "counter_Text_editable";
		String TextTH = "counter_Text_touchenabled";
		String ButtonT = "counter_Button_text";
		String ButtonB = "counter_Button_bounds";
		String ButtonE = "counter_Button_enabled";
		String ButtonA = "counter_Button_alignment";
		String ButtonTD = "counter_Button_textdirection";
		String ButtonG = "counter_Button_grayed";
		String ButtonTH = "counter_Button_touchenabled";
		String ButtonSL = "counter_Button_selectionlistener";

		String S = "string";
		String I = "int";
		String B = "boolean";
		MPAL.add(MabelX);
		MPAL.add(MabelY);	
		MPAL.add(MabelW);	
		MPAL.add(MabelH);
		MPAL.add(ShellB);
		MPAL.add(ShellX);	
		MPAL.add(ShellY);	
		MPAL.add(ShellW);	
		MPAL.add(ShellH);
		MPAL.add(ShellT);
		MPAL.add(ShellE);

		MPTAL.add(I);
		MPTAL.add(I);	
		MPTAL.add(I);
		MPTAL.add(I);
		MPTAL.add(I);
		MPTAL.add(I);	
		MPTAL.add(I);
		MPTAL.add(I);
		MPTAL.add(I);
		MPTAL.add(S);
		MPTAL.add(B);
		
		StringType SType = new StringType();
		IntType IType = new IntType();
		BooleanType BType = new BooleanType();
		VariableToken VTMabelX = new VariableToken(MabelX, IType);		//新增參數為INT型態的資訊
		VariableToken VTMabelY = new VariableToken(MabelY, IType);		
		VariableToken VTMabelW = new VariableToken(MabelW, IType);		
		VariableToken VTMabelH = new VariableToken(MabelH, IType);
		VariableToken VTShellX = new VariableToken(ShellX, IType);		//新增參數為INT型態的資訊
		VariableToken VTShellY = new VariableToken(ShellY, IType);		
		VariableToken VTShellW = new VariableToken(ShellW, IType);		
		VariableToken VTShellH = new VariableToken(ShellH, IType);	
		VariableToken VTShellB = new VariableToken(ShellB, IType);
		VariableToken VTShellT = new VariableToken(ShellT, SType);
		VariableToken VTShellTE = new VariableToken(ShellE, BType);

		VTAL.add(VTMabelX);	
		MT.addArgument(VTMabelX);		
		ST.addAttributeMap(VTMabelX);
		VTAL.add(VTMabelY);	
		MT.addArgument(VTMabelY);
		ST.addAttributeMap(VTMabelY);
		VTAL.add(VTMabelW);	
		MT.addArgument(VTMabelW);		
		ST.addAttributeMap(VTMabelW);
		VTAL.add(VTMabelH);		
		MT.addArgument(VTMabelH);		
		ST.addAttributeMap(VTMabelH);
		VTAL.add(VTShellB);	
		MT.addArgument(VTShellB);		
		ST.addAttributeMap(VTShellB);
		VTAL.add(VTShellX);	
		MT.addArgument(VTShellX);		
		ST.addAttributeMap(VTShellX);
		VTAL.add(VTShellY);	
		MT.addArgument(VTShellY);
		ST.addAttributeMap(VTShellY);
		VTAL.add(VTShellW);	
		MT.addArgument(VTShellW);		
		ST.addAttributeMap(VTShellW);
		VTAL.add(VTShellH);		
		MT.addArgument(VTShellH);		
		ST.addAttributeMap(VTShellH);
		VTAL.add(VTShellT);		
		MT.addArgument(VTShellT);
		VTAL.add(VTShellTE);		
		MT.addArgument(VTShellTE);		
		ST.addAttributeMap(VTShellTE);
		
		ST.addArgument(VTAL);
		ST.addMethod(MT);
		
		((CLGStartNode)(clg4.getStartNode())).setClassName(ShellT);
		((CLGStartNode)(clg4.getStartNode())).setMethodName(ShellT);
		((CLGStartNode)(clg4.getStartNode())).setRetType("String");
		((CLGStartNode)(clg4.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg4.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg6.getStartNode())).setClassName(ShellB);
		((CLGStartNode)(clg6.getStartNode())).setMethodName(ShellB);
		((CLGStartNode)(clg6.getStartNode())).setRetType("String");
		((CLGStartNode)(clg6.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg6.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg8.getStartNode())).setClassName(ShellE);
		((CLGStartNode)(clg8.getStartNode())).setMethodName(ShellE);
		((CLGStartNode)(clg8.getStartNode())).setRetType("String");
		((CLGStartNode)(clg8.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg8.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg10.getStartNode())).setClassName(ShellMS);
		((CLGStartNode)(clg10.getStartNode())).setMethodName(ShellMS);
		((CLGStartNode)(clg10.getStartNode())).setRetType("String");
		((CLGStartNode)(clg10.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg10.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg12.getStartNode())).setClassName(ShellM);
		((CLGStartNode)(clg12.getStartNode())).setMethodName(ShellM);
		((CLGStartNode)(clg12.getStartNode())).setRetType("String");
		((CLGStartNode)(clg12.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg12.getStartNode())).setMethodParameterTypes(MPTAL);

		((CLGStartNode)(clg14.getStartNode())).setClassName(ShellTH);
		((CLGStartNode)(clg14.getStartNode())).setMethodName(ShellTH);
		((CLGStartNode)(clg14.getStartNode())).setRetType("String");
		((CLGStartNode)(clg14.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg14.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg16.getStartNode())).setClassName(ShellTD);
		((CLGStartNode)(clg16.getStartNode())).setMethodName(ShellTD);
		((CLGStartNode)(clg16.getStartNode())).setRetType("String");
		((CLGStartNode)(clg16.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg16.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg2.getStartNode())).setClassName(ShellL);
		((CLGStartNode)(clg2.getStartNode())).setMethodName(ShellL);
		((CLGStartNode)(clg2.getStartNode())).setRetType("String");
		((CLGStartNode)(clg2.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg2.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg134.getStartNode())).setClassName(LabelT);
		((CLGStartNode)(clg134.getStartNode())).setMethodName(LabelT);
		((CLGStartNode)(clg134.getStartNode())).setRetType("String");
		((CLGStartNode)(clg134.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg134.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg49.getStartNode())).setClassName(LabelB);
		((CLGStartNode)(clg49.getStartNode())).setMethodName(LabelB);
		((CLGStartNode)(clg49.getStartNode())).setRetType("String");
		((CLGStartNode)(clg49.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg49.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg51.getStartNode())).setClassName(LabelE);
		((CLGStartNode)(clg51.getStartNode())).setMethodName(LabelE);
		((CLGStartNode)(clg51.getStartNode())).setRetType("String");
		((CLGStartNode)(clg51.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg51.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg53.getStartNode())).setClassName(LabelTD);
		((CLGStartNode)(clg53.getStartNode())).setMethodName(LabelTD);
		((CLGStartNode)(clg53.getStartNode())).setRetType("String");
		((CLGStartNode)(clg53.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg53.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg55.getStartNode())).setClassName(LabelA);
		((CLGStartNode)(clg55.getStartNode())).setMethodName(LabelA);
		((CLGStartNode)(clg55.getStartNode())).setRetType("String");
		((CLGStartNode)(clg55.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg55.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg57.getStartNode())).setClassName(LabelTH);
		((CLGStartNode)(clg57.getStartNode())).setMethodName(LabelTH);
		((CLGStartNode)(clg57.getStartNode())).setRetType("String");
		((CLGStartNode)(clg57.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg57.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg222.getStartNode())).setClassName(TextB);
		((CLGStartNode)(clg222.getStartNode())).setMethodName(TextB);
		((CLGStartNode)(clg222.getStartNode())).setRetType("String");
		((CLGStartNode)(clg222.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg222.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg251.getStartNode())).setClassName(TextE);
		((CLGStartNode)(clg251.getStartNode())).setMethodName(TextE);
		((CLGStartNode)(clg251.getStartNode())).setRetType("String");
		((CLGStartNode)(clg251.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg251.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg255.getStartNode())).setClassName(TextED);
		((CLGStartNode)(clg255.getStartNode())).setMethodName(TextED);
		((CLGStartNode)(clg255.getStartNode())).setRetType("String");
		((CLGStartNode)(clg255.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg255.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg260.getStartNode())).setClassName(TextTH);
		((CLGStartNode)(clg260.getStartNode())).setMethodName(TextTH);
		((CLGStartNode)(clg260.getStartNode())).setRetType("String");
		((CLGStartNode)(clg260.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg260.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg263.getStartNode())).setClassName(TextTD);
		((CLGStartNode)(clg263.getStartNode())).setMethodName(TextTD);
		((CLGStartNode)(clg263.getStartNode())).setRetType("String");
		((CLGStartNode)(clg263.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg263.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg271.getStartNode())).setClassName(TextT);
		((CLGStartNode)(clg271.getStartNode())).setMethodName(TextT);
		((CLGStartNode)(clg271.getStartNode())).setRetType("String");
		((CLGStartNode)(clg271.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg271.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg275.getStartNode())).setClassName(ButtonT);
		((CLGStartNode)(clg275.getStartNode())).setMethodName(ButtonT);
		((CLGStartNode)(clg275.getStartNode())).setRetType("String");
		((CLGStartNode)(clg275.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg275.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg353.getStartNode())).setClassName(ButtonB);
		((CLGStartNode)(clg353.getStartNode())).setMethodName(ButtonB);
		((CLGStartNode)(clg353.getStartNode())).setRetType("String");
		((CLGStartNode)(clg353.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg353.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg358.getStartNode())).setClassName(ButtonE);
		((CLGStartNode)(clg358.getStartNode())).setMethodName(ButtonE);
		((CLGStartNode)(clg358.getStartNode())).setRetType("String");
		((CLGStartNode)(clg358.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg358.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg362.getStartNode())).setClassName(ButtonTD);
		((CLGStartNode)(clg362.getStartNode())).setMethodName(ButtonTD);
		((CLGStartNode)(clg362.getStartNode())).setRetType("String");
		((CLGStartNode)(clg362.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg362.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg366.getStartNode())).setClassName(ButtonA);
		((CLGStartNode)(clg366.getStartNode())).setMethodName(ButtonA);
		((CLGStartNode)(clg366.getStartNode())).setRetType("String");
		((CLGStartNode)(clg366.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg366.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg370.getStartNode())).setClassName(ButtonG);
		((CLGStartNode)(clg370.getStartNode())).setMethodName(ButtonG);
		((CLGStartNode)(clg370.getStartNode())).setRetType("String");
		((CLGStartNode)(clg370.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg370.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg374.getStartNode())).setClassName(ButtonTH);
		((CLGStartNode)(clg374.getStartNode())).setMethodName(ButtonTH);
		((CLGStartNode)(clg374.getStartNode())).setRetType("String");
		((CLGStartNode)(clg374.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg374.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg378.getStartNode())).setClassName(ButtonSL);
		((CLGStartNode)(clg378.getStartNode())).setMethodName(ButtonSL);
		((CLGStartNode)(clg378.getStartNode())).setRetType("String");
		((CLGStartNode)(clg378.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg378.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg478.getStartNode())).setClassName(Counter);
		((CLGStartNode)(clg478.getStartNode())).setMethodName(Counter);
		((CLGStartNode)(clg478.getStartNode())).setRetType("String");
		((CLGStartNode)(clg478.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg478.getStartNode())).setMethodParameterTypes(MPTAL);

		Main.symbolTable =  ST;
	    
		//設定外掛參數與檔案儲存位置
		BlackBoxHandler.coverageCriteria = "DCC";
		Main.criterion = Criterion.dcc;
		Main.TestType = "BlackBox";
		Main.typeTable = new TypeTable();
		Main.typeTable.init();
		Main.boundary_analysis = true;
		String test_output_path = "C:\\Users\\Benson\\Downloads\\TD\\TD1\\";
		DataWriter.testPath_output_path = test_output_path;
		DataWriter.testCons_output_path = test_output_path;
		DataWriter.testData_output_path = test_output_path;
		DataWriter.output_folder_path = test_output_path;
		DataWriter.Clg_output_path = test_output_path;
		
		try {
			CLG2Path clgp = new CLG2Path();
			//clgp.init(Gnodes);
			for (int i = 0; i <= 27 ; i++) {
				clgp.genTestData(Gnodes, i);
			}
		} catch (IOException | ParserConfigurationException | SAXException | TemplateException | ModelAccessException
				| ParseException | EclipseException | TransformerException | CloneNotSupportedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.print(System.currentTimeMillis()-startTime);
		
	}
}
