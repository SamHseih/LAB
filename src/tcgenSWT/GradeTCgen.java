package tcgenSWT;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import com.parctechnologies.eclipse.EclipseException;

import ccu.pllab.tcgen.AbstractCLG.CLGGraph;
import ccu.pllab.tcgen.AbstractCLG.CLGStartNode;
import ccu.pllab.tcgen.AbstractConstraint.CLGLiteralNode;
import ccu.pllab.tcgen.AbstractConstraint.CLGOperatorNode;
import ccu.pllab.tcgen.AbstractSyntaxTree.MethodToken;
import ccu.pllab.tcgen.AbstractSyntaxTree.SymbolTable;
import ccu.pllab.tcgen.AbstractSyntaxTree.VariableToken;
import ccu.pllab.tcgen.AbstractType.BooleanType;
import ccu.pllab.tcgen.AbstractType.IntType;
import ccu.pllab.tcgen.AbstractType.StringType;
import ccu.pllab.tcgen.AbstractType.TypeTable;
import ccu.pllab.tcgen.DataWriter.DataWriter;
import ccu.pllab.tcgen.clg2path.CriterionFactory.Criterion;
import ccu.pllab.tcgen.exe.main.Main;
import ccu.pllab.tcgen.transform.CLG2Path;
import tcgenplugin_2.handlers.BlackBoxHandler;
import tudresden.ocl20.pivot.model.ModelAccessException;
import tudresden.ocl20.pivot.parser.ParseException;
import tudresden.ocl20.pivot.tools.template.exception.TemplateException;

public class GradeTCgen {
	public static void main(String[] args) throws EclipseException, IOException {
		
		long startTime = System.currentTimeMillis();
		
		try {
			DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder domBuilder = domFactory.newDocumentBuilder();
			InputStream input = null;
			input = new FileInputStream("C://Users//Benson//Downloads//SWT//範例Grade//GradeGUISpec.xml");
			Document doc = domBuilder.parse(input);
			Element root = doc.getDocumentElement();	
			NodeList nList = root.getChildNodes();	
			Node Label1 = nList.item(1);
			Node Label2 = nList.item(3);
			Node Text1 = nList.item(5);
			Node Text2 = nList.item(7);
			Node Button = nList.item(9);
			String Shell_text = root.getAttribute("text");
			String Shell_bounds = root.getAttribute("bounds");			
			String Shell_layout = root.getAttribute("layout");
			String Shell_enabled = root.getAttribute("enabled");
			String Shell_minimumsize = root.getAttribute("minimumsize");
			String Shell_modified = root.getAttribute("modified");
			String Shell_textdirection = root.getAttribute("textDirection");
			String Shell_touchenabled = root.getAttribute("touchenabled");
			String Label1_text = ((Element) Label1).getAttribute("text");
			String Label1_bounds = ((Element) Label1).getAttribute("bounds");
			String Label1_alignment = ((Element) Label1).getAttribute("alignment");
			String Label1_enabled = ((Element) Label1).getAttribute("enabled");
			String Label1_textdirection = ((Element) Label1).getAttribute("textDirection");
			String Label1_touchenabled = ((Element) Label1).getAttribute("touchenabled");		
			String Label2_text = ((Element) Label2).getAttribute("text");
			String Label2_bounds = ((Element) Label2).getAttribute("bounds");
			String Label2_alignment = ((Element) Label2).getAttribute("alignment");
			String Label2_enabled = ((Element) Label2).getAttribute("enabled");
			String Label2_textdirection = ((Element) Label2).getAttribute("textDirection");
			String Label2_touchenabled = ((Element) Label2).getAttribute("touchenabled");		
			String Text1_bounds = ((Element) Text1).getAttribute("bounds");
			String Text1_editable = ((Element) Text1).getAttribute("editable");
			String Text1_enabled = ((Element) Text1).getAttribute("enabled");
			String Text1_textdirection = ((Element) Text1).getAttribute("textDirection");
			String Text1_touchenabled = ((Element) Text1).getAttribute("touchenabled");	
			String Text2_bounds = ((Element) Text2).getAttribute("bounds");
			String Text2_editable = ((Element) Text2).getAttribute("editable");
			String Text2_enabled = ((Element) Text2).getAttribute("enabled");
			String Text2_textdirection = ((Element) Text2).getAttribute("textDirection");
			String Text2_touchenabled = ((Element) Text2).getAttribute("touchenabled");	
			String Button_text = ((Element) Button).getAttribute("text");	
			String Button_bounds = ((Element) Button).getAttribute("bounds");
			String Button_alignment = ((Element) Button).getAttribute("alignment");
			String Button_enabled = ((Element) Button).getAttribute("enabled");
			String Button_grayed = ((Element) Button).getAttribute("grayed");
			String Button_textdirection = ((Element) Button).getAttribute("textDirection");
			String Button_touchenabled = ((Element) Button).getAttribute("touchenabled");
			String Button_selection = ((Element) Button).getAttribute("selection");	
			String Button_selectionlistener = ((Element) Button).getAttribute("selectionlistener");
		} catch (ParserConfigurationException e) {
			e.printStackTrace();
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (SAXException e) {
			e.printStackTrace();
		}
		
		//設置CLG限制式的文字節點內容
		CLGLiteralNode Result = new CLGLiteralNode("Result", "int");
		CLGLiteralNode Nu = new CLGLiteralNode("null", "string");
		CLGLiteralNode Suc = new CLGLiteralNode("success", "string");
		CLGLiteralNode Fa = new CLGLiteralNode("fail", "string");
		CLGLiteralNode Exception = new CLGLiteralNode("Exception", "int");
		CLGLiteralNode Ex = new CLGLiteralNode("exception", "string");		
		CLGLiteralNode Shell = new CLGLiteralNode("Grade_Shell", "int");
		CLGLiteralNode Shell_Layout = new CLGLiteralNode("Grade_Shell_layout", "int");
		CLGLiteralNode Shell_absoluteLayout = new CLGLiteralNode("absoluteLayout", "string");
		CLGLiteralNode Shell_GridLayout = new CLGLiteralNode("GridLayout", "string");
		CLGLiteralNode Shell_FillLayout = new CLGLiteralNode("FillLayout", "string");
		CLGLiteralNode Shell_RowLayout = new CLGLiteralNode("RowLayout", "string");
		CLGLiteralNode Shell_FormLayout = new CLGLiteralNode("FormLayout", "string");
		CLGLiteralNode Shell_StackLayout = new CLGLiteralNode("StackLayout", "string");
		CLGLiteralNode Shell_Bounds = new CLGLiteralNode("Grade_Shell_bounds", "int");
		CLGLiteralNode Shell_X = new CLGLiteralNode("Grade_Shell_bounds_x", "int");
		CLGLiteralNode Shell_X_value = new CLGLiteralNode("0", "int");
		CLGLiteralNode Shell_Y = new CLGLiteralNode("Grade_Shell_bounds_y", "int");
		CLGLiteralNode Shell_Y_value = new CLGLiteralNode("0", "int");
		CLGLiteralNode Shell_Width = new CLGLiteralNode("Grade_Shell_bounds_width", "int");
		CLGLiteralNode Shell_Width_value = new CLGLiteralNode("250", "int");
		CLGLiteralNode Shell_Height = new CLGLiteralNode("Grade_Shell_bounds_height", "int");
		CLGLiteralNode Shell_Height_value = new CLGLiteralNode("250", "int");
		CLGLiteralNode Shell_Text = new CLGLiteralNode("Grade_Shell_text", "int");
		CLGLiteralNode Shell_Application = new CLGLiteralNode("Grade", "string");
		CLGLiteralNode Shell_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Shell_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Shell_Enabled = new CLGLiteralNode("Grade_Shell_enabled", "int");
		CLGLiteralNode Shell_Minimumsize = new CLGLiteralNode("Grade_Shell_minimumsize", "int");
		CLGLiteralNode Shell_Minimumsize_X = new CLGLiteralNode("Grade_Shell_minimumsize_X", "int");
		CLGLiteralNode Shell_Minimumsize_Y = new CLGLiteralNode("Grade_Shell_minimumsize_Y", "int");
		CLGLiteralNode Shell_MinimumsizeX= new CLGLiteralNode("136", "int");
		CLGLiteralNode Shell_MinimumsizeY = new CLGLiteralNode("39", "int");
		CLGLiteralNode Shell_Modified = new CLGLiteralNode("Grade_Shell_modified", "int");
		CLGLiteralNode Shell_Touchenabled = new CLGLiteralNode("Grade_Shell_touchenabled", "int");
		CLGLiteralNode Shell_Textdirection = new CLGLiteralNode("Grade_Shell_textdirection", "int");
		CLGLiteralNode Shell_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Shell_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Shell_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Label1 = new CLGLiteralNode("Grade_Label1", "int");
		CLGLiteralNode Label1_Text = new CLGLiteralNode("Grade_Label1_text", "int");
		CLGLiteralNode Label1_score = new CLGLiteralNode("score", "string");
		CLGLiteralNode Label1_Bounds = new CLGLiteralNode("Grade_Label1_bounds", "int");
		CLGLiteralNode Label1_X = new CLGLiteralNode("Grade_Label1_bounds_x", "int");
		CLGLiteralNode Label1_X_value = new CLGLiteralNode("20", "int");
		CLGLiteralNode Label1_Y = new CLGLiteralNode("Grade_Label1_bounds_y", "int");
		CLGLiteralNode Label1_Y_value = new CLGLiteralNode("40", "int");
		CLGLiteralNode Label1_Width = new CLGLiteralNode("Grade_Label1_bounds_width", "int");
		CLGLiteralNode Label1_Width_value = new CLGLiteralNode("60", "int");
		CLGLiteralNode Label1_Height = new CLGLiteralNode("Grade_Label1_bounds_height", "int");
		CLGLiteralNode Label1_Height_value = new CLGLiteralNode("15", "int");
		CLGLiteralNode Label1_Alignment = new CLGLiteralNode("Grade_Label1_alignment", "int");
		CLGLiteralNode Label1_Enabled = new CLGLiteralNode("Grade_Label1_enabled", "int");
		CLGLiteralNode Label1_Alignment_left = new CLGLiteralNode("16384", "int");
		CLGLiteralNode Label1_Alignment_center = new CLGLiteralNode("16777216", "int");
		CLGLiteralNode Label1_Alignment_right = new CLGLiteralNode("131072", "int");
		CLGLiteralNode Label1_Textdirection = new CLGLiteralNode("Grade_Label1_textdirection", "int");
		CLGLiteralNode Label1_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Label1_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Label1_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Label1_Touchenabled = new CLGLiteralNode("Grade_Label1_touchenabled", "int");
		CLGLiteralNode Label1_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Label1_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Label2 = new CLGLiteralNode("Grade_Label2", "int");
		CLGLiteralNode Label2_Text = new CLGLiteralNode("Grade_Label2_text", "int");
		CLGLiteralNode Label2_grade = new CLGLiteralNode("grade", "string");
		CLGLiteralNode Label2_Bounds = new CLGLiteralNode("Grade_Label2_bounds", "int");
		CLGLiteralNode Label2_X = new CLGLiteralNode("Grade_Label2_bounds_x", "int");
		CLGLiteralNode Label2_X_value = new CLGLiteralNode("20", "int");
		CLGLiteralNode Label2_Y = new CLGLiteralNode("Grade_Label2_bounds_y", "int");
		CLGLiteralNode Label2_Y_value = new CLGLiteralNode("120", "int");
		CLGLiteralNode Label2_Width = new CLGLiteralNode("Grade_Label2_bounds_width", "int");
		CLGLiteralNode Label2_Width_value = new CLGLiteralNode("60", "int");
		CLGLiteralNode Label2_Height = new CLGLiteralNode("Grade_Label2_bounds_height", "int");
		CLGLiteralNode Label2_Height_value = new CLGLiteralNode("15", "int");
		CLGLiteralNode Label2_Alignment = new CLGLiteralNode("Grade_Label2_bounds_alignment", "int");
		CLGLiteralNode Label2_Enabled = new CLGLiteralNode("Grade_Label2_enabled", "int");
		CLGLiteralNode Label2_Alignment_left = new CLGLiteralNode("16384", "int");
		CLGLiteralNode Label2_Alignment_center = new CLGLiteralNode("16777216", "int");
		CLGLiteralNode Label2_Alignment_right = new CLGLiteralNode("131072", "int");
		CLGLiteralNode Label2_Textdirection = new CLGLiteralNode("Grade_Label2_textdirection", "int");
		CLGLiteralNode Label2_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Label2_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Label2_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Label2_Touchenabled = new CLGLiteralNode("Grade_Label2_touchenabled", "int");
		CLGLiteralNode Label2_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Label2_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Text1 = new CLGLiteralNode("Grade_Text1", "int");
		CLGLiteralNode Text1_Text = new CLGLiteralNode("Grade_Text1_text", "int");
		CLGLiteralNode Text1_empty = new CLGLiteralNode("''''", "string");
		CLGLiteralNode Text1_Bounds = new CLGLiteralNode("Grade_Text1_bounds", "int");
		CLGLiteralNode Text1_X = new CLGLiteralNode("Grade_Text1_bounds_x", "int");
		CLGLiteralNode Text1_X_value = new CLGLiteralNode("120", "int");
		CLGLiteralNode Text1_Y = new CLGLiteralNode("Grade_Text1_bounds_y", "int");
		CLGLiteralNode Text1_Y_value = new CLGLiteralNode("40", "int");
		CLGLiteralNode Text1_Width = new CLGLiteralNode("Grade_Text1_bounds_width", "int");
		CLGLiteralNode Text1_Width_value = new CLGLiteralNode("70", "int");
		CLGLiteralNode Text1_Height = new CLGLiteralNode("Grade_Text1_bounds_height", "int");
		CLGLiteralNode Text1_Height_value = new CLGLiteralNode("20", "int");
		CLGLiteralNode Text1_Editable = new CLGLiteralNode("Grade_Text1_editable", "int");
		CLGLiteralNode Text1_Enabled = new CLGLiteralNode("Grade_Text1_enabled", "int");
		CLGLiteralNode Text1_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Text1_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Text1_Textdirection = new CLGLiteralNode("Grade_Text1_textdirection", "int");
		CLGLiteralNode Text1_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Text1_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Text1_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Text1_Touchenabled = new CLGLiteralNode("Grade_Text1_touchenabled", "int");
		CLGLiteralNode Text2 = new CLGLiteralNode("Grade_Text2", "int");
		CLGLiteralNode Text2_Text = new CLGLiteralNode("Grade_Text2_text", "int");
		CLGLiteralNode Text2_empty = new CLGLiteralNode("''''", "string");
		CLGLiteralNode Text2_Bounds = new CLGLiteralNode("Grade_Text2_bounds", "int");
		CLGLiteralNode Text2_X = new CLGLiteralNode("Grade_Text2_bounds_x", "int");
		CLGLiteralNode Text2_X_value = new CLGLiteralNode("120", "int");
		CLGLiteralNode Text2_Y = new CLGLiteralNode("Grade_Text2_bounds_y", "int");
		CLGLiteralNode Text2_Y_value = new CLGLiteralNode("120", "int");
		CLGLiteralNode Text2_Width = new CLGLiteralNode("Grade_Text2_bounds_width", "int");
		CLGLiteralNode Text2_Width_value = new CLGLiteralNode("70", "int");
		CLGLiteralNode Text2_Height = new CLGLiteralNode("Grade_Text2_bounds_height", "int");
		CLGLiteralNode Text2_Height_value = new CLGLiteralNode("20", "int");
		CLGLiteralNode Text2_Editable = new CLGLiteralNode("Grade_Text2_editable", "int");
		CLGLiteralNode Text2_Enabled = new CLGLiteralNode("Grade_Text2_enabled", "int");
		CLGLiteralNode Text2_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Text2_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Text2_Textdirection = new CLGLiteralNode("Grade_Text2_textdirection", "int");
		CLGLiteralNode Text2_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Text2_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Text2_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Text2_Touchenabled = new CLGLiteralNode("Grade_Text2_touchenabled", "int");
		CLGLiteralNode Button = new CLGLiteralNode("Grade_Button", "int");
		CLGLiteralNode Button_Text = new CLGLiteralNode("Grade_Button_text", "int");
		CLGLiteralNode Button_evaluate = new CLGLiteralNode("evaluate", "string");
		CLGLiteralNode Button_Bounds = new CLGLiteralNode("Grade_Button_bounds", "int");
		CLGLiteralNode Button_X = new CLGLiteralNode("Grade_Button_bounds_x", "int");
		CLGLiteralNode Button_X_value = new CLGLiteralNode("120", "int");
		CLGLiteralNode Button_Y = new CLGLiteralNode("Grade_Button_bounds_y", "int");
		CLGLiteralNode Button_Y_value = new CLGLiteralNode("80", "int");
		CLGLiteralNode Button_Width = new CLGLiteralNode("Grade_Button_bounds_width", "int");
		CLGLiteralNode Button_Width_value = new CLGLiteralNode("75", "int");
		CLGLiteralNode Button_Height = new CLGLiteralNode("Grade_Button_bounds_height", "int");
		CLGLiteralNode Button_Height_value = new CLGLiteralNode("25", "int");
		CLGLiteralNode Button_Alignment = new CLGLiteralNode("Grade_Button_alignment", "int");
		CLGLiteralNode Button_Alignment_left = new CLGLiteralNode("16384", "int");
		CLGLiteralNode Button_Alignment_center = new CLGLiteralNode("16777216", "int");
		CLGLiteralNode Button_Alignment_right = new CLGLiteralNode("131072", "int");
		CLGLiteralNode Button_Enabled = new CLGLiteralNode("Grade_Button_enabled", "int");
		CLGLiteralNode Button_True = new CLGLiteralNode("true", "string");
		CLGLiteralNode Button_False = new CLGLiteralNode("false", "string");
		CLGLiteralNode Button_Grayed = new CLGLiteralNode("Grade_Button_grayed", "int");
		CLGLiteralNode Button_Textdirection = new CLGLiteralNode("Grade_Button_textdirection", "int");
		CLGLiteralNode Button_TextdirectionAuto = new CLGLiteralNode("100663296", "int");
		CLGLiteralNode Button_TextdirectionL2R = new CLGLiteralNode("33554432", "int");
		CLGLiteralNode Button_TextdirectionR2L = new CLGLiteralNode("67108864", "int");
		CLGLiteralNode Button_Touchenabled = new CLGLiteralNode("Grade_Button_touchenabled", "int");
		CLGLiteralNode Button_Selection = new CLGLiteralNode("Grade_Button_selection", "int");
		CLGLiteralNode Button_SelectionListener = new CLGLiteralNode("Grade_Button_selectionlistener", "int");
		CLGLiteralNode Button_WidgetSelected = new CLGLiteralNode("widgetselected", "int");
		
		//設置CLG限制式的運算節點內容並放入限制式
		CLGOperatorNode S_TE = new CLGOperatorNode("=");
		S_TE.setLeftOperand(Shell_Text);
		S_TE.setRightOperand(Shell_Application);
		CLGOperatorNode S_TNE = new CLGOperatorNode("<>");
		S_TNE.setLeftOperand(Shell_Text);
		S_TNE.setRightOperand(Shell_Application);
		CLGOperatorNode S_BHE = new CLGOperatorNode("=");
		S_BHE.setLeftOperand(Shell_Height);
		S_BHE.setRightOperand(Shell_Height_value);
		CLGOperatorNode S_BHNE = new CLGOperatorNode("<>");
		S_BHNE.setLeftOperand(Shell_Height);
		S_BHNE.setRightOperand(Shell_Height_value);
		CLGOperatorNode S_BWE = new CLGOperatorNode("=");
		S_BWE.setLeftOperand(Shell_Width);
		S_BWE.setRightOperand(Shell_Width_value);
		CLGOperatorNode S_BWNE = new CLGOperatorNode("<>");
		S_BWNE.setLeftOperand(Shell_Width);
		S_BWNE.setRightOperand(Shell_Width_value);
		CLGOperatorNode S_BYE = new CLGOperatorNode("=");
		S_BYE.setLeftOperand(Shell_Y);
		S_BYE.setRightOperand(Shell_Y_value);
		CLGOperatorNode S_BYNE = new CLGOperatorNode("<>");
		S_BYNE.setLeftOperand(Shell_Y);
		S_BYNE.setRightOperand(Shell_Y_value);
		CLGOperatorNode S_BXE = new CLGOperatorNode("=");
		S_BXE.setLeftOperand(Shell_X);
		S_BXE.setRightOperand(Shell_X_value);
		CLGOperatorNode S_BXNE = new CLGOperatorNode("<>");
		S_BXNE.setLeftOperand(Shell_X);
		S_BXNE.setRightOperand(Shell_X_value);
		CLGOperatorNode S_ET = new CLGOperatorNode("=");
		S_ET.setLeftOperand(Shell_Enabled);
		S_ET.setRightOperand(Shell_True);
		CLGOperatorNode S_EF = new CLGOperatorNode("=");
		S_EF.setLeftOperand(Shell_Enabled);
		S_EF.setRightOperand(Shell_False);
		CLGOperatorNode S_MXE = new CLGOperatorNode("=");
		S_MXE.setLeftOperand(Shell_Minimumsize_X);
		S_MXE.setRightOperand(Shell_MinimumsizeX);
		CLGOperatorNode S_MXNE = new CLGOperatorNode("<>");
		S_MXNE.setLeftOperand(Shell_Minimumsize_X);
		S_MXNE.setRightOperand(Shell_MinimumsizeX);
		CLGOperatorNode S_MYE = new CLGOperatorNode("=");
		S_MYE.setLeftOperand(Shell_Minimumsize_Y);
		S_MYE.setRightOperand(Shell_MinimumsizeY);
		CLGOperatorNode S_MYNE = new CLGOperatorNode("<>");
		S_MYNE.setLeftOperand(Shell_Minimumsize_Y);
		S_MYNE.setRightOperand(Shell_MinimumsizeY);
		CLGOperatorNode S_MT = new CLGOperatorNode("=");
		S_MT.setLeftOperand(Shell_Modified);
		S_MT.setRightOperand(Shell_True);
		CLGOperatorNode S_MF = new CLGOperatorNode("=");
		S_MF.setLeftOperand(Shell_Modified);
		S_MF.setRightOperand(Shell_False);
		CLGOperatorNode S_TT = new CLGOperatorNode("=");
		S_TT.setLeftOperand(Shell_Touchenabled);
		S_TT.setRightOperand(Shell_True);
		CLGOperatorNode S_TF = new CLGOperatorNode("=");
		S_TF.setLeftOperand(Shell_Touchenabled);
		S_TF.setRightOperand(Shell_False);
		CLGOperatorNode S_TDLR = new CLGOperatorNode("=");
		S_TDLR.setLeftOperand(Shell_Textdirection);
		S_TDLR.setRightOperand(Shell_TextdirectionL2R);
		CLGOperatorNode S_TDNLR = new CLGOperatorNode("<>");
		S_TDNLR.setLeftOperand(Shell_Textdirection);
		S_TDNLR.setRightOperand(Shell_TextdirectionL2R);
		CLGOperatorNode S_TDRL = new CLGOperatorNode("=");
		S_TDRL.setLeftOperand(Shell_Textdirection);
		S_TDRL.setRightOperand(Shell_TextdirectionR2L);
		CLGOperatorNode S_TDNRL = new CLGOperatorNode("<>");
		S_TDNRL.setLeftOperand(Shell_Textdirection);
		S_TDNRL.setRightOperand(Shell_TextdirectionR2L);
		CLGOperatorNode S_TDA = new CLGOperatorNode("=");
		S_TDA.setLeftOperand(Shell_Textdirection);
		S_TDA.setRightOperand(Shell_TextdirectionAuto);
		CLGOperatorNode S_TDNA = new CLGOperatorNode("<>");
		S_TDNA.setLeftOperand(Shell_Textdirection);
		S_TDNA.setRightOperand(Shell_TextdirectionAuto);
		CLGOperatorNode S_LAE = new CLGOperatorNode("=");
		S_LAE.setLeftOperand(Shell_Layout);
		S_LAE.setRightOperand(Shell_absoluteLayout);
		CLGOperatorNode S_LANE = new CLGOperatorNode("<>");
		S_LANE.setLeftOperand(Shell_Layout);
		S_LANE.setRightOperand(Shell_absoluteLayout);
		CLGOperatorNode S_LGE = new CLGOperatorNode("=");
		S_LGE.setLeftOperand(Shell_Layout);
		S_LGE.setRightOperand(Shell_GridLayout);
		CLGOperatorNode S_LGNE = new CLGOperatorNode("<>");
		S_LGNE.setLeftOperand(Shell_Layout);
		S_LGNE.setRightOperand(Shell_GridLayout);
		CLGOperatorNode S_LFE = new CLGOperatorNode("=");
		S_LFE.setLeftOperand(Shell_Layout);
		S_LFE.setRightOperand(Shell_FillLayout);
		CLGOperatorNode S_LFNE = new CLGOperatorNode("<>");
		S_LFNE.setLeftOperand(Shell_Layout);
		S_LFNE.setRightOperand(Shell_FillLayout);
		CLGOperatorNode S_LRE = new CLGOperatorNode("=");
		S_LRE.setLeftOperand(Shell_Layout);
		S_LRE.setRightOperand(Shell_RowLayout);
		CLGOperatorNode S_LRNE = new CLGOperatorNode("<>");
		S_LRNE.setLeftOperand(Shell_Layout);
		S_LRNE.setRightOperand(Shell_RowLayout);
		CLGOperatorNode S_LFOE = new CLGOperatorNode("=");
		S_LFOE.setLeftOperand(Shell_Layout);
		S_LFOE.setRightOperand(Shell_FormLayout);
		CLGOperatorNode S_LFONE = new CLGOperatorNode("<>");
		S_LFONE.setLeftOperand(Shell_Layout);
		S_LFONE.setRightOperand(Shell_FormLayout);
		CLGOperatorNode S_LSE = new CLGOperatorNode("=");
		S_LSE.setLeftOperand(Shell_Layout);
		S_LSE.setRightOperand(Shell_StackLayout);
		CLGOperatorNode S_LSNE = new CLGOperatorNode("<>");
		S_LSNE.setLeftOperand(Shell_Layout);
		S_LSNE.setRightOperand(Shell_StackLayout);
		CLGOperatorNode L1_TE = new CLGOperatorNode("=");
		L1_TE.setLeftOperand(Label1_Text);
		L1_TE.setRightOperand(Label1_score);
		CLGOperatorNode L1_TNE = new CLGOperatorNode("<>");
		L1_TNE.setLeftOperand(Label1_Text);
		L1_TNE.setRightOperand(Label1_score);
		CLGOperatorNode L1_BHE = new CLGOperatorNode("=");
		L1_BHE.setLeftOperand(Label1_Height);
		L1_BHE.setRightOperand(Label1_Height_value);
		CLGOperatorNode L1_BHNE = new CLGOperatorNode("<>");
		L1_BHNE.setLeftOperand(Label1_Height);
		L1_BHNE.setRightOperand(Label1_Height_value);
		CLGOperatorNode L1_BWE = new CLGOperatorNode("=");
		L1_BWE.setLeftOperand(Label1_Width);
		L1_BWE.setRightOperand(Label1_Width_value);
		CLGOperatorNode L1_BWNE = new CLGOperatorNode("<>");
		L1_BWNE.setLeftOperand(Label1_Width);
		L1_BWNE.setRightOperand(Label1_Width_value);
		CLGOperatorNode L1_BYE = new CLGOperatorNode("=");
		L1_BYE.setLeftOperand(Label1_Y);
		L1_BYE.setRightOperand(Label1_Y_value);
		CLGOperatorNode L1_BYNE = new CLGOperatorNode("<>");
		L1_BYNE.setLeftOperand(Label1_Y);
		L1_BYNE.setRightOperand(Label1_Y_value);
		CLGOperatorNode L1_BXE = new CLGOperatorNode("=");
		L1_BXE.setLeftOperand(Label1_X);
		L1_BXE.setRightOperand(Label1_X_value);
		CLGOperatorNode L1_BXNE = new CLGOperatorNode("<>");
		L1_BXNE.setLeftOperand(Label1_X);
		L1_BXNE.setRightOperand(Label1_X_value);
		CLGOperatorNode L1_ET = new CLGOperatorNode("=");
		L1_ET.setLeftOperand(Label1_Enabled);
		L1_ET.setRightOperand(Label1_True);
		CLGOperatorNode L1_EF = new CLGOperatorNode("=");
		L1_EF.setLeftOperand(Label1_Enabled);
		L1_EF.setRightOperand(Label1_False);
		CLGOperatorNode L1_TDLR = new CLGOperatorNode("=");
		L1_TDLR.setLeftOperand(Label1_Textdirection);
		L1_TDLR.setRightOperand(Label1_TextdirectionL2R);
		CLGOperatorNode L1_TDNLR = new CLGOperatorNode("<>");
		L1_TDNLR.setLeftOperand(Label1_Textdirection);
		L1_TDNLR.setRightOperand(Label1_TextdirectionL2R);
		CLGOperatorNode L1_TDRL = new CLGOperatorNode("=");
		L1_TDRL.setLeftOperand(Label1_Textdirection);
		L1_TDRL.setRightOperand(Label1_TextdirectionR2L);
		CLGOperatorNode L1_TDNRL = new CLGOperatorNode("<>");
		L1_TDNRL.setLeftOperand(Label1_Textdirection);
		L1_TDNRL.setRightOperand(Label1_TextdirectionR2L);
		CLGOperatorNode L1_TDA = new CLGOperatorNode("=");
		L1_TDA.setLeftOperand(Label1_Textdirection);
		L1_TDA.setRightOperand(Label1_TextdirectionAuto);
		CLGOperatorNode L1_TDNA = new CLGOperatorNode("<>");
		L1_TDNA.setLeftOperand(Label1_Textdirection);
		L1_TDNA.setRightOperand(Label1_TextdirectionAuto);
		CLGOperatorNode L1_AR = new CLGOperatorNode("=");
		L1_AR.setLeftOperand(Label1_Alignment);
		L1_AR.setRightOperand(Label1_Alignment_right);
		CLGOperatorNode L1_ANR = new CLGOperatorNode("<>");
		L1_ANR.setLeftOperand(Label1_Alignment);
		L1_ANR.setRightOperand(Label1_Alignment_right);
		CLGOperatorNode L1_AL = new CLGOperatorNode("=");
		L1_AL.setLeftOperand(Label1_Alignment);
		L1_AL.setRightOperand(Label1_Alignment_left);
		CLGOperatorNode L1_ANL = new CLGOperatorNode("<>");
		L1_ANL.setLeftOperand(Label1_Alignment);
		L1_ANL.setRightOperand(Label1_Alignment_left);
		CLGOperatorNode L1_AC = new CLGOperatorNode("=");
		L1_AC.setLeftOperand(Label1_Alignment);
		L1_AC.setRightOperand(Label1_Alignment_center);
		CLGOperatorNode L1_ANC = new CLGOperatorNode("<>");
		L1_ANC.setLeftOperand(Label1_Alignment);
		L1_ANC.setRightOperand(Label1_Alignment_center);
		CLGOperatorNode L1_TT = new CLGOperatorNode("=");
		L1_TT.setLeftOperand(Label1_Touchenabled);
		L1_TT.setRightOperand(Label1_True);
		CLGOperatorNode L1_TF = new CLGOperatorNode("=");
		L1_TF.setLeftOperand(Label1_Touchenabled);
		L1_TF.setRightOperand(Label1_False);
		CLGOperatorNode L2_TE = new CLGOperatorNode("=");
		L2_TE.setLeftOperand(Label2_Text);
		L2_TE.setRightOperand(Label2_grade);
		CLGOperatorNode L2_TNE = new CLGOperatorNode("<>");
		L2_TNE.setLeftOperand(Label2_Text);
		L2_TNE.setRightOperand(Label2_grade);
		CLGOperatorNode L2_BHE = new CLGOperatorNode("=");
		L2_BHE.setLeftOperand(Label2_Height);
		L2_BHE.setRightOperand(Label2_Height_value);
		CLGOperatorNode L2_BHNE = new CLGOperatorNode("<>");
		L2_BHNE.setLeftOperand(Label2_Height);
		L2_BHNE.setRightOperand(Label2_Height_value);
		CLGOperatorNode L2_BWE = new CLGOperatorNode("=");
		L2_BWE.setLeftOperand(Label2_Width);
		L2_BWE.setRightOperand(Label2_Width_value);
		CLGOperatorNode L2_BWNE = new CLGOperatorNode("<>");
		L2_BWNE.setLeftOperand(Label2_Width);
		L2_BWNE.setRightOperand(Label2_Width_value);
		CLGOperatorNode L2_BYE = new CLGOperatorNode("=");
		L2_BYE.setLeftOperand(Label2_Y);
		L2_BYE.setRightOperand(Label2_Y_value);
		CLGOperatorNode L2_BYNE = new CLGOperatorNode("<>");
		L2_BYNE.setLeftOperand(Label2_Y);
		L2_BYNE.setRightOperand(Label2_Y_value);
		CLGOperatorNode L2_BXE = new CLGOperatorNode("=");
		L2_BXE.setLeftOperand(Label2_X);
		L2_BXE.setRightOperand(Label2_X_value);
		CLGOperatorNode L2_BXNE = new CLGOperatorNode("<>");
		L2_BXNE.setLeftOperand(Label2_X);
		L2_BXNE.setRightOperand(Label2_X_value);
		CLGOperatorNode L2_ET = new CLGOperatorNode("=");
		L2_ET.setLeftOperand(Label2_Enabled);
		L2_ET.setRightOperand(Label2_True);
		CLGOperatorNode L2_EF = new CLGOperatorNode("=");
		L2_EF.setLeftOperand(Label2_Enabled);
		L2_EF.setRightOperand(Label2_False);
		CLGOperatorNode L2_TDLR = new CLGOperatorNode("=");
		L2_TDLR.setLeftOperand(Label2_Textdirection);
		L2_TDLR.setRightOperand(Label2_TextdirectionL2R);
		CLGOperatorNode L2_TDNLR = new CLGOperatorNode("<>");
		L2_TDNLR.setLeftOperand(Label2_Textdirection);
		L2_TDNLR.setRightOperand(Label2_TextdirectionL2R);
		CLGOperatorNode L2_TDRL = new CLGOperatorNode("=");
		L2_TDRL.setLeftOperand(Label2_Textdirection);
		L2_TDRL.setRightOperand(Label2_TextdirectionR2L);
		CLGOperatorNode L2_TDNRL = new CLGOperatorNode("<>");
		L2_TDNRL.setLeftOperand(Label2_Textdirection);
		L2_TDNRL.setRightOperand(Label2_TextdirectionR2L);
		CLGOperatorNode L2_TDA = new CLGOperatorNode("=");
		L2_TDA.setLeftOperand(Label2_Textdirection);
		L2_TDA.setRightOperand(Label2_TextdirectionAuto);
		CLGOperatorNode L2_TDNA = new CLGOperatorNode("<>");
		L2_TDNA.setLeftOperand(Label2_Textdirection);
		L2_TDNA.setRightOperand(Label2_TextdirectionAuto);
		CLGOperatorNode L2_AR = new CLGOperatorNode("=");
		L2_AR.setLeftOperand(Label2_Alignment);
		L2_AR.setRightOperand(Label2_Alignment_right);
		CLGOperatorNode L2_ANR = new CLGOperatorNode("<>");
		L2_ANR.setLeftOperand(Label2_Alignment);
		L2_ANR.setRightOperand(Label2_Alignment_right);
		CLGOperatorNode L2_AL = new CLGOperatorNode("=");
		L2_AL.setLeftOperand(Label2_Alignment);
		L2_AL.setRightOperand(Label2_Alignment_left);
		CLGOperatorNode L2_ANL = new CLGOperatorNode("<>");
		L2_ANL.setLeftOperand(Label2_Alignment);
		L2_ANL.setRightOperand(Label2_Alignment_left);
		CLGOperatorNode L2_AC = new CLGOperatorNode("=");
		L2_AC.setLeftOperand(Label2_Alignment);
		L2_AC.setRightOperand(Label2_Alignment_center);
		CLGOperatorNode L2_ANC = new CLGOperatorNode("<>");
		L2_ANC.setLeftOperand(Label2_Alignment);
		L2_ANC.setRightOperand(Label2_Alignment_center);
		CLGOperatorNode L2_TT = new CLGOperatorNode("=");
		L2_TT.setLeftOperand(Label2_Touchenabled);
		L2_TT.setRightOperand(Label2_True);
		CLGOperatorNode L2_TF = new CLGOperatorNode("=");
		L2_TF.setLeftOperand(Label2_Touchenabled);
		L2_TF.setRightOperand(Label2_False);
		CLGOperatorNode T1_BHE = new CLGOperatorNode("=");
		T1_BHE.setLeftOperand(Text1_Height);
		T1_BHE.setRightOperand(Text1_Height_value);
		CLGOperatorNode T1_BHNE = new CLGOperatorNode("<>");
		T1_BHNE.setLeftOperand(Text1_Height);
		T1_BHNE.setRightOperand(Text1_Height_value);
		CLGOperatorNode T1_BWE = new CLGOperatorNode("=");
		T1_BWE.setLeftOperand(Text1_Width);
		T1_BWE.setRightOperand(Text1_Width_value);
		CLGOperatorNode T1_BWNE = new CLGOperatorNode("<>");
		T1_BWNE.setLeftOperand(Text1_Width);
		T1_BWNE.setRightOperand(Text1_Width_value);
		CLGOperatorNode T1_BYE = new CLGOperatorNode("=");
		T1_BYE.setLeftOperand(Text1_Y);
		T1_BYE.setRightOperand(Text1_Y_value);
		CLGOperatorNode T1_BYNE = new CLGOperatorNode("<>");
		T1_BYNE.setLeftOperand(Text1_Y);
		T1_BYNE.setRightOperand(Text1_Y_value);
		CLGOperatorNode T1_BXE = new CLGOperatorNode("=");
		T1_BXE.setLeftOperand(Text1_X);
		T1_BXE.setRightOperand(Text1_X_value);
		CLGOperatorNode T1_BXNE = new CLGOperatorNode("<>");
		T1_BXNE.setLeftOperand(Text1_X);
		T1_BXNE.setRightOperand(Text1_X_value);
		CLGOperatorNode T1_ET = new CLGOperatorNode("=");
		T1_ET.setLeftOperand(Text1_Enabled);
		T1_ET.setRightOperand(Text1_True);
		CLGOperatorNode T1_EF = new CLGOperatorNode("=");
		T1_EF.setLeftOperand(Text1_Enabled);
		T1_EF.setRightOperand(Text1_False);
		CLGOperatorNode T1_EDT = new CLGOperatorNode("=");
		T1_EDT.setLeftOperand(Text1_Editable);
		T1_EDT.setRightOperand(Text1_True);
		CLGOperatorNode T1_EDF = new CLGOperatorNode("=");
		T1_EDF.setLeftOperand(Text1_Editable);
		T1_EDF.setRightOperand(Text1_False);
		CLGOperatorNode T1_TT = new CLGOperatorNode("=");
		T1_TT.setLeftOperand(Text1_Touchenabled);
		T1_TT.setRightOperand(Text1_True);
		CLGOperatorNode T1_TF = new CLGOperatorNode("=");
		T1_TF.setLeftOperand(Text1_Touchenabled);
		T1_TF.setRightOperand(Text1_False);
		CLGOperatorNode T1_TDLR = new CLGOperatorNode("=");
		T1_TDLR.setLeftOperand(Text1_Textdirection);
		T1_TDLR.setRightOperand(Text1_TextdirectionL2R);
		CLGOperatorNode T1_TDNLR = new CLGOperatorNode("<>");
		T1_TDNLR.setLeftOperand(Text1_Textdirection);
		T1_TDNLR.setRightOperand(Text1_TextdirectionL2R);
		CLGOperatorNode T1_TDRL = new CLGOperatorNode("=");
		T1_TDRL.setLeftOperand(Text1_Textdirection);
		T1_TDRL.setRightOperand(Text1_TextdirectionR2L);
		CLGOperatorNode T1_TDNRL = new CLGOperatorNode("<>");
		T1_TDNRL.setLeftOperand(Text1_Textdirection);
		T1_TDNRL.setRightOperand(Text1_TextdirectionR2L);
		CLGOperatorNode T1_TDA = new CLGOperatorNode("=");
		T1_TDA.setLeftOperand(Text1_Textdirection);
		T1_TDA.setRightOperand(Text1_TextdirectionAuto);
		CLGOperatorNode T1_TDNA = new CLGOperatorNode("<>");
		T1_TDNA.setLeftOperand(Text1_Textdirection);
		T1_TDNA.setRightOperand(Text1_TextdirectionAuto);
		CLGOperatorNode T1_T = new CLGOperatorNode("=");
		T1_T.setLeftOperand(Text1_Text);
		T1_T.setRightOperand(Text1_empty);
		CLGOperatorNode T1_NT = new CLGOperatorNode("<>");
		T1_NT.setLeftOperand(Text1_Text);
		T1_NT.setRightOperand(Text1_empty);
		CLGOperatorNode T2_BHE = new CLGOperatorNode("=");
		T2_BHE.setLeftOperand(Text2_Height);
		T2_BHE.setRightOperand(Text2_Height_value);
		CLGOperatorNode T2_BHNE = new CLGOperatorNode("<>");
		T2_BHNE.setLeftOperand(Text2_Height);
		T2_BHNE.setRightOperand(Text2_Height_value);
		CLGOperatorNode T2_BWE = new CLGOperatorNode("=");
		T2_BWE.setLeftOperand(Text2_Width);
		T2_BWE.setRightOperand(Text2_Width_value);
		CLGOperatorNode T2_BWNE = new CLGOperatorNode("<>");
		T2_BWNE.setLeftOperand(Text2_Width);
		T2_BWNE.setRightOperand(Text2_Width_value);
		CLGOperatorNode T2_BYE = new CLGOperatorNode("=");
		T2_BYE.setLeftOperand(Text2_Y);
		T2_BYE.setRightOperand(Text2_Y_value);
		CLGOperatorNode T2_BYNE = new CLGOperatorNode("<>");
		T2_BYNE.setLeftOperand(Text2_Y);
		T2_BYNE.setRightOperand(Text2_Y_value);
		CLGOperatorNode T2_BXE = new CLGOperatorNode("=");
		T2_BXE.setLeftOperand(Text2_X);
		T2_BXE.setRightOperand(Text2_X_value);
		CLGOperatorNode T2_BXNE = new CLGOperatorNode("<>");
		T2_BXNE.setLeftOperand(Text2_X);
		T2_BXNE.setRightOperand(Text2_X_value);
		CLGOperatorNode T2_ET = new CLGOperatorNode("=");
		T2_ET.setLeftOperand(Text2_Enabled);
		T2_ET.setRightOperand(Text2_True);
		CLGOperatorNode T2_EF = new CLGOperatorNode("=");
		T2_EF.setLeftOperand(Text2_Enabled);
		T2_EF.setRightOperand(Text2_False);
		CLGOperatorNode T2_EDT = new CLGOperatorNode("=");
		T2_EDT.setLeftOperand(Text2_Editable);
		T2_EDT.setRightOperand(Text2_True);
		CLGOperatorNode T2_EDF = new CLGOperatorNode("=");
		T2_EDF.setLeftOperand(Text2_Editable);
		T2_EDF.setRightOperand(Text2_False);
		CLGOperatorNode T2_TT = new CLGOperatorNode("=");
		T2_TT.setLeftOperand(Text2_Touchenabled);
		T2_TT.setRightOperand(Text2_True);
		CLGOperatorNode T2_TF = new CLGOperatorNode("=");
		T2_TF.setLeftOperand(Text2_Touchenabled);
		T2_TF.setRightOperand(Text2_False);
		CLGOperatorNode T2_TDLR = new CLGOperatorNode("=");
		T2_TDLR.setLeftOperand(Text2_Textdirection);
		T2_TDLR.setRightOperand(Text2_TextdirectionL2R);
		CLGOperatorNode T2_TDNLR = new CLGOperatorNode("<>");
		T2_TDNLR.setLeftOperand(Text2_Textdirection);
		T2_TDNLR.setRightOperand(Text2_TextdirectionL2R);
		CLGOperatorNode T2_TDRL = new CLGOperatorNode("=");
		T2_TDRL.setLeftOperand(Text2_Textdirection);
		T2_TDRL.setRightOperand(Text2_TextdirectionR2L);
		CLGOperatorNode T2_TDNRL = new CLGOperatorNode("<>");
		T2_TDNRL.setLeftOperand(Text2_Textdirection);
		T2_TDNRL.setRightOperand(Text2_TextdirectionR2L);
		CLGOperatorNode T2_TDA = new CLGOperatorNode("=");
		T2_TDA.setLeftOperand(Text2_Textdirection);
		T2_TDA.setRightOperand(Text2_TextdirectionAuto);
		CLGOperatorNode T2_TDNA = new CLGOperatorNode("<>");
		T2_TDNA.setLeftOperand(Text2_Textdirection);
		T2_TDNA.setRightOperand(Text2_TextdirectionAuto);
		CLGOperatorNode T2_T = new CLGOperatorNode("=");
		T2_T.setLeftOperand(Text2_Text);
		T2_T.setRightOperand(Text2_empty);
		CLGOperatorNode T2_NT = new CLGOperatorNode("<>");
		T2_NT.setLeftOperand(Text2_Text);
		T2_NT.setRightOperand(Text2_empty);
		CLGOperatorNode B_TE = new CLGOperatorNode("=");
		B_TE.setLeftOperand(Button_Text);
		B_TE.setRightOperand(Button_evaluate);
		CLGOperatorNode B_TNE = new CLGOperatorNode("<>");
		B_TNE.setLeftOperand(Button_Text);
		B_TNE.setRightOperand(Button_evaluate);
		CLGOperatorNode B_BHE = new CLGOperatorNode("=");
		B_BHE.setLeftOperand(Button_Height);
		B_BHE.setRightOperand(Button_Height_value);
		CLGOperatorNode B_BHNE = new CLGOperatorNode("<>");
		B_BHNE.setLeftOperand(Button_Height);
		B_BHNE.setRightOperand(Button_Height_value);
		CLGOperatorNode B_BWE = new CLGOperatorNode("=");
		B_BWE.setLeftOperand(Button_Width);
		B_BWE.setRightOperand(Button_Width_value);
		CLGOperatorNode B_BWNE = new CLGOperatorNode("<>");
		B_BWNE.setLeftOperand(Button_Width);
		B_BWNE.setRightOperand(Button_Width_value);
		CLGOperatorNode B_BYE = new CLGOperatorNode("=");
		B_BYE.setLeftOperand(Button_Y);
		B_BYE.setRightOperand(Button_Y_value);
		CLGOperatorNode B_BYNE = new CLGOperatorNode("<>");
		B_BYNE.setLeftOperand(Button_Y);
		B_BYNE.setRightOperand(Button_Y_value);
		CLGOperatorNode B_BXE = new CLGOperatorNode("=");
		B_BXE.setLeftOperand(Button_X);
		B_BXE.setRightOperand(Button_X_value);
		CLGOperatorNode B_BXNE = new CLGOperatorNode("<>");
		B_BXNE.setLeftOperand(Button_X);
		B_BXNE.setRightOperand(Button_X_value);
		CLGOperatorNode B_ET = new CLGOperatorNode("=");
		B_ET.setLeftOperand(Button_Enabled);
		B_ET.setRightOperand(Button_True);
		CLGOperatorNode B_EF = new CLGOperatorNode("=");
		B_EF.setLeftOperand(Button_Enabled);
		B_EF.setRightOperand(Button_False);
		CLGOperatorNode B_TDLR = new CLGOperatorNode("=");
		B_TDLR.setLeftOperand(Button_Textdirection);
		B_TDLR.setRightOperand(Button_TextdirectionL2R);
		CLGOperatorNode B_TDNLR = new CLGOperatorNode("<>");
		B_TDNLR.setLeftOperand(Button_Textdirection);
		B_TDNLR.setRightOperand(Button_TextdirectionL2R);
		CLGOperatorNode B_TDRL = new CLGOperatorNode("=");
		B_TDRL.setLeftOperand(Button_Textdirection);
		B_TDRL.setRightOperand(Button_TextdirectionR2L);
		CLGOperatorNode B_TDNRL = new CLGOperatorNode("<>");
		B_TDNRL.setLeftOperand(Button_Textdirection);
		B_TDNRL.setRightOperand(Button_TextdirectionR2L);
		CLGOperatorNode B_TDA = new CLGOperatorNode("=");
		B_TDA.setLeftOperand(Button_Textdirection);
		B_TDA.setRightOperand(Button_TextdirectionAuto);
		CLGOperatorNode B_TDNA = new CLGOperatorNode("<>");
		B_TDNA.setLeftOperand(Button_Textdirection);
		B_TDNA.setRightOperand(Button_TextdirectionAuto);
		CLGOperatorNode B_AR = new CLGOperatorNode("=");
		B_AR.setLeftOperand(Button_Alignment);
		B_AR.setRightOperand(Button_Alignment_right);
		CLGOperatorNode B_ANR = new CLGOperatorNode("<>");
		B_ANR.setLeftOperand(Button_Alignment);
		B_ANR.setRightOperand(Button_Alignment_right);
		CLGOperatorNode B_AL = new CLGOperatorNode("=");
		B_AL.setLeftOperand(Button_Alignment);
		B_AL.setRightOperand(Button_Alignment_left);
		CLGOperatorNode B_ANL = new CLGOperatorNode("<>");
		B_ANL.setLeftOperand(Button_Alignment);
		B_ANL.setRightOperand(Button_Alignment_left);
		CLGOperatorNode B_AC = new CLGOperatorNode("=");
		B_AC.setLeftOperand(Button_Alignment);
		B_AC.setRightOperand(Button_Alignment_center);
		CLGOperatorNode B_ANC = new CLGOperatorNode("<>");
		B_ANC.setLeftOperand(Button_Alignment);
		B_ANC.setRightOperand(Button_Alignment_center);
		CLGOperatorNode B_TT = new CLGOperatorNode("=");
		B_TT.setLeftOperand(Button_Touchenabled);
		B_TT.setRightOperand(Button_True);
		CLGOperatorNode B_TF = new CLGOperatorNode("=");
		B_TF.setLeftOperand(Button_Touchenabled);
		B_TF.setRightOperand(Button_False);
		CLGOperatorNode B_ST = new CLGOperatorNode("=");
		B_ST.setLeftOperand(Button_Selection);
		B_ST.setRightOperand(Button_True);
		CLGOperatorNode B_SF = new CLGOperatorNode("=");
		B_SF.setLeftOperand(Button_Selection);
		B_SF.setRightOperand(Button_False);
		CLGOperatorNode B_GT = new CLGOperatorNode("=");
		B_GT.setLeftOperand(Button_Grayed);
		B_GT.setRightOperand(Button_True);
		CLGOperatorNode B_GF = new CLGOperatorNode("=");
		B_GF.setLeftOperand(Button_Grayed);
		B_GF.setRightOperand(Button_False);
		CLGOperatorNode B_SLE = new CLGOperatorNode("=");
		B_SLE.setLeftOperand(Button_SelectionListener);
		B_SLE.setRightOperand(Button_WidgetSelected);
		CLGOperatorNode B_SLNE = new CLGOperatorNode("<>");
		B_SLNE.setLeftOperand(Button_SelectionListener);
		B_SLNE.setRightOperand(Button_WidgetSelected);

		CLGOperatorNode SN = new CLGOperatorNode("=");
		SN.setLeftOperand(Shell);
		SN.setRightOperand(Nu);
		CLGOperatorNode SNN = new CLGOperatorNode("<>");
		SNN.setLeftOperand(Shell);
		SNN.setRightOperand(Nu);
		CLGOperatorNode SE = new CLGOperatorNode("=");
		SE.setLeftOperand(Result);
		SE.setRightOperand(Ex);
		CLGOperatorNode STN = new CLGOperatorNode("=");
		STN.setLeftOperand(Shell_Text);
		STN.setRightOperand(Nu);
		CLGOperatorNode STNN = new CLGOperatorNode("<>");
		STNN.setLeftOperand(Shell_Text);
		STNN.setRightOperand(Nu);	
		CLGOperatorNode STS = new CLGOperatorNode("=");
		STS.setLeftOperand(Result);
		STS.setRightOperand(Suc);
		CLGOperatorNode STF = new CLGOperatorNode("=");
		STF.setLeftOperand(Result);
		STF.setRightOperand(Fa);
		CLGOperatorNode STE = new CLGOperatorNode("=");
		STE.setLeftOperand(Result);
		STE.setRightOperand(Ex);
		CLGOperatorNode SBN = new CLGOperatorNode("=");
		SBN.setLeftOperand(Shell_Bounds);
		SBN.setRightOperand(Nu);
		CLGOperatorNode SBNN = new CLGOperatorNode("<>");
		SBNN.setLeftOperand(Shell_Bounds);
		SBNN.setRightOperand(Nu);	
		CLGOperatorNode SBS = new CLGOperatorNode("=");
		SBS.setLeftOperand(Result);
		SBS.setRightOperand(Suc);
		CLGOperatorNode SBF = new CLGOperatorNode("=");
		SBF.setLeftOperand(Result);
		SBF.setRightOperand(Fa);
		CLGOperatorNode SBHF = new CLGOperatorNode("=");
		SBHF.setLeftOperand(Result);
		SBHF.setRightOperand(Fa);
		CLGOperatorNode SBWF = new CLGOperatorNode("=");
		SBWF.setLeftOperand(Result);
		SBWF.setRightOperand(Fa);
		CLGOperatorNode SBYF = new CLGOperatorNode("=");
		SBYF.setLeftOperand(Result);
		SBYF.setRightOperand(Fa);
		CLGOperatorNode SBXF = new CLGOperatorNode("=");
		SBXF.setLeftOperand(Result);
		SBXF.setRightOperand(Fa);
		CLGOperatorNode SBE = new CLGOperatorNode("=");
		SBE.setLeftOperand(Result);
		SBE.setRightOperand(Ex);
		CLGOperatorNode SEN = new CLGOperatorNode("=");
		SEN.setLeftOperand(Shell_Enabled);
		SEN.setRightOperand(Nu);
		CLGOperatorNode SENN = new CLGOperatorNode("<>");
		SENN.setLeftOperand(Shell_Enabled);
		SENN.setRightOperand(Nu);
		CLGOperatorNode SES = new CLGOperatorNode("=");
		SES.setLeftOperand(Result);
		SES.setRightOperand(Suc);
		CLGOperatorNode SEF = new CLGOperatorNode("=");
		SEF.setLeftOperand(Result);
		SEF.setRightOperand(Fa);
		CLGOperatorNode SEE = new CLGOperatorNode("=");
		SEE.setLeftOperand(Result);
		SEE.setRightOperand(Ex);
		CLGOperatorNode SMSN = new CLGOperatorNode("=");
		SMSN.setLeftOperand(Shell_Minimumsize);
		SMSN.setRightOperand(Nu);
		CLGOperatorNode SMSNN = new CLGOperatorNode("<>");
		SMSNN.setLeftOperand(Shell_Minimumsize);
		SMSNN.setRightOperand(Nu);
		CLGOperatorNode SMSS = new CLGOperatorNode("=");
		SMSS.setLeftOperand(Result);
		SMSS.setRightOperand(Suc);
		CLGOperatorNode SMSF = new CLGOperatorNode("=");
		SMSF.setLeftOperand(Result);
		SMSF.setRightOperand(Fa);
		CLGOperatorNode SMSXF = new CLGOperatorNode("=");
		SMSXF.setLeftOperand(Result);
		SMSXF.setRightOperand(Fa);
		CLGOperatorNode SMSYF = new CLGOperatorNode("=");
		SMSYF.setLeftOperand(Result);
		SMSYF.setRightOperand(Fa);
		CLGOperatorNode SMSE = new CLGOperatorNode("=");
		SMSE.setLeftOperand(Result);
		SMSE.setRightOperand(Ex);
		CLGOperatorNode SMN = new CLGOperatorNode("=");
		SMN.setLeftOperand(Shell_Modified);
		SMN.setRightOperand(Nu);
		CLGOperatorNode SMNN = new CLGOperatorNode("<>");
		SMNN.setLeftOperand(Shell_Modified);
		SMNN.setRightOperand(Nu);
		CLGOperatorNode SMS = new CLGOperatorNode("=");
		SMS.setLeftOperand(Result);
		SMS.setRightOperand(Suc);
		CLGOperatorNode SMF = new CLGOperatorNode("=");
		SMF.setLeftOperand(Result);
		SMF.setRightOperand(Fa);
		CLGOperatorNode SME = new CLGOperatorNode("=");
		SME.setLeftOperand(Result);
		SME.setRightOperand(Ex);
		CLGOperatorNode STEN = new CLGOperatorNode("=");
		STEN.setLeftOperand(Shell_Touchenabled);
		STEN.setRightOperand(Nu);
		CLGOperatorNode STENN = new CLGOperatorNode("<>");
		STENN.setLeftOperand(Shell_Touchenabled);
		STENN.setRightOperand(Nu);
		CLGOperatorNode STES = new CLGOperatorNode("=");
		STES.setLeftOperand(Result);
		STES.setRightOperand(Suc);
		CLGOperatorNode STEF = new CLGOperatorNode("=");
		STEF.setLeftOperand(Result);
		STEF.setRightOperand(Fa);
		CLGOperatorNode STEE = new CLGOperatorNode("=");
		STEE.setLeftOperand(Result);
		STEE.setRightOperand(Ex);
		CLGOperatorNode STDN = new CLGOperatorNode("=");
		STDN.setLeftOperand(Shell_Textdirection);
		STDN.setRightOperand(Nu);
		CLGOperatorNode STDNN = new CLGOperatorNode("<>");
		STDNN.setLeftOperand(Shell_Textdirection);
		STDNN.setRightOperand(Nu);
		CLGOperatorNode STDS = new CLGOperatorNode("=");
		STDS.setLeftOperand(Result);
		STDS.setRightOperand(Suc);
		CLGOperatorNode STDF = new CLGOperatorNode("=");
		STDF.setLeftOperand(Result);
		STDF.setRightOperand(Fa);
		CLGOperatorNode STDRLF = new CLGOperatorNode("=");
		STDRLF.setLeftOperand(Result);
		STDRLF.setRightOperand(Fa);
		CLGOperatorNode STDLRF = new CLGOperatorNode("=");
		STDLRF.setLeftOperand(Result);
		STDLRF.setRightOperand(Fa);
		CLGOperatorNode STDAF = new CLGOperatorNode("=");
		STDAF.setLeftOperand(Result);
		STDAF.setRightOperand(Fa);
		CLGOperatorNode STDE = new CLGOperatorNode("=");
		STDE.setLeftOperand(Result);
		STDE.setRightOperand(Ex);
		CLGOperatorNode SLN = new CLGOperatorNode("=");
		SLN.setLeftOperand(Shell_Layout);
		SLN.setRightOperand(Nu);
		CLGOperatorNode SLNN = new CLGOperatorNode("<>");
		SLNN.setLeftOperand(Shell_Layout);
		SLNN.setRightOperand(Nu);
		CLGOperatorNode SLAS = new CLGOperatorNode("=");
		SLAS.setLeftOperand(Result);
		SLAS.setRightOperand(Suc);
		CLGOperatorNode SLAF = new CLGOperatorNode("=");
		SLAF.setLeftOperand(Result);
		SLAF.setRightOperand(Fa);
		CLGOperatorNode SLGS = new CLGOperatorNode("=");
		SLGS.setLeftOperand(Result);
		SLGS.setRightOperand(Suc);
		CLGOperatorNode SLGF = new CLGOperatorNode("=");
		SLGF.setLeftOperand(Result);
		SLGF.setRightOperand(Fa);
		CLGOperatorNode SLFS = new CLGOperatorNode("=");
		SLFS.setLeftOperand(Result);
		SLFS.setRightOperand(Suc);
		CLGOperatorNode SLFF = new CLGOperatorNode("=");
		SLFF.setLeftOperand(Result);
		SLFF.setRightOperand(Fa);
		CLGOperatorNode SLRS = new CLGOperatorNode("=");
		SLRS.setLeftOperand(Result);
		SLRS.setRightOperand(Suc);
		CLGOperatorNode SLRF = new CLGOperatorNode("=");
		SLRF.setLeftOperand(Result);
		SLRF.setRightOperand(Fa);
		CLGOperatorNode SLFOS = new CLGOperatorNode("=");
		SLFOS.setLeftOperand(Result);
		SLFOS.setRightOperand(Suc);
		CLGOperatorNode SLFOF = new CLGOperatorNode("=");
		SLFOF.setLeftOperand(Result);
		SLFOF.setRightOperand(Fa);
		CLGOperatorNode SLSS = new CLGOperatorNode("=");
		SLSS.setLeftOperand(Result);
		SLSS.setRightOperand(Suc);
		CLGOperatorNode SLSF = new CLGOperatorNode("=");
		SLSF.setLeftOperand(Result);
		SLSF.setRightOperand(Fa);
		CLGOperatorNode SLS = new CLGOperatorNode("<>");
		SLS.setLeftOperand(Result);
		SLS.setRightOperand(Suc);
		CLGOperatorNode SLF = new CLGOperatorNode("=");
		SLF.setLeftOperand(Result);
		SLF.setRightOperand(Fa);
		
		CLGOperatorNode LN1 = new CLGOperatorNode("=");
		LN1.setLeftOperand(Label1);
		LN1.setRightOperand(Nu);
		CLGOperatorNode LNN1 = new CLGOperatorNode("<>");
		LNN1.setLeftOperand(Label1);
		LNN1.setRightOperand(Nu);
		CLGOperatorNode LE1 = new CLGOperatorNode("=");
		LE1.setLeftOperand(Result);
		LE1.setRightOperand(Ex);
		CLGOperatorNode LTN1 = new CLGOperatorNode("=");
		LTN1.setLeftOperand(Label1_Text);
		LTN1.setRightOperand(Nu);
		CLGOperatorNode LTNN1 = new CLGOperatorNode("<>");
		LTNN1.setLeftOperand(Label1_Text);
		LTNN1.setRightOperand(Nu);
		CLGOperatorNode LTS1 = new CLGOperatorNode("=");
		LTS1.setLeftOperand(Result);
		LTS1.setRightOperand(Suc);
		CLGOperatorNode LTF1 = new CLGOperatorNode("=");
		LTF1.setLeftOperand(Result);
		LTF1.setRightOperand(Fa);
		CLGOperatorNode LTE1 = new CLGOperatorNode("=");
		LTE1.setLeftOperand(Exception);
		LTE1.setRightOperand(Ex);
		CLGOperatorNode LBN1 = new CLGOperatorNode("=");
		LBN1.setLeftOperand(Label1_Bounds);
		LBN1.setRightOperand(Nu);
		CLGOperatorNode LBNN1 = new CLGOperatorNode("<>");
		LBNN1.setLeftOperand(Label1_Bounds);
		LBNN1.setRightOperand(Nu);	
		CLGOperatorNode LBS1 = new CLGOperatorNode("=");
		LBS1.setLeftOperand(Result);
		LBS1.setRightOperand(Suc);
		CLGOperatorNode LBF1 = new CLGOperatorNode("=");
		LBF1.setLeftOperand(Result);
		LBF1.setRightOperand(Fa);
		CLGOperatorNode LBHF1 = new CLGOperatorNode("=");
		LBHF1.setLeftOperand(Result);
		LBHF1.setRightOperand(Fa);
		CLGOperatorNode LBWF1 = new CLGOperatorNode("=");
		LBWF1.setLeftOperand(Result);
		LBWF1.setRightOperand(Fa);
		CLGOperatorNode LBYF1 = new CLGOperatorNode("=");
		LBYF1.setLeftOperand(Result);
		LBYF1.setRightOperand(Fa);
		CLGOperatorNode LBXF1 = new CLGOperatorNode("=");
		LBXF1.setLeftOperand(Result);
		LBXF1.setRightOperand(Fa);
		CLGOperatorNode LBE1 = new CLGOperatorNode("=");
		LBE1.setLeftOperand(Exception);
		LBE1.setRightOperand(Ex);
		CLGOperatorNode LEN1 = new CLGOperatorNode("=");
		LEN1.setLeftOperand(Label1_Enabled);
		LEN1.setRightOperand(Nu);
		CLGOperatorNode LENN1 = new CLGOperatorNode("<>");
		LENN1.setLeftOperand(Label1_Enabled);
		LENN1.setRightOperand(Nu);
		CLGOperatorNode LES1 = new CLGOperatorNode("=");
		LES1.setLeftOperand(Result);
		LES1.setRightOperand(Suc);
		CLGOperatorNode LEF1 = new CLGOperatorNode("=");
		LEF1.setLeftOperand(Result);
		LEF1.setRightOperand(Fa);
		CLGOperatorNode LEE1 = new CLGOperatorNode("=");
		LEE1.setLeftOperand(Exception);
		LEE1.setRightOperand(Ex);
		CLGOperatorNode LTDN1 = new CLGOperatorNode("=");
		LTDN1.setLeftOperand(Label1_Textdirection);
		LTDN1.setRightOperand(Nu);
		CLGOperatorNode LTDNN1 = new CLGOperatorNode("<>");
		LTDNN1.setLeftOperand(Label1_Textdirection);
		LTDNN1.setRightOperand(Nu);
		CLGOperatorNode LTDS1 = new CLGOperatorNode("=");
		LTDS1.setLeftOperand(Result);
		LTDS1.setRightOperand(Suc);
		CLGOperatorNode LTDF1 = new CLGOperatorNode("=");
		LTDF1.setLeftOperand(Result);
		LTDF1.setRightOperand(Fa);
		CLGOperatorNode LTDRLF1 = new CLGOperatorNode("=");
		LTDRLF1.setLeftOperand(Result);
		LTDRLF1.setRightOperand(Fa);
		CLGOperatorNode LTDLRF1 = new CLGOperatorNode("=");
		LTDLRF1.setLeftOperand(Result);
		LTDLRF1.setRightOperand(Fa);
		CLGOperatorNode LTDAF1 = new CLGOperatorNode("=");
		LTDAF1.setLeftOperand(Result);
		LTDAF1.setRightOperand(Fa);
		CLGOperatorNode LTDE1 = new CLGOperatorNode("=");
		LTDE1.setLeftOperand(Result);
		LTDE1.setRightOperand(Ex);
		CLGOperatorNode LAN1 = new CLGOperatorNode("=");
		LAN1.setLeftOperand(Label1_Alignment);
		LAN1.setRightOperand(Nu);
		CLGOperatorNode LANN1 = new CLGOperatorNode("<>");
		LANN1.setLeftOperand(Label1_Alignment);
		LANN1.setRightOperand(Nu);
		CLGOperatorNode LAS1 = new CLGOperatorNode("=");
		LAS1.setLeftOperand(Result);
		LAS1.setRightOperand(Suc);
		CLGOperatorNode LAF1 = new CLGOperatorNode("=");
		LAF1.setLeftOperand(Result);
		LAF1.setRightOperand(Fa);
		CLGOperatorNode LALF1 = new CLGOperatorNode("=");
		LALF1.setLeftOperand(Result);
		LALF1.setRightOperand(Fa);
		CLGOperatorNode LARF1 = new CLGOperatorNode("=");
		LARF1.setLeftOperand(Result);
		LARF1.setRightOperand(Fa);
		CLGOperatorNode LACF1 = new CLGOperatorNode("=");
		LACF1.setLeftOperand(Result);
		LACF1.setRightOperand(Fa);
		CLGOperatorNode LAE1 = new CLGOperatorNode("=");
		LAE1.setLeftOperand(Exception);
		LAE1.setRightOperand(Ex);
		CLGOperatorNode LTEN1 = new CLGOperatorNode("=");
		LTEN1.setLeftOperand(Label1_Touchenabled);
		LTEN1.setRightOperand(Nu);
		CLGOperatorNode LTENN1 = new CLGOperatorNode("<>");
		LTENN1.setLeftOperand(Label1_Touchenabled);
		LTENN1.setRightOperand(Nu);
		CLGOperatorNode LTES1 = new CLGOperatorNode("=");
		LTES1.setLeftOperand(Result);
		LTES1.setRightOperand(Suc);
		CLGOperatorNode LTEF1 = new CLGOperatorNode("=");
		LTEF1.setLeftOperand(Result);
		LTEF1.setRightOperand(Fa);
		CLGOperatorNode LTEE1 = new CLGOperatorNode("=");
		LTEE1.setLeftOperand(Result);
		LTEE1.setRightOperand(Ex);
		
		CLGOperatorNode LN2 = new CLGOperatorNode("=");
		LN2.setLeftOperand(Label2);
		LN2.setRightOperand(Nu);
		CLGOperatorNode LNN2 = new CLGOperatorNode("<>");
		LNN2.setLeftOperand(Label2);
		LNN2.setRightOperand(Nu);
		CLGOperatorNode LE2 = new CLGOperatorNode("=");
		LE2.setLeftOperand(Result);
		LE2.setRightOperand(Ex);
		CLGOperatorNode LTN2 = new CLGOperatorNode("=");
		LTN2.setLeftOperand(Label2_Text);
		LTN2.setRightOperand(Nu);
		CLGOperatorNode LTNN2 = new CLGOperatorNode("<>");
		LTNN2.setLeftOperand(Label2_Text);
		LTNN2.setRightOperand(Nu);
		CLGOperatorNode LTS2 = new CLGOperatorNode("=");
		LTS2.setLeftOperand(Result);
		LTS2.setRightOperand(Suc);
		CLGOperatorNode LTF2 = new CLGOperatorNode("=");
		LTF2.setLeftOperand(Result);
		LTF2.setRightOperand(Fa);
		CLGOperatorNode LTE2 = new CLGOperatorNode("=");
		LTE2.setLeftOperand(Exception);
		LTE2.setRightOperand(Ex);
		CLGOperatorNode LBN2 = new CLGOperatorNode("=");
		LBN2.setLeftOperand(Label2_Bounds);
		LBN2.setRightOperand(Nu);
		CLGOperatorNode LBNN2 = new CLGOperatorNode("<>");
		LBNN2.setLeftOperand(Label2_Bounds);
		LBNN2.setRightOperand(Nu);	
		CLGOperatorNode LBS2 = new CLGOperatorNode("=");
		LBS2.setLeftOperand(Result);
		LBS2.setRightOperand(Suc);
		CLGOperatorNode LBF2 = new CLGOperatorNode("=");
		LBF2.setLeftOperand(Result);
		LBF2.setRightOperand(Fa);
		CLGOperatorNode LBHF2 = new CLGOperatorNode("=");
		LBHF2.setLeftOperand(Result);
		LBHF2.setRightOperand(Fa);
		CLGOperatorNode LBWF2 = new CLGOperatorNode("=");
		LBWF2.setLeftOperand(Result);
		LBWF2.setRightOperand(Fa);
		CLGOperatorNode LBYF2 = new CLGOperatorNode("=");
		LBYF2.setLeftOperand(Result);
		LBYF2.setRightOperand(Fa);
		CLGOperatorNode LBXF2 = new CLGOperatorNode("=");
		LBXF2.setLeftOperand(Result);
		LBXF2.setRightOperand(Fa);
		CLGOperatorNode LBE2 = new CLGOperatorNode("=");
		LBE2.setLeftOperand(Exception);
		LBE2.setRightOperand(Ex);
		CLGOperatorNode LEN2 = new CLGOperatorNode("=");
		LEN2.setLeftOperand(Label2_Enabled);
		LEN2.setRightOperand(Nu);
		CLGOperatorNode LENN2 = new CLGOperatorNode("<>");
		LENN2.setLeftOperand(Label2_Enabled);
		LENN2.setRightOperand(Nu);
		CLGOperatorNode LES2 = new CLGOperatorNode("=");
		LES2.setLeftOperand(Result);
		LES2.setRightOperand(Suc);
		CLGOperatorNode LEF2 = new CLGOperatorNode("=");
		LEF2.setLeftOperand(Result);
		LEF2.setRightOperand(Fa);
		CLGOperatorNode LEE2 = new CLGOperatorNode("=");
		LEE2.setLeftOperand(Exception);
		LEE2.setRightOperand(Ex);
		CLGOperatorNode LTDN2 = new CLGOperatorNode("=");
		LTDN2.setLeftOperand(Label2_Textdirection);
		LTDN2.setRightOperand(Nu);
		CLGOperatorNode LTDNN2 = new CLGOperatorNode("<>");
		LTDNN2.setLeftOperand(Label2_Textdirection);
		LTDNN2.setRightOperand(Nu);
		CLGOperatorNode LTDS2 = new CLGOperatorNode("=");
		LTDS2.setLeftOperand(Result);
		LTDS2.setRightOperand(Suc);
		CLGOperatorNode LTDF2 = new CLGOperatorNode("=");
		LTDF2.setLeftOperand(Result);
		LTDF2.setRightOperand(Fa);
		CLGOperatorNode LTDRLF2 = new CLGOperatorNode("=");
		LTDRLF2.setLeftOperand(Result);
		LTDRLF2.setRightOperand(Fa);
		CLGOperatorNode LTDLRF2 = new CLGOperatorNode("=");
		LTDLRF2.setLeftOperand(Result);
		LTDLRF2.setRightOperand(Fa);
		CLGOperatorNode LTDAF2 = new CLGOperatorNode("=");
		LTDAF2.setLeftOperand(Result);
		LTDAF2.setRightOperand(Fa);
		CLGOperatorNode LTDE2 = new CLGOperatorNode("=");
		LTDE2.setLeftOperand(Result);
		LTDE2.setRightOperand(Ex);
		CLGOperatorNode LAN2 = new CLGOperatorNode("=");
		LAN2.setLeftOperand(Label2_Alignment);
		LAN2.setRightOperand(Nu);
		CLGOperatorNode LANN2 = new CLGOperatorNode("<>");
		LANN2.setLeftOperand(Label2_Alignment);
		LANN2.setRightOperand(Nu);
		CLGOperatorNode LAS2 = new CLGOperatorNode("=");
		LAS2.setLeftOperand(Result);
		LAS2.setRightOperand(Suc);
		CLGOperatorNode LAF2 = new CLGOperatorNode("=");
		LAF2.setLeftOperand(Result);
		LAF2.setRightOperand(Fa);
		CLGOperatorNode LALF2 = new CLGOperatorNode("=");
		LALF2.setLeftOperand(Result);
		LALF2.setRightOperand(Fa);
		CLGOperatorNode LARF2 = new CLGOperatorNode("=");
		LARF2.setLeftOperand(Result);
		LARF2.setRightOperand(Fa);
		CLGOperatorNode LACF2 = new CLGOperatorNode("=");
		LACF2.setLeftOperand(Result);
		LACF2.setRightOperand(Fa);
		CLGOperatorNode LAE2 = new CLGOperatorNode("=");
		LAE2.setLeftOperand(Exception);
		LAE2.setRightOperand(Ex);
		CLGOperatorNode LTEN2 = new CLGOperatorNode("=");
		LTEN2.setLeftOperand(Label2_Touchenabled);
		LTEN2.setRightOperand(Nu);
		CLGOperatorNode LTENN2 = new CLGOperatorNode("<>");
		LTENN2.setLeftOperand(Label2_Touchenabled);
		LTENN2.setRightOperand(Nu);
		CLGOperatorNode LTES2 = new CLGOperatorNode("=");
		LTES2.setLeftOperand(Result);
		LTES2.setRightOperand(Suc);
		CLGOperatorNode LTEF2 = new CLGOperatorNode("=");
		LTEF2.setLeftOperand(Result);
		LTEF2.setRightOperand(Fa);
		CLGOperatorNode LTEE2 = new CLGOperatorNode("=");
		LTEE2.setLeftOperand(Result);
		LTEE2.setRightOperand(Ex);
		
		CLGOperatorNode TN1 = new CLGOperatorNode("=");
		TN1.setLeftOperand(Text1);
		TN1.setRightOperand(Nu);
		CLGOperatorNode TNN1 = new CLGOperatorNode("<>");
		TNN1.setLeftOperand(Text1);
		TNN1.setRightOperand(Nu);
		CLGOperatorNode TE1 = new CLGOperatorNode("=");
		TE1.setLeftOperand(Result);
		TE1.setRightOperand(Ex);
		CLGOperatorNode TF1 = new CLGOperatorNode("=");
		TF1.setLeftOperand(Result);
		TF1.setRightOperand(Fa);
		CLGOperatorNode TBN1 = new CLGOperatorNode("=");
		TBN1.setLeftOperand(Text1_Bounds);
		TBN1.setRightOperand(Nu);
		CLGOperatorNode TBNN1 = new CLGOperatorNode("<>");
		TBNN1.setLeftOperand(Text1_Bounds);
		TBNN1.setRightOperand(Nu);	
		CLGOperatorNode TBS1 = new CLGOperatorNode("=");
		TBS1.setLeftOperand(Result);
		TBS1.setRightOperand(Suc);
		CLGOperatorNode TBF1 = new CLGOperatorNode("=");
		TBF1.setLeftOperand(Result);
		TBF1.setRightOperand(Fa);
		CLGOperatorNode TBHF1 = new CLGOperatorNode("=");
		TBHF1.setLeftOperand(Result);
		TBHF1.setRightOperand(Fa);
		CLGOperatorNode TBWF1 = new CLGOperatorNode("=");
		TBWF1.setLeftOperand(Result);
		TBWF1.setRightOperand(Fa);
		CLGOperatorNode TBYF1 = new CLGOperatorNode("=");
		TBYF1.setLeftOperand(Result);
		TBYF1.setRightOperand(Fa);
		CLGOperatorNode TBXF1 = new CLGOperatorNode("=");
		TBXF1.setLeftOperand(Result);
		TBXF1.setRightOperand(Fa);
		CLGOperatorNode TEN1 = new CLGOperatorNode("=");
		TEN1.setLeftOperand(Text1_Enabled);
		TEN1.setRightOperand(Nu);
		CLGOperatorNode TENN1 = new CLGOperatorNode("<>");
		TENN1.setLeftOperand(Text1_Enabled);
		TENN1.setRightOperand(Nu);
		CLGOperatorNode TES1 = new CLGOperatorNode("=");
		TES1.setLeftOperand(Result);
		TES1.setRightOperand(Suc);
		CLGOperatorNode TEF1 = new CLGOperatorNode("=");
		TEF1.setLeftOperand(Result);
		TEF1.setRightOperand(Fa);
		CLGOperatorNode TTDN1 = new CLGOperatorNode("=");
		TTDN1.setLeftOperand(Text1_Textdirection);
		TTDN1.setRightOperand(Nu);
		CLGOperatorNode TTDNN1 = new CLGOperatorNode("<>");
		TTDNN1.setLeftOperand(Text1_Textdirection);
		TTDNN1.setRightOperand(Nu);
		CLGOperatorNode TTDS1 = new CLGOperatorNode("=");
		TTDS1.setLeftOperand(Result);
		TTDS1.setRightOperand(Suc);
		CLGOperatorNode TTDRLF1 = new CLGOperatorNode("=");
		TTDRLF1.setLeftOperand(Result);
		TTDRLF1.setRightOperand(Fa);
		CLGOperatorNode TTDLRF1 = new CLGOperatorNode("=");
		TTDLRF1.setLeftOperand(Result);
		TTDLRF1.setRightOperand(Fa);
		CLGOperatorNode TTDAF1 = new CLGOperatorNode("=");
		TTDAF1.setLeftOperand(Result);
		TTDAF1.setRightOperand(Fa);
		CLGOperatorNode TEDN1 = new CLGOperatorNode("=");
		TEDN1.setLeftOperand(Text1_Editable);
		TEDN1.setRightOperand(Nu);
		CLGOperatorNode TEDNN1 = new CLGOperatorNode("<>");
		TEDNN1.setLeftOperand(Text1_Editable);
		TEDNN1.setRightOperand(Nu);
		CLGOperatorNode TEDS1 = new CLGOperatorNode("=");
		TEDS1.setLeftOperand(Result);
		TEDS1.setRightOperand(Suc);
		CLGOperatorNode TEDF1 = new CLGOperatorNode("=");
		TEDF1.setLeftOperand(Result);
		TEDF1.setRightOperand(Fa);
		CLGOperatorNode TTEN1 = new CLGOperatorNode("=");
		TTEN1.setLeftOperand(Text1_Touchenabled);
		TTEN1.setRightOperand(Nu);
		CLGOperatorNode TTENN1 = new CLGOperatorNode("<>");
		TTENN1.setLeftOperand(Text1_Touchenabled);
		TTENN1.setRightOperand(Nu);
		CLGOperatorNode TTES1 = new CLGOperatorNode("=");
		TTES1.setLeftOperand(Result);
		TTES1.setRightOperand(Suc);
		CLGOperatorNode TTEF1 = new CLGOperatorNode("=");
		TTEF1.setLeftOperand(Result);
		TTEF1.setRightOperand(Fa);
		CLGOperatorNode TTN1 = new CLGOperatorNode("=");
		TTN1.setLeftOperand(Text1_Text);
		TTN1.setRightOperand(Nu);
		CLGOperatorNode TTNN1 = new CLGOperatorNode("<>");
		TTNN1.setLeftOperand(Text1_Text);
		TTNN1.setRightOperand(Nu);
		CLGOperatorNode TTS1 = new CLGOperatorNode("=");
		TTS1.setLeftOperand(Result);
		TTS1.setRightOperand(Suc);
		CLGOperatorNode TTF1 = new CLGOperatorNode("=");
		TTF1.setLeftOperand(Result);
		TTF1.setRightOperand(Fa);
		
		CLGOperatorNode TN2 = new CLGOperatorNode("=");
		TN2.setLeftOperand(Text2);
		TN2.setRightOperand(Nu);
		CLGOperatorNode TNN2 = new CLGOperatorNode("<>");
		TNN2.setLeftOperand(Text2);
		TNN2.setRightOperand(Nu);
		CLGOperatorNode TE2 = new CLGOperatorNode("=");
		TE2.setLeftOperand(Result);
		TE2.setRightOperand(Ex);
		CLGOperatorNode TF2 = new CLGOperatorNode("=");
		TF2.setLeftOperand(Result);
		TF2.setRightOperand(Fa);
		CLGOperatorNode TBN2 = new CLGOperatorNode("=");
		TBN2.setLeftOperand(Text2_Bounds);
		TBN2.setRightOperand(Nu);
		CLGOperatorNode TBNN2 = new CLGOperatorNode("<>");
		TBNN2.setLeftOperand(Text2_Bounds);
		TBNN2.setRightOperand(Nu);	
		CLGOperatorNode TBS2 = new CLGOperatorNode("=");
		TBS2.setLeftOperand(Result);
		TBS2.setRightOperand(Suc);
		CLGOperatorNode TBF2 = new CLGOperatorNode("=");
		TBF2.setLeftOperand(Result);
		TBF2.setRightOperand(Fa);
		CLGOperatorNode TBHF2 = new CLGOperatorNode("=");
		TBHF2.setLeftOperand(Result);
		TBHF2.setRightOperand(Fa);
		CLGOperatorNode TBWF2 = new CLGOperatorNode("=");
		TBWF2.setLeftOperand(Result);
		TBWF2.setRightOperand(Fa);
		CLGOperatorNode TBYF2 = new CLGOperatorNode("=");
		TBYF2.setLeftOperand(Result);
		TBYF2.setRightOperand(Fa);
		CLGOperatorNode TBXF2 = new CLGOperatorNode("=");
		TBXF2.setLeftOperand(Result);
		TBXF2.setRightOperand(Fa);
		CLGOperatorNode TEN2 = new CLGOperatorNode("=");
		TEN2.setLeftOperand(Text2_Enabled);
		TEN2.setRightOperand(Nu);
		CLGOperatorNode TENN2 = new CLGOperatorNode("<>");
		TENN2.setLeftOperand(Text2_Enabled);
		TENN2.setRightOperand(Nu);
		CLGOperatorNode TES2 = new CLGOperatorNode("=");
		TES2.setLeftOperand(Result);
		TES2.setRightOperand(Suc);
		CLGOperatorNode TEF2 = new CLGOperatorNode("=");
		TEF2.setLeftOperand(Result);
		TEF2.setRightOperand(Fa);
		CLGOperatorNode TTDN2 = new CLGOperatorNode("=");
		TTDN2.setLeftOperand(Text2_Textdirection);
		TTDN2.setRightOperand(Nu);
		CLGOperatorNode TTDNN2 = new CLGOperatorNode("<>");
		TTDNN2.setLeftOperand(Text2_Textdirection);
		TTDNN2.setRightOperand(Nu);
		CLGOperatorNode TTDS2 = new CLGOperatorNode("=");
		TTDS2.setLeftOperand(Result);
		TTDS2.setRightOperand(Suc);
		CLGOperatorNode TTDRLF2 = new CLGOperatorNode("=");
		TTDRLF2.setLeftOperand(Result);
		TTDRLF2.setRightOperand(Fa);
		CLGOperatorNode TTDLRF2 = new CLGOperatorNode("=");
		TTDLRF2.setLeftOperand(Result);
		TTDLRF2.setRightOperand(Fa);
		CLGOperatorNode TTDAF2 = new CLGOperatorNode("=");
		TTDAF2.setLeftOperand(Result);
		TTDAF2.setRightOperand(Fa);
		CLGOperatorNode TEDN2 = new CLGOperatorNode("=");
		TEDN2.setLeftOperand(Text2_Editable);
		TEDN2.setRightOperand(Nu);
		CLGOperatorNode TEDNN2 = new CLGOperatorNode("<>");
		TEDNN2.setLeftOperand(Text2_Editable);
		TEDNN2.setRightOperand(Nu);
		CLGOperatorNode TEDS2 = new CLGOperatorNode("=");
		TEDS2.setLeftOperand(Result);
		TEDS2.setRightOperand(Suc);
		CLGOperatorNode TEDF2 = new CLGOperatorNode("=");
		TEDF2.setLeftOperand(Result);
		TEDF2.setRightOperand(Fa);
		CLGOperatorNode TTEN2 = new CLGOperatorNode("=");
		TTEN2.setLeftOperand(Text2_Touchenabled);
		TTEN2.setRightOperand(Nu);
		CLGOperatorNode TTENN2 = new CLGOperatorNode("<>");
		TTENN2.setLeftOperand(Text2_Touchenabled);
		TTENN2.setRightOperand(Nu);
		CLGOperatorNode TTES2 = new CLGOperatorNode("=");
		TTES2.setLeftOperand(Result);
		TTES2.setRightOperand(Suc);
		CLGOperatorNode TTEF2 = new CLGOperatorNode("=");
		TTEF2.setLeftOperand(Result);
		TTEF2.setRightOperand(Fa);
		CLGOperatorNode TTN2 = new CLGOperatorNode("=");
		TTN2.setLeftOperand(Text2_Text);
		TTN2.setRightOperand(Nu);
		CLGOperatorNode TTNN2 = new CLGOperatorNode("<>");
		TTNN2.setLeftOperand(Text2_Text);
		TTNN2.setRightOperand(Nu);
		CLGOperatorNode TTS2 = new CLGOperatorNode("=");
		TTS2.setLeftOperand(Result);
		TTS2.setRightOperand(Suc);
		CLGOperatorNode TTF2 = new CLGOperatorNode("=");
		TTF2.setLeftOperand(Result);
		TTF2.setRightOperand(Fa);
	
		CLGOperatorNode BN = new CLGOperatorNode("=");
		BN.setLeftOperand(Button);
		BN.setRightOperand(Nu);
		CLGOperatorNode BNN = new CLGOperatorNode("<>");
		BNN.setLeftOperand(Button);
		BNN.setRightOperand(Nu);
		CLGOperatorNode BE = new CLGOperatorNode("=");
		BE.setLeftOperand(Result);
		BE.setRightOperand(Ex);
		CLGOperatorNode BF = new CLGOperatorNode("=");
		BF.setLeftOperand(Result);
		BF.setRightOperand(Fa);
		CLGOperatorNode BTN = new CLGOperatorNode("=");
		BTN.setLeftOperand(Button_Text);
		BTN.setRightOperand(Nu);
		CLGOperatorNode BTNN = new CLGOperatorNode("<>");
		BTNN.setLeftOperand(Button_Text);
		BTNN.setRightOperand(Nu);
		CLGOperatorNode BTS = new CLGOperatorNode("=");
		BTS.setLeftOperand(Result);
		BTS.setRightOperand(Suc);
		CLGOperatorNode BTF = new CLGOperatorNode("=");
		BTF.setLeftOperand(Result);
		BTF.setRightOperand(Fa);
		CLGOperatorNode BBN = new CLGOperatorNode("=");
		BBN.setLeftOperand(Button_Bounds);
		BBN.setRightOperand(Nu);
		CLGOperatorNode BBNN = new CLGOperatorNode("<>");
		BBNN.setLeftOperand(Button_Bounds);
		BBNN.setRightOperand(Nu);	
		CLGOperatorNode BBS = new CLGOperatorNode("=");
		BBS.setLeftOperand(Result);
		BBS.setRightOperand(Suc);
		CLGOperatorNode BBF = new CLGOperatorNode("=");
		BBF.setLeftOperand(Result);
		BBF.setRightOperand(Fa);
		CLGOperatorNode BBHF = new CLGOperatorNode("=");
		BBHF.setLeftOperand(Result);
		BBHF.setRightOperand(Fa);
		CLGOperatorNode BBWF = new CLGOperatorNode("=");
		BBWF.setLeftOperand(Result);
		BBWF.setRightOperand(Fa);
		CLGOperatorNode BBYF = new CLGOperatorNode("=");
		BBYF.setLeftOperand(Result);
		BBYF.setRightOperand(Fa);
		CLGOperatorNode BBXF = new CLGOperatorNode("=");
		BBXF.setLeftOperand(Result);
		BBXF.setRightOperand(Fa);
		CLGOperatorNode BAN = new CLGOperatorNode("=");
		BAN.setLeftOperand(Button_Alignment);
		BAN.setRightOperand(Nu);
		CLGOperatorNode BANN = new CLGOperatorNode("<>");
		BANN.setLeftOperand(Button_Alignment);
		BANN.setRightOperand(Nu);
		CLGOperatorNode BAS = new CLGOperatorNode("=");
		BAS.setLeftOperand(Result);
		BAS.setRightOperand(Suc);
		CLGOperatorNode BALF = new CLGOperatorNode("=");
		BALF.setLeftOperand(Result);
		BALF.setRightOperand(Fa);
		CLGOperatorNode BARF = new CLGOperatorNode("=");
		BARF.setLeftOperand(Result);
		BARF.setRightOperand(Fa);
		CLGOperatorNode BACF = new CLGOperatorNode("=");
		BACF.setLeftOperand(Result);
		BACF.setRightOperand(Fa);
		CLGOperatorNode BEN = new CLGOperatorNode("=");
		BEN.setLeftOperand(Button_Enabled);
		BEN.setRightOperand(Nu);
		CLGOperatorNode BENN = new CLGOperatorNode("<>");
		BENN.setLeftOperand(Button_Enabled);
		BENN.setRightOperand(Nu);
		CLGOperatorNode BES = new CLGOperatorNode("=");
		BES.setLeftOperand(Result);
		BES.setRightOperand(Suc);
		CLGOperatorNode BEF = new CLGOperatorNode("=");
		BEF.setLeftOperand(Result);
		BEF.setRightOperand(Fa);
		CLGOperatorNode BGN = new CLGOperatorNode("=");
		BGN.setLeftOperand(Button_Grayed);
		BGN.setRightOperand(Nu);
		CLGOperatorNode BGNN = new CLGOperatorNode("<>");
		BGNN.setLeftOperand(Button_Grayed);
		BGNN.setRightOperand(Nu);
		CLGOperatorNode BGS = new CLGOperatorNode("=");
		BGS.setLeftOperand(Result);
		BGS.setRightOperand(Suc);
		CLGOperatorNode BGF = new CLGOperatorNode("=");
		BGF.setLeftOperand(Result);
		BGF.setRightOperand(Fa);
		CLGOperatorNode BTEN = new CLGOperatorNode("=");
		BTEN.setLeftOperand(Button_Touchenabled);
		BTEN.setRightOperand(Nu);
		CLGOperatorNode BTENN = new CLGOperatorNode("<>");
		BTENN.setLeftOperand(Button_Touchenabled);
		BTENN.setRightOperand(Nu);
		CLGOperatorNode BTES = new CLGOperatorNode("=");
		BTES.setLeftOperand(Result);
		BTES.setRightOperand(Suc);
		CLGOperatorNode BTEF = new CLGOperatorNode("=");
		BTEF.setLeftOperand(Result);
		BTEF.setRightOperand(Fa);
		CLGOperatorNode BTDN = new CLGOperatorNode("=");
		BTDN.setLeftOperand(Button_Textdirection);
		BTDN.setRightOperand(Nu);
		CLGOperatorNode BTDNN = new CLGOperatorNode("<>");
		BTDNN.setLeftOperand(Button_Textdirection);
		BTDNN.setRightOperand(Nu);
		CLGOperatorNode BTDS = new CLGOperatorNode("=");
		BTDS.setLeftOperand(Result);
		BTDS.setRightOperand(Suc);
		CLGOperatorNode BTDRLF = new CLGOperatorNode("=");
		BTDRLF.setLeftOperand(Result);
		BTDRLF.setRightOperand(Fa);
		CLGOperatorNode BTDLRF = new CLGOperatorNode("=");
		BTDLRF.setLeftOperand(Result);
		BTDLRF.setRightOperand(Fa);
		CLGOperatorNode BTDAF = new CLGOperatorNode("=");
		BTDAF.setLeftOperand(Result);
		BTDAF.setRightOperand(Fa);
		CLGOperatorNode BSLN = new CLGOperatorNode("=");
		BSLN.setLeftOperand(Button_SelectionListener);
		BSLN.setRightOperand(Nu);
		CLGOperatorNode BSLNN = new CLGOperatorNode("<>");
		BSLNN.setLeftOperand(Button_SelectionListener);
		BSLNN.setRightOperand(Nu);
		CLGOperatorNode BSLS = new CLGOperatorNode("<>");
		BSLS.setLeftOperand(Result);
		BSLS.setRightOperand(Suc);
		CLGOperatorNode BSLF = new CLGOperatorNode("=");
		BSLF.setLeftOperand(Result);
		BSLF.setRightOperand(Fa);
		CLGOperatorNode BSN = new CLGOperatorNode("=");
		BSN.setLeftOperand(Button_Selection);
		BSN.setRightOperand(Nu);
		CLGOperatorNode BSNN = new CLGOperatorNode("<>");
		BSNN.setLeftOperand(Button_Selection);
		BSNN.setRightOperand(Nu);
		CLGOperatorNode BSS = new CLGOperatorNode("=");
		BSS.setLeftOperand(Result);
		BSS.setRightOperand(Suc);
		CLGOperatorNode BSF = new CLGOperatorNode("=");
		BSF.setLeftOperand(Result);
		BSF.setRightOperand(Fa);
		
		//將CLG限制式放入到CLG圖當中
		CLGGraph clg1 = new CLGGraph(SN);
		CLGGraph clg2 = new CLGGraph(SNN);
		CLGGraph clg3= new CLGGraph(SN);
		CLGGraph clg4 = new CLGGraph(SNN);
		CLGGraph clg5 = new CLGGraph(SN);
		CLGGraph clg6 = new CLGGraph(SNN);
		CLGGraph clg7 = new CLGGraph(SN);
		CLGGraph clg8 = new CLGGraph(SNN);
		CLGGraph clg9 = new CLGGraph(SN);
		CLGGraph clg10 = new CLGGraph(SNN);
		CLGGraph clg11 = new CLGGraph(SN);
		CLGGraph clg12 = new CLGGraph(SNN);
		CLGGraph clg13= new CLGGraph(SN);
		CLGGraph clg14 = new CLGGraph(SNN);
		CLGGraph clg15 = new CLGGraph(SN);
		CLGGraph clg16 = new CLGGraph(SNN);
		CLGGraph clg17 = new CLGGraph(SLN);
		CLGGraph clg18 = new CLGGraph(SLNN);
		CLGGraph clg19 = new CLGGraph(SE);
		CLGGraph clg20 = new CLGGraph(TBF1);
		CLGGraph clg22 = new CLGGraph(S_LAE);
		CLGGraph clg23 = new CLGGraph(S_LANE);
		CLGGraph clg24 = new CLGGraph(S_LGE);
		CLGGraph clg25 = new CLGGraph(S_LGNE);
		CLGGraph clg26 = new CLGGraph(S_LFE);
		CLGGraph clg27 = new CLGGraph(S_LFNE);
		CLGGraph clg28 = new CLGGraph(S_LRE);
		CLGGraph clg29 = new CLGGraph(S_LRNE);
		CLGGraph clg30 = new CLGGraph(S_LFOE);
		CLGGraph clg31 = new CLGGraph(S_LFONE);
		CLGGraph clg32 = new CLGGraph(S_LSE);
		CLGGraph clg33 = new CLGGraph(S_LSNE);
		CLGGraph clg34 = new CLGGraph(SLAS);
		CLGGraph clg35 = new CLGGraph(SLAF);
		CLGGraph clg36 = new CLGGraph(LTF1);
		CLGGraph clg37 = new CLGGraph(SLGF);
		CLGGraph clg38 = new CLGGraph(LBS1);
		CLGGraph clg39 = new CLGGraph(SLFF);
		CLGGraph clg40 = new CLGGraph(LBF1);
		CLGGraph clg41 = new CLGGraph(SLRF);
		CLGGraph clg42 = new CLGGraph(LBE1);
		CLGGraph clg43 = new CLGGraph(SLFOF);
		CLGGraph clg44 = new CLGGraph(LEF1);
		CLGGraph clg45 = new CLGGraph(SLSF);
		CLGGraph clg46 = new CLGGraph(LEE1);
		CLGGraph clg47 = new CLGGraph(SLF);
		CLGGraph clg48 = new CLGGraph(LN1);
		CLGGraph clg49 = new CLGGraph(LNN1);
		CLGGraph clg50 = new CLGGraph(LN1);
		CLGGraph clg51 = new CLGGraph(LNN1);
		CLGGraph clg52 = new CLGGraph(LN1);
		CLGGraph clg53 = new CLGGraph(LNN1);
		CLGGraph clg54 = new CLGGraph(LN1);
		CLGGraph clg55 = new CLGGraph(LNN1);
		CLGGraph clg56 = new CLGGraph(LN1);
		CLGGraph clg57 = new CLGGraph(LNN1);
		CLGGraph clg58 = new CLGGraph(LAF1);
		CLGGraph clg59 = new CLGGraph(S_TDNLR);
		CLGGraph clg60 = new CLGGraph(S_TDNRL);
		CLGGraph clg61 = new CLGGraph(S_TDNA);
		CLGGraph clg62 = new CLGGraph(S_TE);
		CLGGraph clg63 = new CLGGraph(S_TNE);
		CLGGraph clg64 = new CLGGraph(S_BHE);
		CLGGraph clg65 = new CLGGraph(S_BHNE);
		CLGGraph clg66 = new CLGGraph(S_BWE);
		CLGGraph clg67 = new CLGGraph(S_BWNE);
		CLGGraph clg68 = new CLGGraph(S_BYE);
		CLGGraph clg69 = new CLGGraph(S_BYNE);
		CLGGraph clg70 = new CLGGraph(S_BXE);
		CLGGraph clg71 = new CLGGraph(S_BXNE);
		CLGGraph clg72 = new CLGGraph(S_ET);
		CLGGraph clg73 = new CLGGraph(S_EF);
		CLGGraph clg74 = new CLGGraph(S_MXE);
		CLGGraph clg75 = new CLGGraph(S_MXNE);
		CLGGraph clg76 = new CLGGraph(S_MYE);
		CLGGraph clg77 = new CLGGraph(S_MYNE);
		CLGGraph clg78 = new CLGGraph(S_MT);
		CLGGraph clg79 = new CLGGraph(S_MF);
		CLGGraph clg80 = new CLGGraph(S_TT);
		CLGGraph clg81 = new CLGGraph(S_TF);
		CLGGraph clg82 = new CLGGraph(S_TDLR);
		CLGGraph clg83 = new CLGGraph(S_TDRL);
		CLGGraph clg84 = new CLGGraph(S_TDA);
		CLGGraph clg85 = new CLGGraph(STS);
		CLGGraph clg86 = new CLGGraph(STF);
		CLGGraph clg87 = new CLGGraph(SBS);
		CLGGraph clg88 = new CLGGraph(SBHF);
		CLGGraph clg89 = new CLGGraph(SBWF);
		CLGGraph clg90 = new CLGGraph(SBYF);
		CLGGraph clg91 = new CLGGraph(SBXF);
		CLGGraph clg92 = new CLGGraph(SES);
		CLGGraph clg93 = new CLGGraph(SEF);
		CLGGraph clg94 = new CLGGraph(SMSS);
		CLGGraph clg95 = new CLGGraph(SMSXF);
		CLGGraph clg96 = new CLGGraph(SMSXF);
		CLGGraph clg97 = new CLGGraph(SMS);
		CLGGraph clg98 = new CLGGraph(SMF);
		CLGGraph clg99 = new CLGGraph(STES);
		CLGGraph clg100 = new CLGGraph(STEF);
		CLGGraph clg101 = new CLGGraph(STDS);
		CLGGraph clg102 = new CLGGraph(STDRLF);
		CLGGraph clg103 = new CLGGraph(STDLRF);
		CLGGraph clg104 = new CLGGraph(STDAF);
		CLGGraph clg105 = new CLGGraph(SEN);
		CLGGraph clg106 = new CLGGraph(SENN);
		CLGGraph clg107 = new CLGGraph(SEF);
		CLGGraph clg108= new CLGGraph(SEE);
		CLGGraph clg109 = new CLGGraph(SBF);
		CLGGraph clg110 = new CLGGraph(STF);
		CLGGraph clg111 = new CLGGraph(STN);
		CLGGraph clg112 = new CLGGraph(STNN);
		CLGGraph clg113 = new CLGGraph(STE);
		CLGGraph clg114 = new CLGGraph(SBN);
		CLGGraph clg115 = new CLGGraph(SBNN);
		CLGGraph clg116 = new CLGGraph(SBE);
		CLGGraph clg117 = new CLGGraph(SMSN);
		CLGGraph clg118 = new CLGGraph(SMSNN);
		CLGGraph clg119 = new CLGGraph(SMSF);
		CLGGraph clg120 = new CLGGraph(SMSE);
		CLGGraph clg121 = new CLGGraph(SMN);
		CLGGraph clg122 = new CLGGraph(SMNN);
		CLGGraph clg123 = new CLGGraph(SMF);
		CLGGraph clg124 = new CLGGraph(SME);
		CLGGraph clg125 = new CLGGraph(STEN);
		CLGGraph clg126 = new CLGGraph(STENN);
		CLGGraph clg127 = new CLGGraph(STEF);
		CLGGraph clg128 = new CLGGraph(STEE);
		CLGGraph clg129 = new CLGGraph(STDN);
		CLGGraph clg130 = new CLGGraph(STDNN);
		CLGGraph clg131 = new CLGGraph(STDF);
		CLGGraph clg132 = new CLGGraph(STDE);
		CLGGraph clg133 = new CLGGraph(LN1);
		CLGGraph clg134 = new CLGGraph(LNN1);
		CLGGraph clg135 = new CLGGraph(TE1);
		CLGGraph clg136 = new CLGGraph(LTN1);
		CLGGraph clg137 = new CLGGraph(LTNN1);
		CLGGraph clg138 = new CLGGraph(LTE1);	
		CLGGraph clg139 = new CLGGraph(LTS1);
		CLGGraph clg140 = new CLGGraph(LTF1);
		CLGGraph clg141 = new CLGGraph(LBN1);	
		CLGGraph clg142 = new CLGGraph(LBNN1);
		CLGGraph clg143 = new CLGGraph(LBHF1);
		CLGGraph clg144 = new CLGGraph(LBWF1);
		CLGGraph clg145 = new CLGGraph(LBYF1);
		CLGGraph clg146 = new CLGGraph(LBXF1);
		CLGGraph clg147 = new CLGGraph(LEN1);
		CLGGraph clg148 = new CLGGraph(LENN1);
		CLGGraph clg149 = new CLGGraph(LES1);
		CLGGraph clg150 = new CLGGraph(LEF1);
		CLGGraph clg151 = new CLGGraph(LTDN1);
		CLGGraph clg152 = new CLGGraph(LTDNN1);
		CLGGraph clg153 = new CLGGraph(LTDS1);
		CLGGraph clg154 = new CLGGraph(LTDF1);
		CLGGraph clg155 = new CLGGraph(LTDRLF1);
		CLGGraph clg156 = new CLGGraph(LTDLRF1);
		CLGGraph clg157 = new CLGGraph(LTDAF1);
		CLGGraph clg158 = new CLGGraph(LTDE1);
		CLGGraph clg159 = new CLGGraph(LAN1);
		CLGGraph clg160 = new CLGGraph(LANN1);
		CLGGraph clg161 = new CLGGraph(LAS1);
		CLGGraph clg162 = new CLGGraph(LALF1);
		CLGGraph clg163 = new CLGGraph(LARF1);
		CLGGraph clg164 = new CLGGraph(LACF1);
		CLGGraph clg165 = new CLGGraph(LTEN1);
		CLGGraph clg166 = new CLGGraph(LTENN1);
		CLGGraph clg167 = new CLGGraph(LTES1);
		CLGGraph clg168 = new CLGGraph(LTEF1);
		CLGGraph clg169 = new CLGGraph(LTEE1);
		CLGGraph clg170 = new CLGGraph(L1_TE);
		CLGGraph clg171 = new CLGGraph(L1_TNE);
		CLGGraph clg172 = new CLGGraph(L1_BHE);
		CLGGraph clg173 = new CLGGraph(L1_BHNE);
		CLGGraph clg174 = new CLGGraph(L1_BWE);
		CLGGraph clg175 = new CLGGraph(L1_BWNE);
		CLGGraph clg176 = new CLGGraph(L1_BYE);
		CLGGraph clg177 = new CLGGraph(L1_BYNE);
		CLGGraph clg178 = new CLGGraph(L1_BXE);
		CLGGraph clg179 = new CLGGraph(L1_BXNE);
		CLGGraph clg180 = new CLGGraph(L1_ET);
		CLGGraph clg181 = new CLGGraph(L1_EF);
		CLGGraph clg182 = new CLGGraph(L1_TDLR);
		CLGGraph clg183 = new CLGGraph(L1_TDNLR);
		CLGGraph clg184 = new CLGGraph(L1_TDRL);
		CLGGraph clg185 = new CLGGraph(L1_TDNRL);
		CLGGraph clg186 = new CLGGraph(L1_TDA);
		CLGGraph clg187 = new CLGGraph(L1_TDNA);
		CLGGraph clg188 = new CLGGraph(L1_AR);
		CLGGraph clg189 = new CLGGraph(L1_ANR);
		CLGGraph clg190 = new CLGGraph(L1_AL);
		CLGGraph clg191 = new CLGGraph(L1_ANL);
		CLGGraph clg192 = new CLGGraph(L1_AC);
		CLGGraph clg193 = new CLGGraph(L1_ANC);
		CLGGraph clg194 = new CLGGraph(L1_TT);
		CLGGraph clg195 = new CLGGraph(L1_TF);
		CLGGraph clg196 = new CLGGraph(LAE1);
		CLGGraph clg197 = new CLGGraph(LTEF1);
		CLGGraph clg198 = new CLGGraph(T1_BHE);
		CLGGraph clg199 = new CLGGraph(T1_BHNE);
		CLGGraph clg200 = new CLGGraph(TN2);
		CLGGraph clg201 = new CLGGraph(T1_BWE);
		CLGGraph clg202 = new CLGGraph(T1_BWNE);
		CLGGraph clg203 = new CLGGraph(T1_BYE);
		CLGGraph clg204 = new CLGGraph(T1_BYNE);
		CLGGraph clg205 = new CLGGraph(T1_BXE);
		CLGGraph clg206 = new CLGGraph(T1_BXNE);
		CLGGraph clg207 = new CLGGraph(T1_ET);
		CLGGraph clg208 = new CLGGraph(T1_EF);
		CLGGraph clg209 = new CLGGraph(T1_EDT);
		CLGGraph clg210 = new CLGGraph(T1_EDF);
		CLGGraph clg211 = new CLGGraph(T1_TT);
		CLGGraph clg212 = new CLGGraph(T1_TF);
		CLGGraph clg213 = new CLGGraph(T1_TDLR);
		CLGGraph clg214 = new CLGGraph(T1_TDNLR);
		CLGGraph clg215 = new CLGGraph(T1_TDRL);
		CLGGraph clg216 = new CLGGraph(T1_TDNRL);
		CLGGraph clg217 = new CLGGraph(T1_TDA);
		CLGGraph clg218 = new CLGGraph(T1_TDNA);
		CLGGraph clg219 = new CLGGraph(T1_T);
		CLGGraph clg220 = new CLGGraph(T1_NT);
		CLGGraph clg221 = new CLGGraph(TN1);
		CLGGraph clg222 = new CLGGraph(TNN1);
		CLGGraph clg223 = new CLGGraph(LTF2);
		CLGGraph clg224 = new CLGGraph(TBN1);
		CLGGraph clg225 = new CLGGraph(TBNN1);
		CLGGraph clg226 = new CLGGraph(TBS1);
		CLGGraph clg227 = new CLGGraph(TBHF1);
		CLGGraph clg228 = new CLGGraph(TBWF1);
		CLGGraph clg229 = new CLGGraph(TBYF1);
		CLGGraph clg230 = new CLGGraph(TBXF1);
		CLGGraph clg231 = new CLGGraph(TEN1);
		CLGGraph clg232 = new CLGGraph(TENN1);
		CLGGraph clg233 = new CLGGraph(TES1);
		CLGGraph clg234 = new CLGGraph(TEF1);
		CLGGraph clg235 = new CLGGraph(TTDN1);
		CLGGraph clg236 = new CLGGraph(TTDNN1);
		CLGGraph clg238 = new CLGGraph(TTDS1);
		CLGGraph clg239 = new CLGGraph(TTDRLF1);
		CLGGraph clg240 = new CLGGraph(TTDLRF1);
		CLGGraph clg241 = new CLGGraph(TTDAF1);
		CLGGraph clg242 = new CLGGraph(TEDN1);
		CLGGraph clg243 = new CLGGraph(TEDNN1);
		CLGGraph clg244 = new CLGGraph(TEDS1);
		CLGGraph clg245 = new CLGGraph(TEDF1);
		CLGGraph clg246 = new CLGGraph(TTEN1);
		CLGGraph clg247 = new CLGGraph(TTENN1);
		CLGGraph clg248 = new CLGGraph(TTES1);
		CLGGraph clg249 = new CLGGraph(TTEF1);
		CLGGraph clg250 = new CLGGraph(TN1);
		CLGGraph clg251 = new CLGGraph(TNN1);
		CLGGraph clg252 = new CLGGraph(TE1);
		CLGGraph clg253 = new CLGGraph(TF1);
		CLGGraph clg254 = new CLGGraph(TN1);
		CLGGraph clg255 = new CLGGraph(TNN1);
		CLGGraph clg256 = new CLGGraph(TE1);
		CLGGraph clg257 = new CLGGraph(TF1);
		CLGGraph clg258 = new CLGGraph(TF1);
		CLGGraph clg259 = new CLGGraph(TN1);
		CLGGraph clg260 = new CLGGraph(TNN1);
		CLGGraph clg261 = new CLGGraph(TE1);
		CLGGraph clg262 = new CLGGraph(TN1);
		CLGGraph clg263 = new CLGGraph(TNN1);
		CLGGraph clg264 = new CLGGraph(TF1);
		CLGGraph clg265 = new CLGGraph(TE1);
		CLGGraph clg266 = new CLGGraph(TTN1);
		CLGGraph clg267 = new CLGGraph(TTNN1);
		CLGGraph clg268 = new CLGGraph(TTS1);
		CLGGraph clg269 = new CLGGraph(TTF1);
		CLGGraph clg270 = new CLGGraph(TN1);
		CLGGraph clg271 = new CLGGraph(TNN1);
		CLGGraph clg272 = new CLGGraph(TTF1);
		CLGGraph clg273 = new CLGGraph(TE1);
		CLGGraph clg274 = new CLGGraph(BN);
		CLGGraph clg275 = new CLGGraph(BNN);
		CLGGraph clg276 = new CLGGraph(BE);
		CLGGraph clg277 = new CLGGraph(BTN);
		CLGGraph clg278 = new CLGGraph(BTNN);
		CLGGraph clg279 = new CLGGraph(BTS);
		CLGGraph clg280 = new CLGGraph(BTF);
		CLGGraph clg281 = new CLGGraph(BBN);
		CLGGraph clg282 = new CLGGraph(BBNN);
		CLGGraph clg283 = new CLGGraph(BBHF);
		CLGGraph clg284 = new CLGGraph(BBWF);
		CLGGraph clg285 = new CLGGraph(BBYF);
		CLGGraph clg286 = new CLGGraph(BBXF);
		CLGGraph clg287 = new CLGGraph(BAN);
		CLGGraph clg288 = new CLGGraph(BANN);
		CLGGraph clg289 = new CLGGraph(BAS);
		CLGGraph clg290 = new CLGGraph(BALF);
		CLGGraph clg291 = new CLGGraph(BARF);
		CLGGraph clg292 = new CLGGraph(BACF);
		CLGGraph clg293 = new CLGGraph(BEN);
		CLGGraph clg294 = new CLGGraph(BENN);
		CLGGraph clg295 = new CLGGraph(BES);
		CLGGraph clg296 = new CLGGraph(BEF);
		CLGGraph clg297 = new CLGGraph(BGN);
		CLGGraph clg298 = new CLGGraph(BGNN);
		CLGGraph clg299 = new CLGGraph(BGS);
		CLGGraph clg300 = new CLGGraph(BGF);
		CLGGraph clg301 = new CLGGraph(BTEN);
		CLGGraph clg302 = new CLGGraph(BTENN);
		CLGGraph clg303 = new CLGGraph(BTES);
		CLGGraph clg304 = new CLGGraph(BTEF);
		CLGGraph clg305 = new CLGGraph(BTDN);
		CLGGraph clg306 = new CLGGraph(BTDNN);
		CLGGraph clg307 = new CLGGraph(BTDS);
		CLGGraph clg308 = new CLGGraph(BTDRLF);
		CLGGraph clg309 = new CLGGraph(BTDLRF);
		CLGGraph clg310 = new CLGGraph(BTDAF);
		CLGGraph clg311 = new CLGGraph(BSLN);
		CLGGraph clg312 = new CLGGraph(BSLNN);
		CLGGraph clg313 = new CLGGraph(BSLS);
		CLGGraph clg314 = new CLGGraph(BSLF);
		CLGGraph clg315 = new CLGGraph(BSN);
		CLGGraph clg316 = new CLGGraph(BSNN);
		//CLGGraph clg317 = new CLGGraph(BSS);
		CLGGraph clg318 = new CLGGraph(BSF);
		CLGGraph clg319 = new CLGGraph(B_TE);
		CLGGraph clg320 = new CLGGraph(B_TNE);
		CLGGraph clg321 = new CLGGraph(B_BHE);
		CLGGraph clg322 = new CLGGraph(B_BHNE);
		CLGGraph clg323 = new CLGGraph(B_BWE);
		CLGGraph clg324 = new CLGGraph(B_BWNE);
		CLGGraph clg325 = new CLGGraph(B_BYE);
		CLGGraph clg326 = new CLGGraph(B_BYNE);
		CLGGraph clg327 = new CLGGraph(B_BXE);
		CLGGraph clg328 = new CLGGraph(B_BXNE);
		CLGGraph clg329 = new CLGGraph(B_ET);
		CLGGraph clg330 = new CLGGraph(B_EF);
		CLGGraph clg331 = new CLGGraph(B_TDLR);
		CLGGraph clg332 = new CLGGraph(B_TDNLR);
		CLGGraph clg333 = new CLGGraph(B_TDRL);
		CLGGraph clg334 = new CLGGraph(B_TDNRL);
		CLGGraph clg335 = new CLGGraph(B_TDA);
		CLGGraph clg336 = new CLGGraph(B_TDNA);
		CLGGraph clg337 = new CLGGraph(B_AR);
		CLGGraph clg338 = new CLGGraph(B_ANR);
		CLGGraph clg339 = new CLGGraph(B_AL);
		CLGGraph clg340 = new CLGGraph(B_ANL);
		CLGGraph clg341 = new CLGGraph(B_AC);
		CLGGraph clg342 = new CLGGraph(B_ANC);
		CLGGraph clg343 = new CLGGraph(B_TT);
		CLGGraph clg344 = new CLGGraph(B_TF);
		CLGGraph clg345 = new CLGGraph(B_ST);
		CLGGraph clg346 = new CLGGraph(B_SF);
		CLGGraph clg347 = new CLGGraph(B_GT);
		CLGGraph clg348 = new CLGGraph(B_GF);
		CLGGraph clg349 = new CLGGraph(B_SLE);
		CLGGraph clg350 = new CLGGraph(B_SLNE);
		CLGGraph clg351 = new CLGGraph(BF);
		CLGGraph clg352 = new CLGGraph(BN);
		CLGGraph clg353 = new CLGGraph(BNN);
		CLGGraph clg354 = new CLGGraph(BBS);
		CLGGraph clg355 = new CLGGraph(BBF);
		CLGGraph clg356 = new CLGGraph(BE);
		CLGGraph clg357 = new CLGGraph(BN);
		CLGGraph clg358 = new CLGGraph(BNN);
		CLGGraph clg359 = new CLGGraph(BEF);
		CLGGraph clg360 = new CLGGraph(BE);
		CLGGraph clg361 = new CLGGraph(BN);
		CLGGraph clg362 = new CLGGraph(BNN);
		CLGGraph clg363 = new CLGGraph(BF);
		CLGGraph clg364 = new CLGGraph(BE);
		CLGGraph clg365 = new CLGGraph(BN);
		CLGGraph clg366 = new CLGGraph(BNN);
		CLGGraph clg367 = new CLGGraph(BF);
		CLGGraph clg368 = new CLGGraph(BE);
		CLGGraph clg369 = new CLGGraph(BN);
		CLGGraph clg370 = new CLGGraph(BNN);
		CLGGraph clg371 = new CLGGraph(BF);
		CLGGraph clg372 = new CLGGraph(BE);
		CLGGraph clg373 = new CLGGraph(BN);
		CLGGraph clg374 = new CLGGraph(BNN);
		CLGGraph clg375 = new CLGGraph(BF);
		CLGGraph clg376 = new CLGGraph(BE);
		CLGGraph clg377 = new CLGGraph(BN);
		CLGGraph clg378 = new CLGGraph(BNN);
		CLGGraph clg379 = new CLGGraph(BF);
		CLGGraph clg380 = new CLGGraph(BF);
		CLGGraph clg381 = new CLGGraph(BE);
		CLGGraph clg382 = new CLGGraph(LTF2);
		CLGGraph clg383 = new CLGGraph(LN2);
		CLGGraph clg384 = new CLGGraph(LNN2);
		CLGGraph clg385 = new CLGGraph(TE2);
		CLGGraph clg386 = new CLGGraph(LTN2);
		CLGGraph clg387 = new CLGGraph(LTNN2);
		CLGGraph clg388 = new CLGGraph(LTE2);
		CLGGraph clg389 = new CLGGraph(LTS2);
		CLGGraph clg390 = new CLGGraph(LTF2);
		CLGGraph clg391 = new CLGGraph(LBN2);
		CLGGraph clg392 = new CLGGraph(LBNN2);
		CLGGraph clg393 = new CLGGraph(LBHF2);
		CLGGraph clg394 = new CLGGraph(LBWF2);
		CLGGraph clg395 = new CLGGraph(LBYF2);
		CLGGraph clg396 = new CLGGraph(LBXF2);
		CLGGraph clg397 = new CLGGraph(LEN2);
		CLGGraph clg398 = new CLGGraph(LENN2);
		CLGGraph clg399 = new CLGGraph(LES2);
		CLGGraph clg400 = new CLGGraph(LEF2);
		CLGGraph clg401 = new CLGGraph(LTDN2);
		CLGGraph clg402 = new CLGGraph(LTDNN2);
		CLGGraph clg403 = new CLGGraph(LTDS2);
		CLGGraph clg404 = new CLGGraph(LTDF2);
		CLGGraph clg405 = new CLGGraph(LTDRLF2);
		CLGGraph clg406 = new CLGGraph(LTDLRF2);
		CLGGraph clg407 = new CLGGraph(LTDAF2);
		CLGGraph clg408 = new CLGGraph(LTDE2);
		CLGGraph clg409 = new CLGGraph(LAN2);
		CLGGraph clg410 = new CLGGraph(LANN2);
		CLGGraph clg411 = new CLGGraph(LAS2);
		CLGGraph clg412 = new CLGGraph(LALF2);
		CLGGraph clg413 = new CLGGraph(LARF2);
		CLGGraph clg414 = new CLGGraph(LACF2);
		CLGGraph clg415 = new CLGGraph(LTEN2);
		CLGGraph clg416 = new CLGGraph(LTENN2);
		CLGGraph clg417 = new CLGGraph(LTES2);
		CLGGraph clg418 = new CLGGraph(LTEF2);
		CLGGraph clg419 = new CLGGraph(LTEE2);
		CLGGraph clg420 = new CLGGraph(L2_TE);
		CLGGraph clg421 = new CLGGraph(L2_TNE);
		CLGGraph clg422 = new CLGGraph(L2_BHE);
		CLGGraph clg423 = new CLGGraph(L2_BHNE);
		CLGGraph clg424 = new CLGGraph(L2_BWE);
		CLGGraph clg425 = new CLGGraph(L2_BWNE);
		CLGGraph clg426 = new CLGGraph(L2_BYE);
		CLGGraph clg427 = new CLGGraph(L2_BYNE);
		CLGGraph clg428 = new CLGGraph(L2_BXE);
		CLGGraph clg429 = new CLGGraph(L2_BXNE);
		CLGGraph clg430 = new CLGGraph(L2_ET);
		CLGGraph clg431 = new CLGGraph(L2_EF);
		CLGGraph clg432 = new CLGGraph(L2_TDLR);
		CLGGraph clg433 = new CLGGraph(L2_TDNLR);
		CLGGraph clg434 = new CLGGraph(L2_TDRL);
		CLGGraph clg435 = new CLGGraph(L2_TDNRL);
		CLGGraph clg436 = new CLGGraph(L2_TDA);
		CLGGraph clg437 = new CLGGraph(L2_TDNA);
		CLGGraph clg438 = new CLGGraph(L2_AR);
		CLGGraph clg439 = new CLGGraph(L2_ANR);
		CLGGraph clg440 = new CLGGraph(L2_AL);
		CLGGraph clg441 = new CLGGraph(L2_ANL);
		CLGGraph clg442 = new CLGGraph(L2_AC);
		CLGGraph clg443 = new CLGGraph(L2_ANC);
		CLGGraph clg444 = new CLGGraph(L2_TT);
		CLGGraph clg445 = new CLGGraph(L2_TF);
		CLGGraph clg446 = new CLGGraph(LAE2);
		CLGGraph clg447 = new CLGGraph(LTEF2);
		CLGGraph clg448 = new CLGGraph(T2_BHE);
		CLGGraph clg449 = new CLGGraph(T2_BHNE);
		CLGGraph clg451 = new CLGGraph(T2_BWE);
		CLGGraph clg452 = new CLGGraph(T2_BWNE);
		CLGGraph clg453 = new CLGGraph(T2_BYE);
		CLGGraph clg454 = new CLGGraph(T2_BYNE);
		CLGGraph clg455 = new CLGGraph(T2_BXE);
		CLGGraph clg456 = new CLGGraph(T2_BXNE);
		CLGGraph clg457 = new CLGGraph(T2_ET);
		CLGGraph clg458 = new CLGGraph(T2_EF);
		CLGGraph clg459 = new CLGGraph(T2_EDT);
		CLGGraph clg460 = new CLGGraph(T2_EDF);
		CLGGraph clg461 = new CLGGraph(T2_TT);
		CLGGraph clg462 = new CLGGraph(T2_TF);
		CLGGraph clg463 = new CLGGraph(T2_TDLR);
		CLGGraph clg464 = new CLGGraph(T2_TDNLR);
		CLGGraph clg465 = new CLGGraph(T2_TDRL);
		CLGGraph clg466 = new CLGGraph(T2_TDNRL);
		CLGGraph clg467 = new CLGGraph(T2_TDA);
		CLGGraph clg468 = new CLGGraph(T2_TDNA);
		CLGGraph clg469 = new CLGGraph(T2_T);
		CLGGraph clg470 = new CLGGraph(T2_NT);
		CLGGraph clg471 = new CLGGraph(TN2);
		CLGGraph clg472 = new CLGGraph(TNN2);
		CLGGraph clg473 = new CLGGraph(LTF2);
		CLGGraph clg474 = new CLGGraph(TBN2);
		CLGGraph clg475 = new CLGGraph(TBNN2);
		CLGGraph clg476 = new CLGGraph(TBS2);
		CLGGraph clg477 = new CLGGraph(TBHF2);
		CLGGraph clg478 = new CLGGraph(TBWF2);
		CLGGraph clg479 = new CLGGraph(TBYF2);
		CLGGraph clg480 = new CLGGraph(TBXF2);
		CLGGraph clg481 = new CLGGraph(TEN2);
		CLGGraph clg482 = new CLGGraph(TENN2);
		CLGGraph clg483 = new CLGGraph(TES2);
		CLGGraph clg484 = new CLGGraph(TEF2);
		CLGGraph clg485 = new CLGGraph(TTDN2);
		CLGGraph clg486 = new CLGGraph(TTDNN2);
		CLGGraph clg488 = new CLGGraph(TTDS2);
		CLGGraph clg489 = new CLGGraph(TTDRLF2);
		CLGGraph clg490 = new CLGGraph(TTDLRF2);
		CLGGraph clg491 = new CLGGraph(TTDAF2);
		CLGGraph clg492 = new CLGGraph(TEDN2);
		CLGGraph clg493 = new CLGGraph(TEDNN2);
		CLGGraph clg494 = new CLGGraph(TEDS2);
		CLGGraph clg495 = new CLGGraph(TEDF2);
		CLGGraph clg496 = new CLGGraph(TTEN2);
		CLGGraph clg497 = new CLGGraph(TTENN2);
		CLGGraph clg498 = new CLGGraph(TTES2);
		CLGGraph clg499 = new CLGGraph(TTEF2);
		CLGGraph clg500 = new CLGGraph(TN2);
		CLGGraph clg501 = new CLGGraph(TNN2);
		CLGGraph clg502 = new CLGGraph(TE2);
		CLGGraph clg503 = new CLGGraph(TF2);
		CLGGraph clg504 = new CLGGraph(TN2);
		CLGGraph clg505 = new CLGGraph(TNN2);
		CLGGraph clg506 = new CLGGraph(TE2);
		CLGGraph clg507 = new CLGGraph(TF2);
		CLGGraph clg508 = new CLGGraph(TF2);
		CLGGraph clg509 = new CLGGraph(TN2);
		CLGGraph clg510 = new CLGGraph(TNN2);
		CLGGraph clg511 = new CLGGraph(TE2);
		CLGGraph clg512 = new CLGGraph(TN2);
		CLGGraph clg513 = new CLGGraph(TNN2);
		CLGGraph clg514 = new CLGGraph(TF2);
		CLGGraph clg515 = new CLGGraph(TE2);
		CLGGraph clg516 = new CLGGraph(TTN2);
		CLGGraph clg517 = new CLGGraph(TTNN2);
		CLGGraph clg518 = new CLGGraph(TTS2);
		CLGGraph clg519 = new CLGGraph(TTF2);
		CLGGraph clg520 = new CLGGraph(TN2);
		CLGGraph clg521 = new CLGGraph(TNN2);
		CLGGraph clg522 = new CLGGraph(TTF2);
		CLGGraph clg523 = new CLGGraph(TE2);

		CLGGraph clg530 = new CLGGraph(TBF2);
		CLGGraph clg536 = new CLGGraph(LTF2);
		CLGGraph clg538 = new CLGGraph(LBS2);
		CLGGraph clg540 = new CLGGraph(LBF2);
		CLGGraph clg542 = new CLGGraph(LBE2);
		CLGGraph clg544 = new CLGGraph(LEF2);
		CLGGraph clg546 = new CLGGraph(LEE2);
		CLGGraph clg548 = new CLGGraph(LN2);
		CLGGraph clg549 = new CLGGraph(LNN2);
		CLGGraph clg550 = new CLGGraph(LN2);
		CLGGraph clg551 = new CLGGraph(LNN2);
		CLGGraph clg552 = new CLGGraph(LN2);
		CLGGraph clg553 = new CLGGraph(LNN2);
		CLGGraph clg554 = new CLGGraph(LN2);
		CLGGraph clg555 = new CLGGraph(LNN2);
		CLGGraph clg556 = new CLGGraph(LN2);
		CLGGraph clg557 = new CLGGraph(LNN2);
		CLGGraph clg558 = new CLGGraph(LAF2);
		


		//Shell_layout
		clg22.graphAnd(clg34);
		clg23.graphAnd(clg35);
		clg22.graphOr(clg23);
		clg25.graphAnd(clg22);
		clg24.graphAnd(clg37);
		clg25.graphOr(clg24);
		clg27.graphAnd(clg25);
		clg26.graphAnd(clg39);
		clg27.graphOr(clg26);
		clg29.graphAnd(clg27);
		clg28.graphAnd(clg41);
		clg29.graphOr(clg28);
		clg31.graphAnd(clg29);
		clg30.graphAnd(clg43);
		clg31.graphOr(clg30);
		clg33.graphAnd(clg31);
		clg32.graphAnd(clg45);
		clg33.graphOr(clg32);
		clg18.graphAnd(clg33);
		clg17.graphAnd(clg47);
		clg18.graphOr(clg17);
		clg2.graphAnd(clg18);
		clg1.graphAnd(clg19);
		clg2.graphOr(clg1);
		//Shell_text
		clg62.graphAnd(clg85);
		clg63.graphAnd(clg86);
		clg62.graphOr(clg63);
		clg112.graphAnd(clg62);
		clg111.graphAnd(clg110);
		clg112.graphOr(clg111);
		clg4.graphAnd(clg112);
		clg3.graphAnd(clg113);
		clg4.graphOr(clg3);
		//Shell_bounds
		clg64.graphAnd(clg87);
		clg65.graphAnd(clg88);
		clg64.graphOr(clg65);
		clg66.graphAnd(clg64);
		clg67.graphAnd(clg89);
		clg66.graphOr(clg67);
		clg68.graphAnd(clg66);
		clg69.graphAnd(clg90);
		clg68.graphOr(clg69);
		clg70.graphAnd(clg68);
		clg71.graphAnd(clg91);
		clg70.graphOr(clg71);
		clg115.graphAnd(clg70);
		clg114.graphAnd(clg109);
		clg115.graphOr(clg114);
		clg6.graphAnd(clg115);
		clg5.graphAnd(clg116);
		clg6.graphOr(clg5);
		//Shell_enabled
		clg72.graphAnd(clg92);
		clg73.graphAnd(clg93);
		clg72.graphOr(clg73);
		clg106.graphAnd(clg72);
		clg105.graphAnd(clg107);
		clg106.graphOr(clg105);
		clg8.graphAnd(clg106);
		clg7.graphAnd(clg108);
		clg8.graphOr(clg7);
		//Shell_minimumsize
		clg76.graphAnd(clg94);
		clg77.graphAnd(clg95);
		clg76.graphOr(clg77);
		clg74.graphAnd(clg76);
		clg75.graphAnd(clg96);
		clg74.graphOr(clg75);
		clg118.graphAnd(clg74);
		clg117.graphAnd(clg119);
		clg118.graphOr(clg117);
		clg10.graphAnd(clg118);
		clg9.graphAnd(clg120);
		clg10.graphOr(clg9);
		//Shell_modified
		clg78.graphAnd(clg98);
		clg79.graphAnd(clg97);
		clg78.graphOr(clg79);
		clg122.graphAnd(clg78);
		clg121.graphAnd(clg123);
		clg122.graphOr(clg121);
		clg12.graphAnd(clg122);
		clg11.graphAnd(clg124);
		clg12.graphOr(clg11);
		//Shell_touchenabled
		clg80.graphAnd(clg99);
		clg81.graphAnd(clg100);
		clg80.graphOr(clg81);
		clg126.graphAnd(clg80);
		clg125.graphAnd(clg127);
		clg126.graphOr(clg125);
		clg14.graphAnd(clg126);
		clg13.graphAnd(clg128);
		clg14.graphOr(clg13);
		//Shell_textdirection
		clg82.graphAnd(clg101);
		clg59.graphAnd(clg103);
		clg82.graphOr(clg59);
		clg60.graphAnd(clg82);
		clg83.graphAnd(clg102);
		clg60.graphOr(clg83);
		clg61.graphAnd(clg60);
		clg84.graphAnd(clg104);
		clg61.graphOr(clg84);
		clg130.graphAnd(clg61);
		clg129.graphAnd(clg131);
		clg130.graphOr(clg129);
		clg16.graphAnd(clg130);
		clg15.graphAnd(clg132);
		clg16.graphOr(clg15);
		//Label1_text
		clg170.graphAnd(clg139);
		clg171.graphAnd(clg140);
		clg170.graphOr(clg171);
		clg137.graphAnd(clg170);
		clg136.graphAnd(clg36);
		clg137.graphOr(clg136);
		clg134.graphAnd(clg137);
		clg133.graphAnd(clg138);
		clg134.graphOr(clg133);
		//Label1_bounds
		clg172.graphAnd(clg38);
		clg173.graphAnd(clg143);
		clg172.graphOr(clg173);
		clg174.graphAnd(clg172);
		clg175.graphAnd(clg144);
		clg174.graphOr(clg175);
		clg176.graphAnd(clg174);
		clg177.graphAnd(clg145);
		clg176.graphOr(clg177);
		clg178.graphAnd(clg176);
		clg179.graphAnd(clg146);
		clg178.graphOr(clg179);
		clg142.graphAnd(clg178);
		clg141.graphAnd(clg40);
		clg142.graphOr(clg141);
		clg49.graphAnd(clg142);
		clg48.graphAnd(clg42);
		clg49.graphOr(clg48);
		//Label1_enabled
		clg180.graphAnd(clg149);
		clg181.graphAnd(clg150);
		clg180.graphOr(clg181);
		clg148.graphAnd(clg180);
		clg147.graphAnd(clg44);
		clg148.graphOr(clg147);
		clg51.graphAnd(clg148);
		clg50.graphAnd(clg46);
		clg51.graphOr(clg50);
		//Label1_textdirection
		clg182.graphAnd(clg153);
		clg183.graphAnd(clg154);
		clg182.graphOr(clg183);
		clg185.graphAnd(clg182);
		clg184.graphAnd(clg155);
		clg185.graphOr(clg184);
		clg187.graphAnd(clg185);		
		clg186.graphAnd(clg156);
		clg187.graphOr(clg186);
		clg152.graphAnd(clg187);
		clg151.graphAnd(clg157);
		clg152.graphOr(clg151);
		clg53.graphAnd(clg152);
		clg52.graphAnd(clg158);
		clg53.graphOr(clg52);
		//Label1_alignment
		clg190.graphAnd(clg161);
		clg191.graphAnd(clg162);
		clg190.graphOr(clg191);
		clg189.graphAnd(clg190);
		clg188.graphAnd(clg163);
		clg189.graphOr(clg188);
		clg193.graphAnd(clg189);
		clg192.graphAnd(clg164);
		clg193.graphOr(clg192);
		clg160.graphAnd(clg193);
		clg159.graphAnd(clg58);
		clg160.graphOr(clg159);
		clg55.graphAnd(clg160);
		clg54.graphAnd(clg196);
		clg55.graphOr(clg54);
		//Label1_Touchenabled
		clg194.graphAnd(clg167);
		clg195.graphAnd(clg168);
		clg194.graphOr(clg195);
		clg166.graphAnd(clg194);
		clg165.graphAnd(clg197);
		clg166.graphOr(clg165);
		clg57.graphAnd(clg166);
		clg56.graphAnd(clg169);
		clg57.graphOr(clg56);
		//Label2_text
		clg420.graphAnd(clg389);
		clg421.graphAnd(clg382);
		clg420.graphOr(clg421);
		clg387.graphAnd(clg420);
		clg386.graphAnd(clg223);
		clg387.graphOr(clg386);
		clg384.graphAnd(clg387);
		clg383.graphAnd(clg388);
		clg384.graphOr(clg383);
		//Label2_bounds
		clg422.graphAnd(clg538);
		clg423.graphAnd(clg393);
		clg422.graphOr(clg423);
		clg424.graphAnd(clg422);
		clg425.graphAnd(clg394);
		clg424.graphOr(clg425);
		clg426.graphAnd(clg424);
		clg427.graphAnd(clg395);
		clg426.graphOr(clg427);
		clg428.graphAnd(clg426);
		clg429.graphAnd(clg396);
		clg428.graphOr(clg429);
		clg392.graphAnd(clg428);
		clg391.graphAnd(clg540);
		clg392.graphOr(clg391);
		clg549.graphAnd(clg392);
		clg548.graphAnd(clg542);
		clg549.graphOr(clg548);
		//Label2_enabled
		clg430.graphAnd(clg399);
		clg431.graphAnd(clg390);
		clg430.graphOr(clg431);
		clg398.graphAnd(clg430);
		clg397.graphAnd(clg544);
		clg398.graphOr(clg397);
		clg551.graphAnd(clg398);
		clg550.graphAnd(clg546);
		clg551.graphOr(clg550);
		//Label2_textdirection
		clg432.graphAnd(clg403);
		clg433.graphAnd(clg404);
		clg432.graphOr(clg433);
		clg435.graphAnd(clg432);
		clg434.graphAnd(clg405);
		clg435.graphOr(clg434);
		clg437.graphAnd(clg435);
		clg436.graphAnd(clg406);
		clg437.graphOr(clg436);
		clg402.graphAnd(clg437);
		clg401.graphAnd(clg407);
		clg402.graphOr(clg401);
		clg553.graphAnd(clg402);
		clg552.graphAnd(clg408);
		clg553.graphOr(clg552);
		//Label2_alignment
		clg440.graphAnd(clg411);
		clg441.graphAnd(clg412);
		clg440.graphOr(clg441);
		clg439.graphAnd(clg440);
		clg438.graphAnd(clg413);
		clg439.graphOr(clg438);
		clg443.graphAnd(clg439);
		clg442.graphAnd(clg414);
		clg443.graphOr(clg442);
		clg410.graphAnd(clg443);
		clg409.graphAnd(clg558);
		clg410.graphOr(clg409);
		clg555.graphAnd(clg410);
		clg554.graphAnd(clg446);
		clg555.graphOr(clg554);
		//Label2_touchenabled
		clg444.graphAnd(clg417);
		clg445.graphAnd(clg418);
		clg444.graphOr(clg445);
		clg416.graphAnd(clg444);
		clg415.graphAnd(clg447);
		clg416.graphOr(clg415);
		clg557.graphAnd(clg416);
		clg556.graphAnd(clg419);
		clg557.graphOr(clg556);
		//Text1_bounds
		clg198.graphAnd(clg226);
		clg199.graphAnd(clg227);
		clg198.graphOr(clg199);
		clg201.graphAnd(clg198);
		clg202.graphAnd(clg228);
		clg201.graphOr(clg202);
		clg203.graphAnd(clg201);
		clg204.graphAnd(clg229);
		clg203.graphOr(clg204);
		clg205.graphAnd(clg203);
		clg206.graphAnd(clg230);
		clg205.graphOr(clg206);
		clg225.graphAnd(clg205);
		clg224.graphAnd(clg20);
		clg225.graphOr(clg224);
		clg222.graphAnd(clg225);
		clg221.graphAnd(clg135);
		clg222.graphOr(clg221);
		//Text1_enabled
		clg207.graphAnd(clg233);
		clg208.graphAnd(clg234);
		clg207.graphOr(clg208);
		clg232.graphAnd(clg207);
		clg231.graphAnd(clg253);
		clg232.graphOr(clg231);
		clg251.graphAnd(clg232);
		clg250.graphAnd(clg252);
		clg251.graphOr(clg250);
		//Text1_editabled
		clg209.graphAnd(clg244);
		clg210.graphAnd(clg245);
		clg209.graphOr(clg210);
		clg243.graphAnd(clg209);
		clg242.graphAnd(clg257);
		clg243.graphOr(clg242);
		clg255.graphAnd(clg243);
		clg254.graphAnd(clg256);
		clg255.graphOr(clg254);
		//Text1_touchenabled
		clg211.graphAnd(clg248);
		clg212.graphAnd(clg249);
		clg211.graphOr(clg212);
		clg247.graphAnd(clg211);
		clg246.graphAnd(clg258);
		clg247.graphOr(clg246);
		clg260.graphAnd(clg247);
		clg259.graphAnd(clg261);
		clg260.graphOr(clg259);
		//Text1_textdirection
		clg213.graphAnd(clg238);
		clg214.graphAnd(clg239);
		clg213.graphOr(clg214);
		clg216.graphAnd(clg213);
		clg215.graphAnd(clg240);
		clg216.graphOr(clg215);
		clg218.graphAnd(clg216);
		clg217.graphAnd(clg241);
		clg218.graphOr(clg217);
		clg236.graphAnd(clg218);
		clg235.graphAnd(clg264);
		clg236.graphOr(clg235);
		clg263.graphAnd(clg236);
		clg262.graphAnd(clg265);
		clg263.graphOr(clg262);
		//Text1_text
		clg219.graphAnd(clg268);
		clg220.graphAnd(clg269);
		clg219.graphOr(clg220);
		clg267.graphAnd(clg219);
		clg266.graphAnd(clg272);
		clg267.graphOr(clg266);
		clg271.graphAnd(clg267);
		clg270.graphAnd(clg273);
		clg271.graphOr(clg270);
		//Text2_bounds
		clg448.graphAnd(clg476);
		clg449.graphAnd(clg477);
		clg448.graphOr(clg449);
		clg451.graphAnd(clg448);
		clg452.graphAnd(clg478);
		clg451.graphOr(clg452);
		clg453.graphAnd(clg451);
		clg454.graphAnd(clg479);
		clg453.graphOr(clg454);
		clg455.graphAnd(clg453);
		clg456.graphAnd(clg480);
		clg455.graphOr(clg456);
		clg475.graphAnd(clg455);
		clg474.graphAnd(clg520);
		clg475.graphOr(clg474);
		clg472.graphAnd(clg475);
		clg471.graphAnd(clg385);
		clg472.graphOr(clg471);
		//Text2_enabled
		clg457.graphAnd(clg483);
		clg458.graphAnd(clg484);
		clg457.graphOr(clg458);
		clg482.graphAnd(clg457);
		clg481.graphAnd(clg503);
		clg482.graphOr(clg481);
		clg501.graphAnd(clg482);
		clg500.graphAnd(clg502);
		clg501.graphOr(clg500);
		//Text2_editabled
		clg459.graphAnd(clg494);
		clg460.graphAnd(clg495);
		clg459.graphOr(clg460);
		clg493.graphAnd(clg459);
		clg492.graphAnd(clg507);
		clg493.graphOr(clg492);
		clg505.graphAnd(clg493);
		clg504.graphAnd(clg506);
		clg505.graphOr(clg504);
		//Text2_touchenabled
		clg461.graphAnd(clg498);
		clg462.graphAnd(clg499);
		clg461.graphOr(clg462);
		clg497.graphAnd(clg461);
		clg496.graphAnd(clg508);
		clg497.graphOr(clg496);
		clg510.graphAnd(clg497);
		clg509.graphAnd(clg511);
		clg510.graphOr(clg509);
		//Text2_textdirection
		clg463.graphAnd(clg488);
		clg464.graphAnd(clg489);
		clg463.graphOr(clg464);
		clg466.graphAnd(clg463);
		clg465.graphAnd(clg490);
		clg466.graphOr(clg465);
		clg468.graphAnd(clg466);
		clg467.graphAnd(clg491);
		clg468.graphOr(clg467);
		clg486.graphAnd(clg468);
		clg485.graphAnd(clg514);
		clg486.graphOr(clg485);
		clg513.graphAnd(clg486);
		clg512.graphAnd(clg515);
		clg513.graphOr(clg512);
		//Text2_text
		clg469.graphAnd(clg518);
		clg470.graphAnd(clg519);
		clg469.graphOr(clg470);
		clg517.graphAnd(clg469);
		clg516.graphAnd(clg522);
		clg517.graphOr(clg516);
		clg521.graphAnd(clg517);
		clg200.graphAnd(clg523);
		clg521.graphOr(clg200);
		//Button_text
		clg319.graphAnd(clg279);
		clg320.graphAnd(clg280);
		clg319.graphOr(clg320);
		clg278.graphAnd(clg319);
		clg277.graphAnd(clg351);
		clg278.graphOr(clg277);
		clg275.graphAnd(clg278);
		clg274.graphAnd(clg276);
		clg275.graphOr(clg274);
		//Button_bounds
		clg321.graphAnd(clg354);
		clg322.graphAnd(clg283);
		clg321.graphOr(clg322);
		clg323.graphAnd(clg321);
		clg324.graphAnd(clg284);
		clg323.graphOr(clg324);
		clg325.graphAnd(clg323);
		clg326.graphAnd(clg285);
		clg325.graphOr(clg326);
		clg327.graphAnd(clg325);
		clg328.graphAnd(clg286);
		clg327.graphOr(clg328);
		clg282.graphAnd(clg327);
		clg281.graphAnd(clg355);
		clg282.graphOr(clg281);
		clg353.graphAnd(clg282);
		clg352.graphAnd(clg356);
		clg353.graphOr(clg352);
		//Button_enabled
		clg329.graphAnd(clg295);
		clg330.graphAnd(clg296);
		clg329.graphOr(clg330);
		clg294.graphAnd(clg329);
		clg293.graphAnd(clg359);
		clg294.graphOr(clg293);
		clg358.graphAnd(clg294);
		clg357.graphAnd(clg360);
		clg358.graphOr(clg357);
		//Button_textdirection
		clg331.graphAnd(clg307);
		clg332.graphAnd(clg308);
		clg331.graphOr(clg332);
		clg334.graphAnd(clg331);
		clg333.graphAnd(clg309);
		clg334.graphOr(clg333);
		clg336.graphAnd(clg334);
		clg335.graphAnd(clg310);
		clg336.graphOr(clg335);
		clg306.graphAnd(clg336);
		clg305.graphAnd(clg363);
		clg306.graphOr(clg305);
		clg362.graphAnd(clg306);
		clg361.graphAnd(clg364);
		clg362.graphOr(clg361);
		//Button_alignment
		clg341.graphAnd(clg289);
		clg342.graphAnd(clg292);
		clg341.graphOr(clg342);
		clg340.graphAnd(clg341);
		clg339.graphAnd(clg290);
		clg340.graphOr(clg339);
		clg338.graphAnd(clg340);
		clg337.graphAnd(clg367);
		clg338.graphOr(clg337);
		clg288.graphAnd(clg338);
		clg287.graphAnd(clg291);
		clg288.graphOr(clg287);
		clg366.graphAnd(clg288);
		clg365.graphAnd(clg368);
		clg366.graphOr(clg365);
		//Button_grayed
		clg347.graphAnd(clg299);
		clg348.graphAnd(clg300);
		clg347.graphOr(clg348);
		clg298.graphAnd(clg347);
		clg297.graphAnd(clg371);
		clg298.graphOr(clg297);
		clg370.graphAnd(clg298);
		clg369.graphAnd(clg372);
		clg370.graphOr(clg369);
		//Button_touchenabled
		clg343.graphAnd(clg303);
		clg344.graphAnd(clg304);
		clg343.graphOr(clg344);
		clg302.graphAnd(clg343);
		clg301.graphAnd(clg375);
		clg302.graphOr(clg301);
		clg374.graphAnd(clg302);
		clg373.graphAnd(clg376);
		clg374.graphOr(clg373);
		//Button_selectionlistener
		clg349.graphAnd(clg313);
		clg350.graphAnd(clg314);
		clg349.graphOr(clg350);
		clg312.graphAnd(clg349);
		clg311.graphAnd(clg379);
		clg312.graphOr(clg311);
		clg345.graphAnd(clg312);
		clg346.graphAnd(clg380);
		clg345.graphOr(clg346);
		clg316.graphAnd(clg345);
		clg315.graphAnd(clg318);
		clg316.graphOr(clg315);
		clg378.graphAnd(clg316);
		clg377.graphAnd(clg381);
		clg378.graphOr(clg377);
		//將CLG圖儲存進ArrayList中
		ArrayList<CLGGraph> Gnodes = new ArrayList<CLGGraph>();
		Gnodes.add(clg2);
		Gnodes.add(clg4);
		Gnodes.add(clg6);
		Gnodes.add(clg8);
		Gnodes.add(clg10);
		Gnodes.add(clg12);
		Gnodes.add(clg14);
		Gnodes.add(clg16);
		Gnodes.add(clg134);
		Gnodes.add(clg49);
		Gnodes.add(clg51);
		Gnodes.add(clg53);
		Gnodes.add(clg55);
		Gnodes.add(clg57);
		Gnodes.add(clg222);
		Gnodes.add(clg251);
		Gnodes.add(clg255);
		Gnodes.add(clg260);
		Gnodes.add(clg263);
		Gnodes.add(clg271);
		Gnodes.add(clg275);
		Gnodes.add(clg353);
		Gnodes.add(clg358);
		Gnodes.add(clg362);
		Gnodes.add(clg366);
		Gnodes.add(clg370);
		Gnodes.add(clg374);
		Gnodes.add(clg378);
		Gnodes.add(clg384);
		Gnodes.add(clg549);
		Gnodes.add(clg551);
		Gnodes.add(clg553);
		Gnodes.add(clg555);
		Gnodes.add(clg557);
		Gnodes.add(clg472);
		Gnodes.add(clg501);
		Gnodes.add(clg505);
		Gnodes.add(clg510);
		Gnodes.add(clg513);
		Gnodes.add(clg521);
		//畫CLG圖並查看
		String clgdraw = clg384.graphDraw();
		System.out.println(clgdraw);
		
		//設置SymbolTable屬性及名稱資訊
		String Counter = "Counter";
		SymbolTable ST = new SymbolTable(Counter);
		MethodToken MT = new MethodToken(Counter);
		ArrayList<VariableToken> VTAL = new ArrayList<VariableToken>();
		ArrayList<String> MPAL = new ArrayList<String>();	//函數參數的ArrayList
		ArrayList<String> MPTAL = new ArrayList<String>();	//函數參數型態的ArrayList
		String ShellB = "grade_Shell_bounds";
		String ShellX = "grade_Shell_x";
		String ShellY = "grade_Shell_y";
		String ShellW = "grade_Shell_width";
		String ShellH = "grade_Shell_height";
		String ShellT = "grade_Shell_text";
		String ShellE = "grade_Shell_enabled";
		String ShellMS = "grade_Shell_minimumsize";
		String ShellM = "grade_Shell_modified";
		String ShellTH = "grade_Shell_touchenabled";
		String ShellTD = "grade_Shell_textdirection";
		String ShellL = "grade_Shell_layout";
		String Label1T = "grade_Label1_text";
		String Label1B = "grade_Label1_bounds";
		String Label1E = "grade_Label1_enabled";
		String Label1TD = "grade_Label1_textdirection";
		String Label1A = "grade_Label1_alignment";
		String Label1TH = "grade_Label1_touchenabled";
		String Label2T = "grade_Label2_text";
		String Label2B = "grade_Label2_bounds";
		String Label2E = "grade_Label2_enabled";
		String Label2TD = "grade_Label2_textdirection";
		String Label2A = "grade_Label2_alignment";
		String Label2TH = "grade_Label2_touchenabled";
		String Text1T = "grade_Text1_text";
		String Text1B = "grade_Text1_bounds";
		String Text1E = "grade_Text1_enabled";
		String Text1TD = "grade_Text1_textdirection";
		String Text1ED = "grade_Text1_editable";
		String Text1TH = "grade_Text1_touchenabled";
		String Text2T = "grade_Text2_text";
		String Text2B = "grade_Text2_bounds";
		String Text2E = "grade_Text2_enabled";
		String Text2TD = "grade_Text2_textdirection";
		String Text2ED = "grade_Text2_editable";
		String Text2TH = "grade_Text2_touchenabled";
		String ButtonT = "grade_Button_text";
		String ButtonB = "grade_Button_bounds";
		String ButtonE = "grade_Button_enabled";
		String ButtonA = "grade_Button_alignment";
		String ButtonTD = "grade_Button_textdirection";
		String ButtonG = "grade_Button_grayed";
		String ButtonTH = "grade_Button_touchenabled";
		String ButtonSL = "grade_Button_selectionlistener";

		
		String S = "string";
		String I = "int";
		String B = "boolean";
		MPAL.add(ShellB);
		MPAL.add(ShellX);	
		MPAL.add(ShellY);	
		MPAL.add(ShellW);	
		MPAL.add(ShellH);
		MPAL.add(ShellT);
		MPAL.add(ShellE);

		MPTAL.add(I);
		MPTAL.add(I);	
		MPTAL.add(I);
		MPTAL.add(I);
		MPTAL.add(I);
		MPTAL.add(S);
		MPTAL.add(B);


		StringType SType = new StringType();
		IntType IType = new IntType();
		BooleanType BType = new BooleanType();
		VariableToken VTShellX = new VariableToken(ShellX, IType);		//新增參數為INT型態的資訊
		VariableToken VTShellY = new VariableToken(ShellY, IType);		
		VariableToken VTShellW = new VariableToken(ShellW, IType);		
		VariableToken VTShellH = new VariableToken(ShellH, IType);	
		VariableToken VTShellB = new VariableToken(ShellB, IType);
		VariableToken VTShellT = new VariableToken(ShellT, SType);
		VariableToken VTShellTE = new VariableToken(ShellE, BType);

		
		VTAL.add(VTShellB);	
		MT.addArgument(VTShellB);		
		ST.addAttributeMap(VTShellB);
		VTAL.add(VTShellX);	
		MT.addArgument(VTShellX);		
		ST.addAttributeMap(VTShellX);
		VTAL.add(VTShellY);	
		MT.addArgument(VTShellY);
		ST.addAttributeMap(VTShellY);
		VTAL.add(VTShellW);	
		MT.addArgument(VTShellW);		
		ST.addAttributeMap(VTShellW);
		VTAL.add(VTShellH);		
		MT.addArgument(VTShellH);		
		ST.addAttributeMap(VTShellH);
		VTAL.add(VTShellT);		
		MT.addArgument(VTShellT);
		VTAL.add(VTShellTE);		
		MT.addArgument(VTShellTE);		
		ST.addAttributeMap(VTShellTE);

		
		ST.addArgument(VTAL);
		ST.addMethod(MT);
		
		((CLGStartNode)(clg4.getStartNode())).setClassName(ShellT);
		((CLGStartNode)(clg4.getStartNode())).setMethodName(ShellT);
		((CLGStartNode)(clg4.getStartNode())).setRetType("String");
		((CLGStartNode)(clg4.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg4.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg6.getStartNode())).setClassName(ShellB);
		((CLGStartNode)(clg6.getStartNode())).setMethodName(ShellB);
		((CLGStartNode)(clg6.getStartNode())).setRetType("String");
		((CLGStartNode)(clg6.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg6.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg8.getStartNode())).setClassName(ShellE);
		((CLGStartNode)(clg8.getStartNode())).setMethodName(ShellE);
		((CLGStartNode)(clg8.getStartNode())).setRetType("String");
		((CLGStartNode)(clg8.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg8.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg10.getStartNode())).setClassName(ShellMS);
		((CLGStartNode)(clg10.getStartNode())).setMethodName(ShellMS);
		((CLGStartNode)(clg10.getStartNode())).setRetType("String");
		((CLGStartNode)(clg10.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg10.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg12.getStartNode())).setClassName(ShellM);
		((CLGStartNode)(clg12.getStartNode())).setMethodName(ShellM);
		((CLGStartNode)(clg12.getStartNode())).setRetType("String");
		((CLGStartNode)(clg12.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg12.getStartNode())).setMethodParameterTypes(MPTAL);

		((CLGStartNode)(clg14.getStartNode())).setClassName(ShellTH);
		((CLGStartNode)(clg14.getStartNode())).setMethodName(ShellTH);
		((CLGStartNode)(clg14.getStartNode())).setRetType("String");
		((CLGStartNode)(clg14.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg14.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg16.getStartNode())).setClassName(ShellTD);
		((CLGStartNode)(clg16.getStartNode())).setMethodName(ShellTD);
		((CLGStartNode)(clg16.getStartNode())).setRetType("String");
		((CLGStartNode)(clg16.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg16.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg2.getStartNode())).setClassName(ShellL);
		((CLGStartNode)(clg2.getStartNode())).setMethodName(ShellL);
		((CLGStartNode)(clg2.getStartNode())).setRetType("String");
		((CLGStartNode)(clg2.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg2.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg134.getStartNode())).setClassName(Label1T);
		((CLGStartNode)(clg134.getStartNode())).setMethodName(Label1T);
		((CLGStartNode)(clg134.getStartNode())).setRetType("String");
		((CLGStartNode)(clg134.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg134.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg49.getStartNode())).setClassName(Label1B);
		((CLGStartNode)(clg49.getStartNode())).setMethodName(Label1B);
		((CLGStartNode)(clg49.getStartNode())).setRetType("String");
		((CLGStartNode)(clg49.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg49.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg51.getStartNode())).setClassName(Label1E);
		((CLGStartNode)(clg51.getStartNode())).setMethodName(Label1E);
		((CLGStartNode)(clg51.getStartNode())).setRetType("String");
		((CLGStartNode)(clg51.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg51.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg53.getStartNode())).setClassName(Label1TD);
		((CLGStartNode)(clg53.getStartNode())).setMethodName(Label1TD);
		((CLGStartNode)(clg53.getStartNode())).setRetType("String");
		((CLGStartNode)(clg53.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg53.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg55.getStartNode())).setClassName(Label1A);
		((CLGStartNode)(clg55.getStartNode())).setMethodName(Label1A);
		((CLGStartNode)(clg55.getStartNode())).setRetType("String");
		((CLGStartNode)(clg55.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg55.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg57.getStartNode())).setClassName(Label1TH);
		((CLGStartNode)(clg57.getStartNode())).setMethodName(Label1TH);
		((CLGStartNode)(clg57.getStartNode())).setRetType("String");
		((CLGStartNode)(clg57.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg57.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg384.getStartNode())).setClassName(Label2T);
		((CLGStartNode)(clg384.getStartNode())).setMethodName(Label2T);
		((CLGStartNode)(clg384.getStartNode())).setRetType("String");
		((CLGStartNode)(clg384.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg384.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg549.getStartNode())).setClassName(Label2B);
		((CLGStartNode)(clg549.getStartNode())).setMethodName(Label2B);
		((CLGStartNode)(clg549.getStartNode())).setRetType("String");
		((CLGStartNode)(clg549.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg549.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg551.getStartNode())).setClassName(Label2E);
		((CLGStartNode)(clg551.getStartNode())).setMethodName(Label2E);
		((CLGStartNode)(clg551.getStartNode())).setRetType("String");
		((CLGStartNode)(clg551.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg551.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg553.getStartNode())).setClassName(Label2TD);
		((CLGStartNode)(clg553.getStartNode())).setMethodName(Label2TD);
		((CLGStartNode)(clg553.getStartNode())).setRetType("String");
		((CLGStartNode)(clg553.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg553.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg555.getStartNode())).setClassName(Label2A);
		((CLGStartNode)(clg555.getStartNode())).setMethodName(Label2A);
		((CLGStartNode)(clg555.getStartNode())).setRetType("String");
		((CLGStartNode)(clg555.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg555.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg557.getStartNode())).setClassName(Label2TH);
		((CLGStartNode)(clg557.getStartNode())).setMethodName(Label2TH);
		((CLGStartNode)(clg557.getStartNode())).setRetType("String");
		((CLGStartNode)(clg557.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg557.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg222.getStartNode())).setClassName(Text1B);
		((CLGStartNode)(clg222.getStartNode())).setMethodName(Text1B);
		((CLGStartNode)(clg222.getStartNode())).setRetType("String");
		((CLGStartNode)(clg222.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg222.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg251.getStartNode())).setClassName(Text1E);
		((CLGStartNode)(clg251.getStartNode())).setMethodName(Text1E);
		((CLGStartNode)(clg251.getStartNode())).setRetType("String");
		((CLGStartNode)(clg251.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg251.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg255.getStartNode())).setClassName(Text1ED);
		((CLGStartNode)(clg255.getStartNode())).setMethodName(Text1ED);
		((CLGStartNode)(clg255.getStartNode())).setRetType("String");
		((CLGStartNode)(clg255.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg255.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg260.getStartNode())).setClassName(Text1TH);
		((CLGStartNode)(clg260.getStartNode())).setMethodName(Text1TH);
		((CLGStartNode)(clg260.getStartNode())).setRetType("String");
		((CLGStartNode)(clg260.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg260.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg263.getStartNode())).setClassName(Text1TD);
		((CLGStartNode)(clg263.getStartNode())).setMethodName(Text1TD);
		((CLGStartNode)(clg263.getStartNode())).setRetType("String");
		((CLGStartNode)(clg263.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg263.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg271.getStartNode())).setClassName(Text1T);
		((CLGStartNode)(clg271.getStartNode())).setMethodName(Text1T);
		((CLGStartNode)(clg271.getStartNode())).setRetType("String");
		((CLGStartNode)(clg271.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg271.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg472.getStartNode())).setClassName(Text2B);
		((CLGStartNode)(clg472.getStartNode())).setMethodName(Text2B);
		((CLGStartNode)(clg472.getStartNode())).setRetType("String");
		((CLGStartNode)(clg472.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg472.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg501.getStartNode())).setClassName(Text2E);
		((CLGStartNode)(clg501.getStartNode())).setMethodName(Text2E);
		((CLGStartNode)(clg501.getStartNode())).setRetType("String");
		((CLGStartNode)(clg501.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg501.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg505.getStartNode())).setClassName(Text2ED);
		((CLGStartNode)(clg505.getStartNode())).setMethodName(Text2ED);
		((CLGStartNode)(clg505.getStartNode())).setRetType("String");
		((CLGStartNode)(clg505.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg505.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg510.getStartNode())).setClassName(Text2TH);
		((CLGStartNode)(clg510.getStartNode())).setMethodName(Text2TH);
		((CLGStartNode)(clg510.getStartNode())).setRetType("String");
		((CLGStartNode)(clg510.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg510.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg513.getStartNode())).setClassName(Text2TD);
		((CLGStartNode)(clg513.getStartNode())).setMethodName(Text2TD);
		((CLGStartNode)(clg513.getStartNode())).setRetType("String");
		((CLGStartNode)(clg513.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg513.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg521.getStartNode())).setClassName(Text2T);
		((CLGStartNode)(clg521.getStartNode())).setMethodName(Text2T);
		((CLGStartNode)(clg521.getStartNode())).setRetType("String");
		((CLGStartNode)(clg521.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg521.getStartNode())).setMethodParameterTypes(MPTAL);

		((CLGStartNode)(clg275.getStartNode())).setClassName(ButtonT);
		((CLGStartNode)(clg275.getStartNode())).setMethodName(ButtonT);
		((CLGStartNode)(clg275.getStartNode())).setRetType("String");
		((CLGStartNode)(clg275.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg275.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg353.getStartNode())).setClassName(ButtonB);
		((CLGStartNode)(clg353.getStartNode())).setMethodName(ButtonB);
		((CLGStartNode)(clg353.getStartNode())).setRetType("String");
		((CLGStartNode)(clg353.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg353.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg358.getStartNode())).setClassName(ButtonE);
		((CLGStartNode)(clg358.getStartNode())).setMethodName(ButtonE);
		((CLGStartNode)(clg358.getStartNode())).setRetType("String");
		((CLGStartNode)(clg358.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg358.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg362.getStartNode())).setClassName(ButtonTD);
		((CLGStartNode)(clg362.getStartNode())).setMethodName(ButtonTD);
		((CLGStartNode)(clg362.getStartNode())).setRetType("String");
		((CLGStartNode)(clg362.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg362.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg366.getStartNode())).setClassName(ButtonA);
		((CLGStartNode)(clg366.getStartNode())).setMethodName(ButtonA);
		((CLGStartNode)(clg366.getStartNode())).setRetType("String");
		((CLGStartNode)(clg366.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg366.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg370.getStartNode())).setClassName(ButtonG);
		((CLGStartNode)(clg370.getStartNode())).setMethodName(ButtonG);
		((CLGStartNode)(clg370.getStartNode())).setRetType("String");
		((CLGStartNode)(clg370.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg370.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg374.getStartNode())).setClassName(ButtonTH);
		((CLGStartNode)(clg374.getStartNode())).setMethodName(ButtonTH);
		((CLGStartNode)(clg374.getStartNode())).setRetType("String");
		((CLGStartNode)(clg374.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg374.getStartNode())).setMethodParameterTypes(MPTAL);
		
		((CLGStartNode)(clg378.getStartNode())).setClassName(ButtonSL);
		((CLGStartNode)(clg378.getStartNode())).setMethodName(ButtonSL);
		((CLGStartNode)(clg378.getStartNode())).setRetType("String");
		((CLGStartNode)(clg378.getStartNode())).setMethodParameters(MPAL);
		((CLGStartNode)(clg378.getStartNode())).setMethodParameterTypes(MPTAL);

		Main.symbolTable =  ST;
	    
		//設定外掛參數與檔案儲存位置
		BlackBoxHandler.coverageCriteria = "DCC";
		Main.criterion = Criterion.dcc;
		Main.TestType = "BlackBox";
		Main.typeTable = new TypeTable();
		Main.typeTable.init();
		Main.boundary_analysis = true;
		String test_output_path = "C:\\Users\\Benson\\Downloads\\TD\\TD3\\";
		DataWriter.testPath_output_path = test_output_path;
		DataWriter.testCons_output_path = test_output_path;
		DataWriter.testData_output_path = test_output_path;
		DataWriter.output_folder_path = test_output_path;		
		DataWriter.Clg_output_path = test_output_path;
		
		try {
			CLG2Path clgp = new CLG2Path();
			//clgp.init(Gnodes);
			for (int i = 0; i <= 39 ; i++) {
				clgp.genTestData(Gnodes, i);
			}
		} catch (IOException | ParserConfigurationException | SAXException | TemplateException | ModelAccessException
				| ParseException | EclipseException | TransformerException | CloneNotSupportedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		System.out.print(System.currentTimeMillis()-startTime);
		
	}
}
